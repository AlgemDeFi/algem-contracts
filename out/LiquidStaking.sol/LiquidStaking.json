{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "era",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "ClaimDappError",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eraStakerReward",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_era",
          "type": "uint256"
        }
      ],
      "name": "ClaimDappSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "utility",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "era",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "ClaimStakerError",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "era",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lastClaimed",
          "type": "uint256"
        }
      ],
      "name": "ClaimStakerSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "utility",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ClaimedFromUtility",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "FillRewardPool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "FillUnbonded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "FillUnstaking",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "utility",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "HarvestRewards",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "SetMinStakeAmount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "utility",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "StakedInUtility",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "era",
          "type": "uint256"
        }
      ],
      "name": "Synchronization",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "utility",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sum2unstake",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "era",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "UnbondAndUnstakeError",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "era",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sum2unstake",
          "type": "uint256"
        }
      ],
      "name": "UnbondAndUnstakeSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "immediate",
          "type": "bool"
        }
      ],
      "name": "Unstaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "utility",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "immediate",
          "type": "bool"
        }
      ],
      "name": "UnstakedFromUtility",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawRevenue",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_era",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "WithdrawUnbondedError",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_era",
          "type": "uint256"
        }
      ],
      "name": "WithdrawUnbondedSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "DAPPS_STAKING",
      "outputs": [
        {
          "internalType": "contract DappsStaking",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DNTname",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MANAGEMENT_FEE",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MANAGER",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REVENUE_FEE",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REWARDS_PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UNSTAKING_FEE",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "accumulatedRewardsPerShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "adaptersDistr",
      "outputs": [
        {
          "internalType": "contract IAdaptersDistributor",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "buffer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimingTxLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentEra",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "dapps",
      "outputs": [
        {
          "internalType": "address",
          "name": "dappAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "stakedBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sum2unstake",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dappsList",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "deactivationEra",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distr",
      "outputs": [
        {
          "internalType": "contract NDistributor",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dntToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "eraBuffer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "eraRevenue",
      "outputs": [
        {
          "internalType": "bool",
          "name": "done",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "eraRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eraShotsLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "eraStakerReward",
      "outputs": [
        {
          "internalType": "bool",
          "name": "done",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "eraUnstaked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "done",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_utility",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_era",
          "type": "uint256"
        }
      ],
      "name": "getStaker",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "eraBalance_",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isZeroBalance_",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "rewards_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastClaimedEra_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserWithdrawals",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "eraReq",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lag",
              "type": "uint256"
            }
          ],
          "internalType": "struct LiquidStakingStorage.Withdrawal[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserWithdrawalsArray",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "eraReq",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lag",
              "type": "uint256"
            }
          ],
          "internalType": "struct LiquidStakingStorage.Withdrawal[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "haveUtility",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_DNTname",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_utilName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_distrAddr",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "isActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isLpToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isPartner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isStaker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isUnstakes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastEraTotalBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastUnstaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastUpdated",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidStakingManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lpHandlers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lpTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minStakeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftDistr",
      "outputs": [
        {
          "internalType": "contract INFTDistributor",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "partnerIdx",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "partners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "partnersLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_liquidStakingManager",
          "type": "address"
        }
      ],
      "name": "setLiquidStakingManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setMinStakeAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "eraStarted",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sum2unstake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalRevenue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "totalUserRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unbondedPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unstakingPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "usersShotsPerEra",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "utilName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "withdrawals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "eraReq",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lag",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001961001e565b6100de565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100dc576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b61237a80620000ee6000396000f3fe60806040526004361061041e5760003560e01c80636f68f2e91161021e578063c4e137e711610123578063e09c1954116100ab578063eb51a44c1161007a578063eb51a44c14610de3578063f128f63114610e1d578063f188768414610e33578063fbd73b9314610e49578063fd5e6dd114610e695761042d565b8063e09c195414610d57578063e2e836f814610d8d578063e77ee34514610dad578063eb4af04514610dc35761042d565b8063d0b06f5d116100f2578063d0b06f5d14610c6b578063d547741f14610c81578063d6356ff414610ca1578063da3bc95814610cc1578063dcf425df14610ce15761042d565b8063c4e137e714610bc0578063c6ecccb814610bfa578063c71367b514610c1a578063c8902a2114610c305761042d565b8063a5ae02ac116101a6578063af66c36b11610175578063af66c36b14610b34578063bd1bbd3b14610b4a578063bf2d9e0b14610b6a578063c21a727614610b80578063c3b49d0414610ba05761042d565b8063a5ae02ac14610ac6578063ab48692914610af3578063ad7a672f14610b08578063adc1b95614610b1e5761042d565b806391d14854116101ed57806391d1485414610a22578063973628f614610a42578063a217fddf14610a57578063a2ce0f4a14610a6c578063a44bca8e14610a995761042d565b80636f68f2e9146109895780638456cb59146109c457806386b3cd26146109d95780638c0f9aac146109f25761042d565b8063331d437b1161032457806359601ebc116102ac5780635f1554e31161027b5780635f1554e3146108f857806366666aa91461090d5780636bbea766146109235780636f1e8533146109435780636f5e4488146109735761042d565b806359601ebc1461088c57806359b40f41146108a15780635c975abb146108b75780635ca5914e146108d85761042d565b8063422b1077116102f3578063422b1077146107c65780634421bd1e146108015780634d617451146108285780635495ec811461083e57806354b057f9146108545761042d565b8063331d437b1461074d57806336568abe1461076f5780633f4ba83a1461078f57806340bf8a8d146107a45761042d565b80631bb5e2dc116103a75780632a14d8f4116103765780632a14d8f41461066a5780632e1a7d4d146106a25780632e4a4a17146106c25780632ea31bf6146106dc5780632f2ff15d1461072d5761042d565b80631bb5e2dc146105d75780631dc00785146105f757806324025b1914610624578063248a9ca31461063a5761042d565b80630f24ca7d116103ee5780630f24ca7d146104e65780630f80b5921461051657806312a12a061461055657806316934fc41461056c5780631b2df850146105b55761042d565b8062179fbd1461043557806301ffc9a71461045e57806305e2a2171461048e578063077f224a146104c65761042d565b3661042d5761042b610e89565b005b61042b610e89565b34801561044157600080fd5b5061044b60b75481565b6040519081526020015b60405180910390f35b34801561046a57600080fd5b5061047e610479366004611fb2565b610e9b565b6040519015158152602001610455565b34801561049a57600080fd5b5060a6546104ae906001600160a01b031681565b6040516001600160a01b039091168152602001610455565b3480156104d257600080fd5b5061042b6104e136600461206d565b610ed2565b3480156104f257600080fd5b5061047e610501366004611ed4565b60aa6020526000908152604090205460ff1681565b34801561052257600080fd5b50610536610531366004612015565b611243565b604080519485529215156020850152918301526060820152608001610455565b34801561056257600080fd5b5061044b60a85481565b34801561057857600080fd5b506105a0610587366004611ed4565b609e602052600090815260409020805460019091015482565b60408051928352602083019190915201610455565b3480156105c157600080fd5b5061044b60008051602061232583398151915281565b3480156105e357600080fd5b506104ae6105f2366004611f6b565b6112b7565b34801561060357600080fd5b5061044b610612366004611f6b565b60ac6020526000908152604090205481565b34801561063057600080fd5b5061044b609a5481565b34801561064657600080fd5b5061044b610655366004611f6b565b60009081526065602052604090206001015490565b34801561067657600080fd5b5061044b610685366004611fda565b805160208183018101805160c38252928201919093012091525481565b3480156106ae57600080fd5b5061042b6106bd366004611f6b565b6112e1565b3480156106ce57600080fd5b5060b65461047e9060ff1681565b3480156106e857600080fd5b506107166106f7366004611f6b565b60a1602052600090815260409020805460019091015460ff9091169082565b604080519215158352602083019190915201610455565b34801561073957600080fd5b5061042b610748366004611f83565b6112ef565b34801561075957600080fd5b50610762611319565b604051610455919061218b565b34801561077b57600080fd5b5061042b61078a366004611f83565b6113a1565b34801561079b57600080fd5b5061042b61141f565b3480156107b057600080fd5b506107b961148d565b60405161045591906121e4565b3480156107d257600080fd5b506107e66107e1366004611f0c565b61151b565b60408051938452602084019290925290820152606001610455565b34801561080d57600080fd5b50610816600981565b60405160ff9091168152602001610455565b34801561083457600080fd5b5061044b60bb5481565b34801561084a57600080fd5b5061044b60a95481565b34801561086057600080fd5b5061044b61086f366004611f0c565b60ae60209081526000928352604080842090915290825290205481565b34801561089857600080fd5b50610816600181565b3480156108ad57600080fd5b506104ae61500181565b3480156108c357600080fd5b5060c75461047e90600160a01b900460ff1681565b3480156108e457600080fd5b5060c7546104ae906001600160a01b031681565b34801561090457600080fd5b50610816600a81565b34801561091957600080fd5b5061044b609c5481565b34801561092f57600080fd5b50609d546104ae906001600160a01b031681565b34801561094f57600080fd5b5061047e61095e366004611ed4565b60a76020526000908152604090205460ff1681565b34801561097f57600080fd5b5061044b609b5481565b34801561099557600080fd5b5061047e6109a4366004611fda565b805160208183018101805160c18252928201919093012091525460ff1681565b3480156109d057600080fd5b5061042b61155d565b3480156109e557600080fd5b5061044b64e8d4a5100081565b3480156109fe57600080fd5b5061047e610a0d366004611ed4565b60b86020526000908152604090205460ff1681565b348015610a2e57600080fd5b5061047e610a3d366004611f83565b6115d6565b348015610a4e57600080fd5b5061044b611601565b348015610a6357600080fd5b5061044b600081565b348015610a7857600080fd5b5061044b610a87366004611f6b565b60c46020526000908152604090205481565b348015610aa557600080fd5b5061044b610ab4366004611ed4565b60b06020526000908152604090205481565b348015610ad257600080fd5b5061044b610ae1366004611ed4565b60b96020526000908152604090205481565b348015610aff57600080fd5b506107b961167b565b348015610b1457600080fd5b5061044b60995481565b348015610b2a57600080fd5b5061044b60b35481565b348015610b4057600080fd5b5061044b60b55481565b348015610b5657600080fd5b5060c5546104ae906001600160a01b031681565b348015610b7657600080fd5b5061044b60ad5481565b348015610b8c57600080fd5b5061044b610b9b366004611f6b565b611688565b348015610bac57600080fd5b506104ae610bbb366004611f6b565b61169f565b348015610bcc57600080fd5b50610716610bdb366004611f6b565b60a0602052600090815260409020805460019091015460ff9091169082565b348015610c0657600080fd5b50610762610c15366004611ed4565b6116af565b348015610c2657600080fd5b5061044b60a35481565b348015610c3c57600080fd5b5061047e610c4b366004611fda565b805160208183018101805160c28252928201919093012091525460ff1681565b348015610c7757600080fd5b5061044b60a45481565b348015610c8d57600080fd5b5061042b610c9c366004611f83565b611742565b348015610cad57600080fd5b5061044b610cbc366004611f37565b611767565b348015610ccd57600080fd5b506107b9610cdc366004611f6b565b6117a5565b348015610ced57600080fd5b50610d32610cfc366004611fda565b805160208183018101805160c0825292820191909301209152805460018201546002909201546001600160a01b03909116919083565b604080516001600160a01b039094168452602084019290925290820152606001610455565b348015610d6357600080fd5b506104ae610d72366004611ed4565b60b1602052600090815260409020546001600160a01b031681565b348015610d9957600080fd5b5060c6546104ae906001600160a01b031681565b348015610db957600080fd5b5061044b60bc5481565b348015610dcf57600080fd5b5061042b610dde366004611f6b565b6117d0565b348015610def57600080fd5b50610716610dfe366004611f6b565b60a2602052600090815260409020805460019091015460ff9091169082565b348015610e2957600080fd5b5061044b60b25481565b348015610e3f57600080fd5b5061044b60b45481565b348015610e5557600080fd5b5061042b610e64366004611ed4565b611876565b348015610e7557600080fd5b506104ae610e84366004611f6b565b611948565b610e99610e94611958565b611a4c565b565b60006001600160e01b03198216637965db0b60e01b1480610ecc57506301ffc9a760e01b6001600160e01b03198316145b92915050565b600054610100900460ff1615808015610ef25750600054600160ff909116105b80610f0c5750303b158015610f0c575060005460ff166001145b610f745760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610f97576000805461ff0019166101001790555b6001600160a01b0382163b610ffc5760405162461bcd60e51b815260206004820152602560248201527f5f6469737472416464722073686f756c6420626520636f6e7472616374206164604482015264647265737360d81b6064820152608401610f6b565b835161100f906098906020870190611db4565b508251611023906097906020860190611db4565b5060006001611030611601565b61103a919061224e565b9050611047600033611a70565b61105f60008051602061232583398151915233611a70565b611069600a6117d0565b6150016001600160a01b031663db62b2016040518163ffffffff1660e01b815260040160206040518083038186803b1580156110a457600080fd5b505afa1580156110b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110dc91906120e2565b609a55609d80546001600160a01b0319166001600160a01b03851617905560a481905560a881905560a981905560b381905560bf80546001810182556000919091528451611151917fb52cf138a3505dc3d3cd84a77912f4be1a33df2c3065d3e4cb37fb1d5d1b507201906020870190611db4565b50600160c18560405161116491906120fa565b908152604051908190036020018120805492151560ff199093169290921790915560019060c2906111969087906120fa565b908152604051908190036020018120805492151560ff1990931692909217909155309060c0906111c79087906120fa565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b031990921691909117905550801561123d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b600080600080600060c08860405161125b91906120fa565b90815260408051602092819003830190206001600160a01b039990991660009081526003998a0183528181209881528883528181205460018a01909352205460028801549790980154909960ff90981698509596945050505050565b60ab81815481106112c757600080fd5b6000918252602090912001546001600160a01b0316905081565b6112ec610e94611958565b50565b60008281526065602052604090206001015461130a81611af6565b6113148383611a70565b505050565b336000908152609f60209081526040808320805482518185028101850190935280835260609492939192909184015b828210156113985783829060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505081526020019060010190611348565b50505050905090565b6001600160a01b03811633146114115760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610f6b565b61141b8282611b00565b5050565b60008051602061232583398151915261143781611af6565b60c754600160a01b900460ff1661147d5760405162461bcd60e51b815260206004820152600a602482015269139bdd081c185d5cd95960b21b6044820152606401610f6b565b5060c7805460ff60a01b19169055565b6098805461149a906122a8565b80601f01602080910402602001604051908101604052809291908181526020018280546114c6906122a8565b80156115135780601f106114e857610100808354040283529160200191611513565b820191906000526020600020905b8154815290600101906020018083116114f657829003601f168201915b505050505081565b609f602052816000526040600020818154811061153757600080fd5b600091825260209091206003909102018054600182015460029092015490935090915083565b60008051602061232583398151915261157581611af6565b60c754600160a01b900460ff16156115c05760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e481c185d5cd95960921b6044820152606401610f6b565b5060c7805460ff60a01b1916600160a01b179055565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60006150016001600160a01b031663e608d80b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561163e57600080fd5b505afa158015611652573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167691906120e2565b905090565b6097805461149a906122a8565b60bd816002811061169857600080fd5b0154905081565b60ba81815481106112c757600080fd5b6001600160a01b0381166000908152609f60209081526040808320805482518185028101850190935280835260609492939192909184015b8282101561173757838290600052602060002090600302016040518060600160405290816000820154815260200160018201548152602001600282015481525050815260200190600101906116e7565b505050509050919050565b60008281526065602052604090206001015461175d81611af6565b6113148383611b00565b60af602052826000526040600020602052816000526040600020818154811061178f57600080fd5b9060005260206000200160009250925050505481565b60bf81815481106117b557600080fd5b90600052602060002001600091509050805461149a906122a8565b6000805160206123258339815191526117e881611af6565b600082116118385760405162461bcd60e51b815260206004820152601c60248201527f53686f756c642062652067726561746572207468616e207a65726f21000000006044820152606401610f6b565b60b482905560405182815233907f411d99b33932ad14363af29dd9987548b8e4a679725aecf1bf262f406ca165cd9060200160405180910390a25050565b600061188181611af6565b6001600160a01b0382166118ce5760405162461bcd60e51b81526020600482015260146024820152731059191c995cdcc818d85b9d081899481b9d5b1b60621b6044820152606401610f6b565b6001600160a01b0382163b6119255760405162461bcd60e51b815260206004820152601b60248201527f4d616e616765722073686f756c6420626520636f6e74726163742100000000006044820152606401610f6b565b5060c780546001600160a01b0319166001600160a01b0392909216919091179055565b60a581815481106112c757600080fd5b60c754600090600160a01b900460ff1615806119875750611987600080516020612325833981519152336115d6565b6119c55760405162461bcd60e51b815260206004820152600f60248201526e10dbdb9d1c9858dd081c185d5cd959608a1b6044820152606401610f6b565b60c75460405163552aaedb60e01b81526000356001600160e01b03191660048201526001600160a01b039091169063552aaedb9060240160206040518083038186803b158015611a1457600080fd5b505afa158015611a28573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116769190611ef0565b3660008037600080366000845af43d6000803e808015611a6b573d6000f35b3d6000fd5b611a7a82826115d6565b61141b5760008281526065602090815260408083206001600160a01b03851684529091529020805460ff19166001179055611ab23390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6112ec8133611b67565b611b0a82826115d6565b1561141b5760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b611b7182826115d6565b61141b57611b89816001600160a01b03166014611bcb565b611b94836020611bcb565b604051602001611ba5929190612116565b60408051601f198184030181529082905262461bcd60e51b8252610f6b916004016121e4565b60606000611bda83600261222f565b611be5906002612217565b67ffffffffffffffff811115611c0b57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611c35576020820181803683370190505b509050600360fc1b81600081518110611c5e57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611c9b57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000611cbf84600261222f565b611cca906001612217565b90505b6001811115611d5e576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611d0c57634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110611d3057634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93611d5781612291565b9050611ccd565b508315611dad5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610f6b565b9392505050565b828054611dc0906122a8565b90600052602060002090601f016020900481019282611de25760008555611e28565b82601f10611dfb57805160ff1916838001178555611e28565b82800160010185558215611e28579182015b82811115611e28578251825591602001919060010190611e0d565b50611e34929150611e38565b5090565b5b80821115611e345760008155600101611e39565b600082601f830112611e5d578081fd5b813567ffffffffffffffff80821115611e7857611e786122f9565b604051601f8301601f19908116603f01168101908282118183101715611ea057611ea06122f9565b81604052838152866020858801011115611eb8578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215611ee5578081fd5b8135611dad8161230f565b600060208284031215611f01578081fd5b8151611dad8161230f565b60008060408385031215611f1e578081fd5b8235611f298161230f565b946020939093013593505050565b600080600060608486031215611f4b578081fd5b8335611f568161230f565b95602085013595506040909401359392505050565b600060208284031215611f7c578081fd5b5035919050565b60008060408385031215611f95578182fd5b823591506020830135611fa78161230f565b809150509250929050565b600060208284031215611fc3578081fd5b81356001600160e01b031981168114611dad578182fd5b600060208284031215611feb578081fd5b813567ffffffffffffffff811115612001578182fd5b61200d84828501611e4d565b949350505050565b600080600060608486031215612029578283fd5b833567ffffffffffffffff81111561203f578384fd5b61204b86828701611e4d565b935050602084013561205c8161230f565b929592945050506040919091013590565b600080600060608486031215612081578283fd5b833567ffffffffffffffff80821115612098578485fd5b6120a487838801611e4d565b945060208601359150808211156120b9578384fd5b506120c686828701611e4d565b92505060408401356120d78161230f565b809150509250925092565b6000602082840312156120f3578081fd5b5051919050565b6000825161210c818460208701612265565b9190910192915050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161214e816017850160208801612265565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161217f816028840160208801612265565b01602801949350505050565b602080825282518282018190526000919060409081850190868401855b828110156121d757815180518552868101518786015285015185850152606090930192908501906001016121a8565b5091979650505050505050565b6020815260008251806020840152612203816040850160208701612265565b601f01601f19169190910160400192915050565b6000821982111561222a5761222a6122e3565b500190565b6000816000190483118215151615612249576122496122e3565b500290565b600082821015612260576122606122e3565b500390565b60005b83811015612280578181015183820152602001612268565b8381111561123d5750506000910152565b6000816122a0576122a06122e3565b506000190190565b600181811c908216806122bc57607f821691505b602082108114156122dd57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146112ec57600080fdfeaf290d8680820aad922855f39b306097b20e28774d6c1ad35a20325630c3a02ca2646970667358221220a254926eaf50c85dd873c132bbf7e590037081e7e603a747c1fa3b45ad16dddd64736f6c63430008040033",
    "sourceMap": "275:3314:6:-:0;;;633:53;;;;;;;;;-1:-1:-1;657:22:6;:20;:22::i;:::-;275:3314;;5388:279:55;5456:13;;;;;;;5455:14;5447:66;;;;-1:-1:-1;;;5447:66:55;;216:2:94;5447:66:55;;;198:21:94;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:94;;;338:37;392:19;;5447:66:55;;;;;;;;5527:12;;5542:15;5527:12;;;:30;5523:138;;;5573:12;:30;;-1:-1:-1;;5573:30:55;5588:15;5573:30;;;;;;5622:28;;564:36:94;;;5622:28:55;;552:2:94;537:18;5622:28:55;;;;;;;5523:138;5388:279::o;519:87:94:-;275:3314:6;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061041e5760003560e01c80636f68f2e91161021e578063c4e137e711610123578063e09c1954116100ab578063eb51a44c1161007a578063eb51a44c14610de3578063f128f63114610e1d578063f188768414610e33578063fbd73b9314610e49578063fd5e6dd114610e695761042d565b8063e09c195414610d57578063e2e836f814610d8d578063e77ee34514610dad578063eb4af04514610dc35761042d565b8063d0b06f5d116100f2578063d0b06f5d14610c6b578063d547741f14610c81578063d6356ff414610ca1578063da3bc95814610cc1578063dcf425df14610ce15761042d565b8063c4e137e714610bc0578063c6ecccb814610bfa578063c71367b514610c1a578063c8902a2114610c305761042d565b8063a5ae02ac116101a6578063af66c36b11610175578063af66c36b14610b34578063bd1bbd3b14610b4a578063bf2d9e0b14610b6a578063c21a727614610b80578063c3b49d0414610ba05761042d565b8063a5ae02ac14610ac6578063ab48692914610af3578063ad7a672f14610b08578063adc1b95614610b1e5761042d565b806391d14854116101ed57806391d1485414610a22578063973628f614610a42578063a217fddf14610a57578063a2ce0f4a14610a6c578063a44bca8e14610a995761042d565b80636f68f2e9146109895780638456cb59146109c457806386b3cd26146109d95780638c0f9aac146109f25761042d565b8063331d437b1161032457806359601ebc116102ac5780635f1554e31161027b5780635f1554e3146108f857806366666aa91461090d5780636bbea766146109235780636f1e8533146109435780636f5e4488146109735761042d565b806359601ebc1461088c57806359b40f41146108a15780635c975abb146108b75780635ca5914e146108d85761042d565b8063422b1077116102f3578063422b1077146107c65780634421bd1e146108015780634d617451146108285780635495ec811461083e57806354b057f9146108545761042d565b8063331d437b1461074d57806336568abe1461076f5780633f4ba83a1461078f57806340bf8a8d146107a45761042d565b80631bb5e2dc116103a75780632a14d8f4116103765780632a14d8f41461066a5780632e1a7d4d146106a25780632e4a4a17146106c25780632ea31bf6146106dc5780632f2ff15d1461072d5761042d565b80631bb5e2dc146105d75780631dc00785146105f757806324025b1914610624578063248a9ca31461063a5761042d565b80630f24ca7d116103ee5780630f24ca7d146104e65780630f80b5921461051657806312a12a061461055657806316934fc41461056c5780631b2df850146105b55761042d565b8062179fbd1461043557806301ffc9a71461045e57806305e2a2171461048e578063077f224a146104c65761042d565b3661042d5761042b610e89565b005b61042b610e89565b34801561044157600080fd5b5061044b60b75481565b6040519081526020015b60405180910390f35b34801561046a57600080fd5b5061047e610479366004611fb2565b610e9b565b6040519015158152602001610455565b34801561049a57600080fd5b5060a6546104ae906001600160a01b031681565b6040516001600160a01b039091168152602001610455565b3480156104d257600080fd5b5061042b6104e136600461206d565b610ed2565b3480156104f257600080fd5b5061047e610501366004611ed4565b60aa6020526000908152604090205460ff1681565b34801561052257600080fd5b50610536610531366004612015565b611243565b604080519485529215156020850152918301526060820152608001610455565b34801561056257600080fd5b5061044b60a85481565b34801561057857600080fd5b506105a0610587366004611ed4565b609e602052600090815260409020805460019091015482565b60408051928352602083019190915201610455565b3480156105c157600080fd5b5061044b60008051602061232583398151915281565b3480156105e357600080fd5b506104ae6105f2366004611f6b565b6112b7565b34801561060357600080fd5b5061044b610612366004611f6b565b60ac6020526000908152604090205481565b34801561063057600080fd5b5061044b609a5481565b34801561064657600080fd5b5061044b610655366004611f6b565b60009081526065602052604090206001015490565b34801561067657600080fd5b5061044b610685366004611fda565b805160208183018101805160c38252928201919093012091525481565b3480156106ae57600080fd5b5061042b6106bd366004611f6b565b6112e1565b3480156106ce57600080fd5b5060b65461047e9060ff1681565b3480156106e857600080fd5b506107166106f7366004611f6b565b60a1602052600090815260409020805460019091015460ff9091169082565b604080519215158352602083019190915201610455565b34801561073957600080fd5b5061042b610748366004611f83565b6112ef565b34801561075957600080fd5b50610762611319565b604051610455919061218b565b34801561077b57600080fd5b5061042b61078a366004611f83565b6113a1565b34801561079b57600080fd5b5061042b61141f565b3480156107b057600080fd5b506107b961148d565b60405161045591906121e4565b3480156107d257600080fd5b506107e66107e1366004611f0c565b61151b565b60408051938452602084019290925290820152606001610455565b34801561080d57600080fd5b50610816600981565b60405160ff9091168152602001610455565b34801561083457600080fd5b5061044b60bb5481565b34801561084a57600080fd5b5061044b60a95481565b34801561086057600080fd5b5061044b61086f366004611f0c565b60ae60209081526000928352604080842090915290825290205481565b34801561089857600080fd5b50610816600181565b3480156108ad57600080fd5b506104ae61500181565b3480156108c357600080fd5b5060c75461047e90600160a01b900460ff1681565b3480156108e457600080fd5b5060c7546104ae906001600160a01b031681565b34801561090457600080fd5b50610816600a81565b34801561091957600080fd5b5061044b609c5481565b34801561092f57600080fd5b50609d546104ae906001600160a01b031681565b34801561094f57600080fd5b5061047e61095e366004611ed4565b60a76020526000908152604090205460ff1681565b34801561097f57600080fd5b5061044b609b5481565b34801561099557600080fd5b5061047e6109a4366004611fda565b805160208183018101805160c18252928201919093012091525460ff1681565b3480156109d057600080fd5b5061042b61155d565b3480156109e557600080fd5b5061044b64e8d4a5100081565b3480156109fe57600080fd5b5061047e610a0d366004611ed4565b60b86020526000908152604090205460ff1681565b348015610a2e57600080fd5b5061047e610a3d366004611f83565b6115d6565b348015610a4e57600080fd5b5061044b611601565b348015610a6357600080fd5b5061044b600081565b348015610a7857600080fd5b5061044b610a87366004611f6b565b60c46020526000908152604090205481565b348015610aa557600080fd5b5061044b610ab4366004611ed4565b60b06020526000908152604090205481565b348015610ad257600080fd5b5061044b610ae1366004611ed4565b60b96020526000908152604090205481565b348015610aff57600080fd5b506107b961167b565b348015610b1457600080fd5b5061044b60995481565b348015610b2a57600080fd5b5061044b60b35481565b348015610b4057600080fd5b5061044b60b55481565b348015610b5657600080fd5b5060c5546104ae906001600160a01b031681565b348015610b7657600080fd5b5061044b60ad5481565b348015610b8c57600080fd5b5061044b610b9b366004611f6b565b611688565b348015610bac57600080fd5b506104ae610bbb366004611f6b565b61169f565b348015610bcc57600080fd5b50610716610bdb366004611f6b565b60a0602052600090815260409020805460019091015460ff9091169082565b348015610c0657600080fd5b50610762610c15366004611ed4565b6116af565b348015610c2657600080fd5b5061044b60a35481565b348015610c3c57600080fd5b5061047e610c4b366004611fda565b805160208183018101805160c28252928201919093012091525460ff1681565b348015610c7757600080fd5b5061044b60a45481565b348015610c8d57600080fd5b5061042b610c9c366004611f83565b611742565b348015610cad57600080fd5b5061044b610cbc366004611f37565b611767565b348015610ccd57600080fd5b506107b9610cdc366004611f6b565b6117a5565b348015610ced57600080fd5b50610d32610cfc366004611fda565b805160208183018101805160c0825292820191909301209152805460018201546002909201546001600160a01b03909116919083565b604080516001600160a01b039094168452602084019290925290820152606001610455565b348015610d6357600080fd5b506104ae610d72366004611ed4565b60b1602052600090815260409020546001600160a01b031681565b348015610d9957600080fd5b5060c6546104ae906001600160a01b031681565b348015610db957600080fd5b5061044b60bc5481565b348015610dcf57600080fd5b5061042b610dde366004611f6b565b6117d0565b348015610def57600080fd5b50610716610dfe366004611f6b565b60a2602052600090815260409020805460019091015460ff9091169082565b348015610e2957600080fd5b5061044b60b25481565b348015610e3f57600080fd5b5061044b60b45481565b348015610e5557600080fd5b5061042b610e64366004611ed4565b611876565b348015610e7557600080fd5b506104ae610e84366004611f6b565b611948565b610e99610e94611958565b611a4c565b565b60006001600160e01b03198216637965db0b60e01b1480610ecc57506301ffc9a760e01b6001600160e01b03198316145b92915050565b600054610100900460ff1615808015610ef25750600054600160ff909116105b80610f0c5750303b158015610f0c575060005460ff166001145b610f745760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610f97576000805461ff0019166101001790555b6001600160a01b0382163b610ffc5760405162461bcd60e51b815260206004820152602560248201527f5f6469737472416464722073686f756c6420626520636f6e7472616374206164604482015264647265737360d81b6064820152608401610f6b565b835161100f906098906020870190611db4565b508251611023906097906020860190611db4565b5060006001611030611601565b61103a919061224e565b9050611047600033611a70565b61105f60008051602061232583398151915233611a70565b611069600a6117d0565b6150016001600160a01b031663db62b2016040518163ffffffff1660e01b815260040160206040518083038186803b1580156110a457600080fd5b505afa1580156110b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110dc91906120e2565b609a55609d80546001600160a01b0319166001600160a01b03851617905560a481905560a881905560a981905560b381905560bf80546001810182556000919091528451611151917fb52cf138a3505dc3d3cd84a77912f4be1a33df2c3065d3e4cb37fb1d5d1b507201906020870190611db4565b50600160c18560405161116491906120fa565b908152604051908190036020018120805492151560ff199093169290921790915560019060c2906111969087906120fa565b908152604051908190036020018120805492151560ff1990931692909217909155309060c0906111c79087906120fa565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b031990921691909117905550801561123d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b600080600080600060c08860405161125b91906120fa565b90815260408051602092819003830190206001600160a01b039990991660009081526003998a0183528181209881528883528181205460018a01909352205460028801549790980154909960ff90981698509596945050505050565b60ab81815481106112c757600080fd5b6000918252602090912001546001600160a01b0316905081565b6112ec610e94611958565b50565b60008281526065602052604090206001015461130a81611af6565b6113148383611a70565b505050565b336000908152609f60209081526040808320805482518185028101850190935280835260609492939192909184015b828210156113985783829060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505081526020019060010190611348565b50505050905090565b6001600160a01b03811633146114115760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610f6b565b61141b8282611b00565b5050565b60008051602061232583398151915261143781611af6565b60c754600160a01b900460ff1661147d5760405162461bcd60e51b815260206004820152600a602482015269139bdd081c185d5cd95960b21b6044820152606401610f6b565b5060c7805460ff60a01b19169055565b6098805461149a906122a8565b80601f01602080910402602001604051908101604052809291908181526020018280546114c6906122a8565b80156115135780601f106114e857610100808354040283529160200191611513565b820191906000526020600020905b8154815290600101906020018083116114f657829003601f168201915b505050505081565b609f602052816000526040600020818154811061153757600080fd5b600091825260209091206003909102018054600182015460029092015490935090915083565b60008051602061232583398151915261157581611af6565b60c754600160a01b900460ff16156115c05760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e481c185d5cd95960921b6044820152606401610f6b565b5060c7805460ff60a01b1916600160a01b179055565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60006150016001600160a01b031663e608d80b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561163e57600080fd5b505afa158015611652573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167691906120e2565b905090565b6097805461149a906122a8565b60bd816002811061169857600080fd5b0154905081565b60ba81815481106112c757600080fd5b6001600160a01b0381166000908152609f60209081526040808320805482518185028101850190935280835260609492939192909184015b8282101561173757838290600052602060002090600302016040518060600160405290816000820154815260200160018201548152602001600282015481525050815260200190600101906116e7565b505050509050919050565b60008281526065602052604090206001015461175d81611af6565b6113148383611b00565b60af602052826000526040600020602052816000526040600020818154811061178f57600080fd5b9060005260206000200160009250925050505481565b60bf81815481106117b557600080fd5b90600052602060002001600091509050805461149a906122a8565b6000805160206123258339815191526117e881611af6565b600082116118385760405162461bcd60e51b815260206004820152601c60248201527f53686f756c642062652067726561746572207468616e207a65726f21000000006044820152606401610f6b565b60b482905560405182815233907f411d99b33932ad14363af29dd9987548b8e4a679725aecf1bf262f406ca165cd9060200160405180910390a25050565b600061188181611af6565b6001600160a01b0382166118ce5760405162461bcd60e51b81526020600482015260146024820152731059191c995cdcc818d85b9d081899481b9d5b1b60621b6044820152606401610f6b565b6001600160a01b0382163b6119255760405162461bcd60e51b815260206004820152601b60248201527f4d616e616765722073686f756c6420626520636f6e74726163742100000000006044820152606401610f6b565b5060c780546001600160a01b0319166001600160a01b0392909216919091179055565b60a581815481106112c757600080fd5b60c754600090600160a01b900460ff1615806119875750611987600080516020612325833981519152336115d6565b6119c55760405162461bcd60e51b815260206004820152600f60248201526e10dbdb9d1c9858dd081c185d5cd959608a1b6044820152606401610f6b565b60c75460405163552aaedb60e01b81526000356001600160e01b03191660048201526001600160a01b039091169063552aaedb9060240160206040518083038186803b158015611a1457600080fd5b505afa158015611a28573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116769190611ef0565b3660008037600080366000845af43d6000803e808015611a6b573d6000f35b3d6000fd5b611a7a82826115d6565b61141b5760008281526065602090815260408083206001600160a01b03851684529091529020805460ff19166001179055611ab23390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6112ec8133611b67565b611b0a82826115d6565b1561141b5760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b611b7182826115d6565b61141b57611b89816001600160a01b03166014611bcb565b611b94836020611bcb565b604051602001611ba5929190612116565b60408051601f198184030181529082905262461bcd60e51b8252610f6b916004016121e4565b60606000611bda83600261222f565b611be5906002612217565b67ffffffffffffffff811115611c0b57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611c35576020820181803683370190505b509050600360fc1b81600081518110611c5e57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611c9b57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000611cbf84600261222f565b611cca906001612217565b90505b6001811115611d5e576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611d0c57634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110611d3057634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93611d5781612291565b9050611ccd565b508315611dad5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610f6b565b9392505050565b828054611dc0906122a8565b90600052602060002090601f016020900481019282611de25760008555611e28565b82601f10611dfb57805160ff1916838001178555611e28565b82800160010185558215611e28579182015b82811115611e28578251825591602001919060010190611e0d565b50611e34929150611e38565b5090565b5b80821115611e345760008155600101611e39565b600082601f830112611e5d578081fd5b813567ffffffffffffffff80821115611e7857611e786122f9565b604051601f8301601f19908116603f01168101908282118183101715611ea057611ea06122f9565b81604052838152866020858801011115611eb8578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215611ee5578081fd5b8135611dad8161230f565b600060208284031215611f01578081fd5b8151611dad8161230f565b60008060408385031215611f1e578081fd5b8235611f298161230f565b946020939093013593505050565b600080600060608486031215611f4b578081fd5b8335611f568161230f565b95602085013595506040909401359392505050565b600060208284031215611f7c578081fd5b5035919050565b60008060408385031215611f95578182fd5b823591506020830135611fa78161230f565b809150509250929050565b600060208284031215611fc3578081fd5b81356001600160e01b031981168114611dad578182fd5b600060208284031215611feb578081fd5b813567ffffffffffffffff811115612001578182fd5b61200d84828501611e4d565b949350505050565b600080600060608486031215612029578283fd5b833567ffffffffffffffff81111561203f578384fd5b61204b86828701611e4d565b935050602084013561205c8161230f565b929592945050506040919091013590565b600080600060608486031215612081578283fd5b833567ffffffffffffffff80821115612098578485fd5b6120a487838801611e4d565b945060208601359150808211156120b9578384fd5b506120c686828701611e4d565b92505060408401356120d78161230f565b809150509250925092565b6000602082840312156120f3578081fd5b5051919050565b6000825161210c818460208701612265565b9190910192915050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161214e816017850160208801612265565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161217f816028840160208801612265565b01602801949350505050565b602080825282518282018190526000919060409081850190868401855b828110156121d757815180518552868101518786015285015185850152606090930192908501906001016121a8565b5091979650505050505050565b6020815260008251806020840152612203816040850160208701612265565b601f01601f19169190910160400192915050565b6000821982111561222a5761222a6122e3565b500190565b6000816000190483118215151615612249576122496122e3565b500290565b600082821015612260576122606122e3565b500390565b60005b83811015612280578181015183820152602001612268565b8381111561123d5750506000910152565b6000816122a0576122a06122e3565b506000190190565b600181811c908216806122bc57607f821691505b602082108114156122dd57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146112ec57600080fdfeaf290d8680820aad922855f39b306097b20e28774d6c1ad35a20325630c3a02ca2646970667358221220a254926eaf50c85dd873c132bbf7e590037081e7e603a747c1fa3b45ad16dddd64736f6c63430008040033",
    "sourceMapi;:::-;275:3314:6;;2675:11:81;:9;:11::i;3956:27:11:-;;;;;;;;;;;;;;;;;;;7942:25:94;;;7930:2;7915:18;3956:27:11;;;;;;;;2903:213:51;;;;;;;;;;-1:-1:-1;2903:213:51;;;;;:::i;:::-;;:::i;:::-;;;7506:14:94;;7499:22;7481:41;;7469:2;7454:18;2903:213:51;7436:92:94;2627:23:11;;;;;;;;;;-1:-1:-1;2627:23:11;;;;-1:-1:-1;;;;;2627:23:11;;;;;;-1:-1:-1;;;;;6090:32:94;;;6072:51;;6060:2;6045:18;2627:23:11;6027:102:94;692:833:6;;;;;;;;;;-1:-1:-1;692:833:6;;;;;:::i;:::-;;:::i;2915:41:11:-;;;;;;;;;;-1:-1:-1;2915:41:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;2860:408:6;;;;;;;;;;-1:-1:-1;2860:408:6;;;;;:::i;:::-;;:::i;:::-;;;;13796:25:94;;;13864:14;;13857:22;13852:2;13837:18;;13830:50;13896:18;;;13889:34;13954:2;13939:18;;13932:34;13783:3;13768:19;2860:408:6;13750:222:94;2755:22:11;;;;;;;;;;;;;;;;1419:39;;;;;;;;;;-1:-1:-1;1419:39:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;14151:25:94;;;14207:2;14192:18;;14185:34;;;;14124:18;1419:39:11;14106:119:94;680:54:11;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;680:54:11;;3014:25;;;;;;;;;;-1:-1:-1;3014:25:11;;;;;:::i;:::-;;:::i;3098:39::-;;;;;;;;;;-1:-1:-1;3098:39:11;;;;;:::i;:::-;;;;;;;;;;;;;;896:25;;;;;;;;;;;;;;;;4721:129:51;;;;;;;;;;-1:-1:-1;4721:129:51;;;;;:::i;:::-;4795:7;4821:12;;;:6;:12;;;;;:22;;;;4721:129;5359:49:11;;;;;;;;;;-1:-1:-1;5359:49:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2772:82:6;;;;;;;;;;-1:-1:-1;2772:82:6;;;;;:::i;:::-;;:::i;3876:22:11:-;;;;;;;;;;-1:-1:-1;3876:22:11;;;;;;;;2167:47;;;;;;;;;;-1:-1:-1;2167:47:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7726:14:94;;7719:22;7701:41;;7773:2;7758:18;;7751:34;;;;7674:18;2167:47:11;7656:135:94;5146:145:51;;;;;;;;;;-1:-1:-1;5146:145:51;;;;;:::i;:::-;;:::i;3326:121:6:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;6255:214:51:-;;;;;;;;;;-1:-1:-1;6255:214:51;;;;;:::i;:::-;;:::i;1655:116:6:-;;;;;;;;;;;;;:::i;810:21:11:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1595:51::-;;;;;;;;;;-1:-1:-1;1595:51:11;;;;;:::i;:::-;;:::i;:::-;;;;14432:25:94;;;14488:2;14473:18;;14466:34;;;;14516:18;;;14509:34;14420:2;14405:18;1595:51:11;14387:162:94;3999:37:11;;;;;;;;;;;;4035:1;3999:37;;;;;9298:4:94;9286:17;;;9268:36;;9256:2;9241:18;3999:37:11;9223:87:94;4650:25:11;;;;;;;;;;;;;;;;2783:24;;;;;;;;;;;;;;;;3227:55;;;;;;;;;;-1:-1:-1;3227:55:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;4070:39;;;;;;;;;;;;4108:1;4070:39;;565:109;;;;;;;;;;;;631:42;565:109;;5664:18;;;;;;;;;;-1:-1:-1;5664:18:11;;;;-1:-1:-1;;;5664:18:11;;;;;;5622:35;;;;;;;;;;-1:-1:-1;5622:35:11;;;;-1:-1:-1;;;;;5622:35:11;;;4143:41;;;;;;;;;;;;4182:2;4143:41;;987:22;;;;;;;;;;;;;;;;1049:25;;;;;;;;;;-1:-1:-1;1049:25:11;;;;-1:-1:-1;;;;;1049:25:11;;;2656:40;;;;;;;;;;-1:-1:-1;2656:40:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;956:25;;;;;;;;;;;;;;;;5266:42;;;;;;;;;;-1:-1:-1;5266:42:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1531:118:6;;;;;;;;;;;;;:::i;5482:48:11:-;;;;;;;;;;;;5526:4;5482:48;;4368:41;;;;;;;;;;-1:-1:-1;4368:41:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;3203:145:51;;;;;;;;;;-1:-1:-1;3203:145:51;;;;;:::i;:::-;;:::i;7333:105:11:-;;;;;;;;;;;;;:::i;2324:49:51:-;;;;;;;;;;-1:-1:-1;2324:49:51;2369:4;2324:49;;5414:61:11;;;;;;;;;;-1:-1:-1;5414:61:11;;;;;:::i;:::-;;;;;;;;;;;;;;3413:48;;;;;;;;;;-1:-1:-1;3413:48:11;;;;;:::i;:::-;;;;;;;;;;;;;;4467:42;;;;;;;;;;-1:-1:-1;4467:42:11;;;;;:::i;:::-;;;;;;;;;;;;;;782:22;;;;;;;;;;;;;:::i;866:24::-;;;;;;;;;;;;;;;;3706:23;;;;;;;;;;;;;;;;3795;;;;;;;;;;;;;;;;5537:31;;;;;;;;;;-1:-1:-1;5537:31:11;;;;-1:-1:-1;;;;;5537:31:11;;;3144:24;;;;;;;;;;;;;;;;5134:27;;;;;;;;;;-1:-1:-1;5134:27:11;;;;;:::i;:::-;;:::i;4515:25::-;;;;;;;;;;-1:-1:-1;4515:25:11;;;;;:::i;:::-;;:::i;2066:43::-;;;;;;;;;;-1:-1:-1;2066:43:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;3453:134:6;;;;;;;;;;-1:-1:-1;3453:134:6;;;;;:::i;:::-;;:::i;2378:24:11:-;;;;;;;;;;;;;;;;5314:39;;;;;;;;;;-1:-1:-1;5314:39:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2409:23;;;;;;;;;;;;;;;;5571:147:51;;;;;;;;;;-1:-1:-1;5571:147:51;;;;;:::i;:::-;;:::i;3288:67:11:-;;;;;;;;;;-1:-1:-1;3288:67:11;;;;;:::i;:::-;;:::i;5168:25::-;;;;;;;;;;-1:-1:-1;5168:25:11;;;;;:::i;:::-;;:::i;5224:36::-;;;;;;;;;;-1:-1:-1;5224:36:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5224:36:11;;;;;;;;;;;-1:-1:-1;;;;;6354:32:94;;;6336:51;;6418:2;6403:18;;6396:34;;;;6446:18;;;6439:34;6324:2;6309:18;5224:36:11;6291:188:94;3519:45:11;;;;;;;;;;-1:-1:-1;3519:45:11;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3519:45:11;;;5574:41;;;;;;;;;;-1:-1:-1;5574:41:11;;;;-1:-1:-1;;;;;5574:41:11;;;5094:34;;;;;;;;;;;;;;;;2194:222:6;;;;;;;;;;-1:-1:-1;2194:222:6;;;;;:::i;:::-;;:::i;2304:42:11:-;;;;;;;;;;-1:-1:-1;2304:42:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;3571:25;;;;;;;;;;;;;;;;3735:26;;;;;;;;;;;;;;;;1778:325:6;;;;;;;;;;-1:-1:-1;1778:325:6;;;;;:::i;:::-;;:::i;2545:24:11:-;;;;;;;;;;-1:-1:-1;2545:24:11;;;;;:::i;:::-;;:::i;2322:110:81:-;2397:28;2407:17;:15;:17::i;:::-;2397:9;:28::i;:::-;2322:110::o;2903:213:51:-;2988:4;-1:-1:-1;;;;;;3011:58:51;;-1:-1:-1;;;3011:58:51;;:98;;-1:-1:-1;;;;;;;;;;1168:51:76;;;3073:36:51;3004:105;2903:213;-1:-1:-1;;2903:213:51:o;692:833:6:-;3111:19:55;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:55;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:55;1476:19:72;:23;;;3219:66:55;;-1:-1:-1;3268:12:55;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:55;;12011:2:94;3157:201:55;;;11993:21:94;12050:2;12030:18;;;12023:30;12089:34;12069:18;;;12062:62;-1:-1:-1;;;12140:18:94;;;12133:44;12194:19;;3157:201:55;;;;;;;;;3368:12;:16;;-1:-1:-1;;3368:16:55;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:55;;;;;3394:65;-1:-1:-1;;;;;850:21:6;::::1;1476:19:72::0;842:73:6::1;;;::::0;-1:-1:-1;;;842:73:6;;12769:2:94;842:73:6::1;::::0;::::1;12751:21:94::0;12808:2;12788:18;;;12781:30;12847:34;12827:18;;;12820:62;-1:-1:-1;;;12898:18:94;;;12891:35;12943:19;;842:73:6::1;12741:227:94::0;842:73:6::1;925:18:::0;;::::1;::::0;:7:::1;::::0;:18:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;953:20:6;;::::1;::::0;:8:::1;::::0;:20:::1;::::0;::::1;::::0;::::1;:::i;:::-;;984:11;1013:1;998:12;:10;:12::i;:::-;:16;;;;:::i;:::-;984:30:::0;-1:-1:-1;1024:42:6::1;2369:4:51;1055:10:6;1024;:42::i;:::-;1076:31;-1:-1:-1::0;;;;;;;;;;;1096:10:6::1;1076;:31::i;:::-;1117:21;1135:2;1117:17;:21::i;:::-;631:42:11;-1:-1:-1::0;;;;;1164:35:6::1;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1148:13;:53:::0;1212:5:::1;:32:::0;;-1:-1:-1;;;;;;1212:32:6::1;-1:-1:-1::0;;;;;1212:32:6;::::1;;::::0;;1255:11:::1;:17:::0;;;1282:10:::1;:16:::0;;;1308:12:::1;:18:::0;;;1336:11:::1;:17:::0;;;1364:9:::1;:25:::0;;-1:-1:-1;1364:25:6;::::1;::::0;;-1:-1:-1;1364:25:6;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;1424:4;1399:11;1411:9;1399:22;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:29;;;::::1;;-1:-1:-1::0;;1399:29:6;;::::1;::::0;;;::::1;::::0;;;;;1438:8:::1;::::0;:19:::1;::::0;1447:9;;1438:19:::1;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:26;;;::::1;;-1:-1:-1::0;;1438:26:6;;::::1;::::0;;;::::1;::::0;;;1513:4:::1;::::0;1474:5:::1;::::0;:16:::1;::::0;1480:9;;1474:16:::1;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:44;;-1:-1:-1;;;;;1474:44:6;;;::::1;-1:-1:-1::0;;;;;;1474:44:6;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;3479:99:55;;;;3529:5;3513:21;;-1:-1:-1;;3513:21:55;;;3553:14;;-1:-1:-1;9268:36:94;;3553:14:55;;9256:2:94;9241:18;3553:14:55;;;;;;;3479:99;692:833:6;;;;:::o;2860:408::-;2953:19;2974;2995:16;3013:23;3048:16;3067:5;3073:8;3067:15;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3067:30:6;;;;;;;;:23;;;;:30;;;;;3121:18;;;;;;;;;;3166:15;;;:21;;;;;3208:9;;;;3245:16;;;;;3121:18;;3166:21;;;;;-1:-1:-1;3208:9:6;;3121:18;-1:-1:-1;;;;;2860:408:6:o;3014:25:11:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3014:25:11;;-1:-1:-1;3014:25:11;:::o;2772:82:6:-;2819:28;2829:17;:15;:17::i;2819:28::-;2772:82;:::o;5146:145:51:-;4795:7;4821:12;;;:6;:12;;;;;:22;;;2802:16;2813:4;2802:10;:16::i;:::-;5259:25:::1;5270:4;5276:7;5259:10;:25::i;:::-;5146:145:::0;;;:::o;3326:121:6:-;3429:10;3417:23;;;;:11;:23;;;;;;;;3410:30;;;;;;;;;;;;;;;;;3379:19;;3410:30;;3417:23;;3410:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3326:121;:::o;6255:214:51:-;-1:-1:-1;;;;;6350:23:51;;929:10:73;6350:23:51;6342:83;;;;-1:-1:-1;;;6342:83:51;;13175:2:94;6342:83:51;;;13157:21:94;13214:2;13194:18;;;13187:30;13253:34;13233:18;;;13226:62;-1:-1:-1;;;13304:18:94;;;13297:45;13359:19;;6342:83:51;13147:237:94;6342:83:51;6436:26;6448:4;6454:7;6436:11;:26::i;:::-;6255:214;;:::o;1655:116:6:-;-1:-1:-1;;;;;;;;;;;2802:16:51;2813:4;2802:10;:16::i;:::-;1719:6:6::1;::::0;-1:-1:-1;;;1719:6:6;::::1;;;1711:29;;;::::0;-1:-1:-1;;;1711:29:6;;10966:2:94;1711:29:6::1;::::0;::::1;10948:21:94::0;11005:2;10985:18;;;10978:30;-1:-1:-1;;;11024:18:94;;;11017:40;11074:18;;1711:29:6::1;10938:160:94::0;1711:29:6::1;-1:-1:-1::0;1750:6:6::1;:14:::0;;-1:-1:-1;;;;1750:14:6::1;::::0;;1655:116::o;810:21:11:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1595:51::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1595:51:11;;-1:-1:-1;1595:51:11;:::o;1531:118:6:-;-1:-1:-1;;;;;;;;;;;2802:16:51;2813:4;2802:10;:16::i;:::-;1594:6:6::1;::::0;-1:-1:-1;;;1594:6:6;::::1;;;1593:7;1585:34;;;::::0;-1:-1:-1;;;1585:34:6;;12426:2:94;1585:34:6::1;::::0;::::1;12408:21:94::0;12465:2;12445:18;;;12438:30;-1:-1:-1;;;12484:18:94;;;12477:44;12538:18;;1585:34:6::1;12398:164:94::0;1585:34:6::1;-1:-1:-1::0;1629:6:6::1;:13:::0;;-1:-1:-1;;;;1629:13:6::1;-1:-1:-1::0;;;1629:13:6::1;::::0;;1531:118::o;3203:145:51:-;3289:4;3312:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3312:29:51;;;;;;;;;;;;;;;3203:145::o;7333:105:11:-;7376:4;631:42;-1:-1:-1;;;;;7399:30:11;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7392:39;;7333:105;:::o;782:22::-;;;;;;;:::i;5134:27::-;;;;;;;;;;;;;;;-1:-1:-1;5134:27:11;:::o;4515:25::-;;;;;;;;;;;;3453:134:6;-1:-1:-1;;;;;3562:18:6;;;;;;:11;:18;;;;;;;;3555:25;;;;;;;;;;;;;;;;;3524:19;;3555:25;;3562:18;;3555:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3453:134;;;:::o;5571:147:51:-;4795:7;4821:12;;;:6;:12;;;;;:22;;;2802:16;2813:4;2802:10;:16::i;:::-;5685:26:::1;5697:4;5703:7;5685:11;:26::i;3288:67:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5168:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2194:222:6:-;-1:-1:-1;;;;;;;;;;;2802:16:51;2813:4;2802:10;:16::i;:::-;2288:1:6::1;2278:7;:11;2270:52;;;::::0;-1:-1:-1;;;2270:52:6;;11305:2:94;2270:52:6::1;::::0;::::1;11287:21:94::0;11344:2;11324:18;;;11317:30;11383;11363:18;;;11356:58;11431:18;;2270:52:6::1;11277:178:94::0;2270:52:6::1;2332:14;:24:::0;;;2371:38:::1;::::0;7942:25:94;;;2389:10:6::1;::::0;2371:38:::1;::::0;7930:2:94;7915:18;2371:38:6::1;;;;;;;2194:222:::0;;:::o;1778:325::-;2369:4:51;2802:16;2369:4;2802:10;:16::i;:::-;-1:-1:-1;;;;;1898:35:6;::::1;1890:68;;;::::0;-1:-1:-1;;;1890:68:6;;11662:2:94;1890:68:6::1;::::0;::::1;11644:21:94::0;11701:2;11681:18;;;11674:30;-1:-1:-1;;;11720:18:94;;;11713:50;11780:18;;1890:68:6::1;11634:170:94::0;1890:68:6::1;-1:-1:-1::0;;;;;1976:32:6;::::1;1476:19:72::0;1968:74:6::1;;;::::0;-1:-1:-1;;;1968:74:6;;9905:2:94;1968:74:6::1;::::0;::::1;9887:21:94::0;9944:2;9924:18;;;9917:30;9983:29;9963:18;;;9956:57;10030:18;;1968:74:6::1;9877:177:94::0;1968:74:6::1;-1:-1:-1::0;2052:20:6::1;:44:::0;;-1:-1:-1;;;;;;2052:44:6::1;-1:-1:-1::0;;;;;2052:44:6;;;::::1;::::0;;;::::1;::::0;;1778:325::o;2545:24:11:-;;;;;;;;;;;;2422:253:6;498:6;;2495:7;;-1:-1:-1;;;498:6:6;;;;497:7;;:39;;;508:28;-1:-1:-1;;;;;;;;;;;525:10:6;508:7;:28::i;:::-;489:67;;;;-1:-1:-1;;;489:67:6;;10622:2:94;489:67:6;;;10604:21:94;10661:2;10641:18;;;10634:30;-1:-1:-1;;;10680:18:94;;;10673:45;10735:18;;489:67:6;10594:165:94;489:67:6;2627:20:::1;::::0;2605:63:::1;::::0;-1:-1:-1;;;2605:63:6;;2627:20:::1;2660:7;-1:-1:-1::0;;;;;;2660:7:6::1;2605:63;::::0;::::1;8122:52:94::0;-1:-1:-1;;;;;2627:20:6;;::::1;::::0;2605:54:::1;::::0;8095:18:94;;2605:63:6::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;948:895:81:-:0;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;7804:233:51;7887:22;7895:4;7901:7;7887;:22::i;:::-;7882:149;;7925:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7925:29:51;;;;;;;;;:36;;-1:-1:-1;;7925:36:51;7957:4;7925:36;;;8007:12;929:10:73;;850:96;8007:12:51;-1:-1:-1;;;;;7980:40:51;7998:7;-1:-1:-1;;;;;7980:40:51;7992:4;7980:40;;;;;;;;;;7804:233;;:::o;3642:103::-;3708:30;3719:4;929:10:73;3708::51;:30::i;8208:234::-;8291:22;8299:4;8305:7;8291;:22::i;:::-;8287:149;;;8361:5;8329:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8329:29:51;;;;;;;;;;:37;;-1:-1:-1;;8329:37:51;;;8385:40;929:10:73;;8329:12:51;;8385:40;;8361:5;8385:40;8208:234;;:::o;4026:514::-;4114:22;4122:4;4128:7;4114;:22::i;:::-;4109:425;;4297:52;4336:7;-1:-1:-1;;;;;4297:52:51;4346:2;4297:30;:52::i;:::-;4420:49;4459:4;4466:2;4420:30;:49::i;:::-;4204:287;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4204:287:51;;;;;;;;;;-1:-1:-1;;;4152:371:51;;;;;;;:::i;1663:441:75:-;1738:13;1763:19;1795:10;1799:6;1795:1;:10;:::i;:::-;:14;;1808:1;1795:14;:::i;:::-;1785:25;;;;;;-1:-1:-1;;;1785:25:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1785:25:75;;1763:47;;-1:-1:-1;;;1820:6:75;1827:1;1820:9;;;;;;-1:-1:-1;;;1820:9:75;;;;;;;;;;;;:15;-1:-1:-1;;;;;1820:15:75;;;;;;;;;-1:-1:-1;;;1845:6:75;1852:1;1845:9;;;;;;-1:-1:-1;;;1845:9:75;;;;;;;;;;;;:15;-1:-1:-1;;;;;1845:15:75;;;;;;;;-1:-1:-1;1875:9:75;1887:10;1891:6;1887:1;:10;:::i;:::-;:14;;1900:1;1887:14;:::i;:::-;1875:26;;1870:132;1907:1;1903;:5;1870:132;;;-1:-1:-1;;;1954:5:75;1962:3;1954:11;1941:25;;;;;-1:-1:-1;;;1941:25:75;;;;;;;;;;;;1929:6;1936:1;1929:9;;;;;;-1:-1:-1;;;1929:9:75;;;;;;;;;;;;:37;-1:-1:-1;;;;;1929:37:75;;;;;;;;-1:-1:-1;1990:1:75;1980:11;;;;;1910:3;;;:::i;:::-;;;1870:132;;;-1:-1:-1;2019:10:75;;2011:55;;;;-1:-1:-1;;;2011:55:75;;10261:2:94;2011:55:75;;;10243:21:94;;;10280:18;;;10273:30;10339:34;10319:18;;;10312:62;10391:18;;2011:55:75;10233:182:94;2011:55:75;2090:6;1663:441;-1:-1:-1;;;1663:441:75:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:739:94;57:5;110:3;103:4;95:6;91:17;87:27;77:2;;132:5;125;118:20;77:2;172:6;159:20;198:18;235:2;231;228:10;225:2;;;241:18;;:::i;:::-;316:2;310:9;284:2;370:13;;-1:-1:-1;;366:22:94;;;390:2;362:31;358:40;346:53;;;414:18;;;434:22;;;411:46;408:2;;;460:18;;:::i;:::-;500:10;496:2;489:22;535:2;527:6;520:18;581:3;574:4;569:2;561:6;557:15;553:26;550:35;547:2;;;602:5;595;588:20;547:2;670;663:4;655:6;651:17;644:4;636:6;632:17;619:54;693:15;;;710:4;689:26;682:41;;;;-1:-1:-1;697:6:94;67:686;-1:-1:-1;;;67:686:94:o;758:257::-;817:6;870:2;858:9;849:7;845:23;841:32;838:2;;;891:6;883;876:22;838:2;935:9;922:23;954:31;979:5;954:31;:::i;1020:261::-;1090:6;1143:2;1131:9;1122:7;1118:23;1114:32;1111:2;;;1164:6;1156;1149:22;1111:2;1201:9;1195:16;1220:31;1245:5;1220:31;:::i;1286:325::-;1354:6;1362;1415:2;1403:9;1394:7;1390:23;1386:32;1383:2;;;1436:6;1428;1421:22;1383:2;1480:9;1467:23;1499:31;1524:5;1499:31;:::i;:::-;1549:5;1601:2;1586:18;;;;1573:32;;-1:-1:-1;;;1373:238:94:o;1616:393::-;1693:6;1701;1709;1762:2;1750:9;1741:7;1737:23;1733:32;1730:2;;;1783:6;1775;1768:22;1730:2;1827:9;1814:23;1846:31;1871:5;1846:31;:::i;:::-;1896:5;1948:2;1933:18;;1920:32;;-1:-1:-1;1999:2:94;1984:18;;;1971:32;;1720:289;-1:-1:-1;;;1720:289:94:o;2014:190::-;2073:6;2126:2;2114:9;2105:7;2101:23;2097:32;2094:2;;;2147:6;2139;2132:22;2094:2;-1:-1:-1;2175:23:94;;2084:120;-1:-1:-1;2084:120:94:o;2209:325::-;2277:6;2285;2338:2;2326:9;2317:7;2313:23;2309:32;2306:2;;;2359:6;2351;2344:22;2306:2;2400:9;2387:23;2377:33;;2460:2;2449:9;2445:18;2432:32;2473:31;2498:5;2473:31;:::i;:::-;2523:5;2513:15;;;2296:238;;;;;:::o;2539:306::-;2597:6;2650:2;2638:9;2629:7;2625:23;2621:32;2618:2;;;2671:6;2663;2656:22;2618:2;2702:23;;-1:-1:-1;;;;;;2754:32:94;;2744:43;;2734:2;;2806:6;2798;2791:22;2850:342;2919:6;2972:2;2960:9;2951:7;2947:23;2943:32;2940:2;;;2993:6;2985;2978:22;2940:2;3038:9;3025:23;3071:18;3063:6;3060:30;3057:2;;;3108:6;3100;3093:22;3057:2;3136:50;3178:7;3169:6;3158:9;3154:22;3136:50;:::i;:::-;3126:60;2930:262;-1:-1:-1;;;;2930:262:94:o;3197:545::-;3284:6;3292;3300;3353:2;3341:9;3332:7;3328:23;3324:32;3321:2;;;3374:6;3366;3359:22;3321:2;3419:9;3406:23;3452:18;3444:6;3441:30;3438:2;;;3489:6;3481;3474:22;3438:2;3517:50;3559:7;3550:6;3539:9;3535:22;3517:50;:::i;:::-;3507:60;;;3617:2;3606:9;3602:18;3589:32;3630:31;3655:5;3630:31;:::i;:::-;3311:431;;3680:5;;-1:-1:-1;;;3732:2:94;3717:18;;;;3704:32;;3311:431::o;3747:708::-;3844:6;3852;3860;3913:2;3901:9;3892:7;3888:23;3884:32;3881:2;;;3934:6;3926;3919:22;3881:2;3979:9;3966:23;4008:18;4049:2;4041:6;4038:14;4035:2;;;4070:6;4062;4055:22;4035:2;4098:50;4140:7;4131:6;4120:9;4116:22;4098:50;:::i;:::-;4088:60;;4201:2;4190:9;4186:18;4173:32;4157:48;;4230:2;4220:8;4217:16;4214:2;;;4251:6;4243;4236:22;4214:2;;4279:52;4323:7;4312:8;4301:9;4297:24;4279:52;:::i;:::-;4269:62;;;4381:2;4370:9;4366:18;4353:32;4394:31;4419:5;4394:31;:::i;:::-;4444:5;4434:15;;;3871:584;;;;;:::o;4655:194::-;4725:6;4778:2;4766:9;4757:7;4753:23;4749:32;4746:2;;;4799:6;4791;4784:22;4746:2;-1:-1:-1;4827:16:94;;4736:113;-1:-1:-1;4736:113:94:o;4854:276::-;4985:3;5023:6;5017:13;5039:53;5085:6;5080:3;5073:4;5065:6;5061:17;5039:53;:::i;:::-;5108:16;;;;;4993:137;-1:-1:-1;;4993:137:94:o;5135:786::-;5546:25;5541:3;5534:38;5516:3;5601:6;5595:13;5617:62;5672:6;5667:2;5662:3;5658:12;5651:4;5643:6;5639:17;5617:62;:::i;:::-;-1:-1:-1;;;5738:2:94;5698:16;;;5730:11;;;5723:40;5788:13;;5810:63;5788:13;5859:2;5851:11;;5844:4;5832:17;;5810:63;:::i;:::-;5893:17;5912:2;5889:26;;5524:397;-1:-1:-1;;;;5524:397:94:o;6484:852::-;6711:2;6763:21;;;6833:13;;6736:18;;;6855:22;;;6682:4;;6711:2;6896;;6914:18;;;;6955:15;;;6682:4;7001:309;7015:6;7012:1;7009:13;7001:309;;;7074:13;;7112:9;;7100:22;;7162:11;;;7156:18;7142:12;;;7135:40;7215:11;;7209:18;7195:12;;;7188:40;7257:4;7248:14;;;;7285:15;;;;7037:1;7030:9;7001:309;;;-1:-1:-1;7327:3:94;;6691:645;-1:-1:-1;;;;;;;6691:645:94:o;9315:383::-;9464:2;9453:9;9446:21;9427:4;9496:6;9490:13;9539:6;9534:2;9523:9;9519:18;9512:34;9555:66;9614:6;9609:2;9598:9;9594:18;9589:2;9581:6;9577:15;9555:66;:::i;:::-;9682:2;9661:15;-1:-1:-1;;9657:29:94;9642:45;;;;9689:2;9638:54;;9436:262;-1:-1:-1;;9436:262:94:o;14743:128::-;14783:3;14814:1;14810:6;14807:1;14804:13;14801:2;;;14820:18;;:::i;:::-;-1:-1:-1;14856:9:94;;14791:80::o;14876:168::-;14916:7;14982:1;14978;14974:6;14970:14;14967:1;14964:21;14959:1;14952:9;14945:17;14941:45;14938:2;;;14989:18;;:::i;:::-;-1:-1:-1;15029:9:94;;14928:116::o;15049:125::-;15089:4;15117:1;15114;15111:8;15108:2;;;15122:18;;:::i;:::-;-1:-1:-1;15159:9:94;;15098:76::o;15179:258::-;15251:1;15261:113;15275:6;15272:1;15269:13;15261:113;;;15351:11;;;15345:18;15332:11;;;15325:39;15297:2;15290:10;15261:113;;;15392:6;15389:1;15386:13;15383:2;;;-1:-1:-1;;15427:1:94;15409:16;;15402:27;15232:205::o;15442:136::-;15481:3;15509:5;15499:2;;15518:18;;:::i;:::-;-1:-1:-1;;;15554:18:94;;15489:89::o;15583:380::-;15662:1;15658:12;;;;15705;;;15726:2;;15780:4;15772:6;15768:17;15758:27;;15726:2;15833;15825:6;15822:14;15802:18;15799:38;15796:2;;;15879:10;15874:3;15870:20;15867:1;15860:31;15914:4;15911:1;15904:15;15942:4;15939:1;15932:15;15796:2;;15638:325;;;:::o;15968:127::-;16029:10;16024:3;16020:20;16017:1;16010:31;16060:4;16057:1;16050:15;16084:4;16081:1;16074:15;16100:127;16161:10;16156:3;16152:20;16149:1;16142:31;16192:4;16189:1;16182:15;16216:4;16213:1;16206:15;16232:131;-1:-1:-1;;;;;16307:31:94;;16297:42;;16287:2;;16353:1;16350;16343:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DAPPS_STAKING()": "59b40f41",
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "DNTname()": "40bf8a8d",
    "MANAGEMENT_FEE()": "5f1554e3",
    "MANAGER()": "1b2df850",
    "REVENUE_FEE()": "4421bd1e",
    "REWARDS_PRECISION()": "86b3cd26",
    "UNSTAKING_FEE()": "59601ebc",
    "accumulatedRewardsPerShare(uint256)": "a2ce0f4a",
    "adaptersDistr()": "e2e836f8",
    "buffer(address,uint256)": "54b057f9",
    "claimingTxLimit()": "00179fbd",
    "currentEra()": "973628f6",
    "dapps(string)": "dcf425df",
    "dappsList(uint256)": "da3bc958",
    "deactivationEra(string)": "2a14d8f4",
    "distr()": "6bbea766",
    "dntToken()": "05e2a217",
    "eraBuffer(uint256)": "c21a7276",
    "eraRevenue(uint256)": "eb51a44c",
    "eraRewards(uint256)": "1dc00785",
    "eraShotsLimit()": "f128f631",
    "eraStakerReward(uint256)": "2ea31bf6",
    "eraUnstaked(uint256)": "c4e137e7",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getStaker(string,address,uint256)": "0f80b592",
    "getUserWithdrawals()": "331d437b",
    "getUserWithdrawalsArray(address)": "c6ecccb8",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "haveUtility(string)": "6f68f2e9",
    "initialize(string,string,address)": "077f224a",
    "isActive(string)": "c8902a21",
    "isLpToken(address)": "0f24ca7d",
    "isPartner(address)": "8c0f9aac",
    "isStaker(address)": "6f1e8533",
    "isUnstakes()": "2e4a4a17",
    "lastClaimed()": "adc1b956",
    "lastEraTotalBalance()": "e77ee345",
    "lastStaked()": "12a12a06",
    "lastUnstaked()": "5495ec81",
    "lastUpdated()": "d0b06f5d",
    "liquidStakingManager()": "5ca5914e",
    "lpHandlers(address)": "e09c1954",
    "lpTokens(uint256)": "1bb5e2dc",
    "minStakeAmount()": "f1887684",
    "nftDistr()": "bd1bbd3b",
    "partnerIdx(address)": "a5ae02ac",
    "partners(uint256)": "c3b49d04",
    "partnersLimit()": "4d617451",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "rewardPool()": "66666aa9",
    "setLiquidStakingManager(address)": "fbd73b93",
    "setMinStakeAmount(uint256)": "eb4af045",
    "stakers(uint256)": "fd5e6dd1",
    "stakes(address)": "16934fc4",
    "sum2unstake()": "af66c36b",
    "supportsInterface(bytes4)": "01ffc9a7",
    "totalBalance()": "ad7a672f",
    "totalRevenue()": "bf2d9e0b",
    "totalUserRewards(address)": "a44bca8e",
    "unbondedPool()": "c71367b5",
    "unpause()": "3f4ba83a",
    "unstakingPool()": "6f5e4488",
    "usersShotsPerEra(address,uint256,uint256)": "d6356ff4",
    "utilName()": "ab486929",
    "withdraw(uint256)": "2e1a7d4d",
    "withdrawBlock()": "24025b19",
    "withdrawals(address,uint256)": "422b1077"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"era\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"ClaimDappError\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eraStakerReward\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_era\",\"type\":\"uint256\"}],\"name\":\"ClaimDappSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"utility\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"era\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"ClaimStakerError\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"era\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastClaimed\",\"type\":\"uint256\"}],\"name\":\"ClaimStakerSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"utility\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimedFromUtility\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"FillRewardPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"FillUnbonded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"FillUnstaking\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"utility\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"HarvestRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SetMinStakeAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"utility\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"StakedInUtility\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"era\",\"type\":\"uint256\"}],\"name\":\"Synchronization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"utility\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sum2unstake\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"era\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"UnbondAndUnstakeError\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"era\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sum2unstake\",\"type\":\"uint256\"}],\"name\":\"UnbondAndUnstakeSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"immediate\",\"type\":\"bool\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"utility\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"immediate\",\"type\":\"bool\"}],\"name\":\"UnstakedFromUtility\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawRevenue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_era\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"WithdrawUnbondedError\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_era\",\"type\":\"uint256\"}],\"name\":\"WithdrawUnbondedSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"DAPPS_STAKING\",\"outputs\":[{\"internalType\":\"contract DappsStaking\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DNTname\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MANAGEMENT_FEE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REVENUE_FEE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REWARDS_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNSTAKING_FEE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"accumulatedRewardsPerShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adaptersDistr\",\"outputs\":[{\"internalType\":\"contract IAdaptersDistributor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"buffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimingTxLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentEra\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"dapps\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"dappAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakedBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sum2unstake\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dappsList\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"deactivationEra\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distr\",\"outputs\":[{\"internalType\":\"contract NDistributor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dntToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"eraBuffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"eraRevenue\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"done\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"eraRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eraShotsLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"eraStakerReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"done\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"eraUnstaked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"done\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_utility\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_era\",\"type\":\"uint256\"}],\"name\":\"getStaker\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"eraBalance_\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isZeroBalance_\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"rewards_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastClaimedEra_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserWithdrawals\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eraReq\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lag\",\"type\":\"uint256\"}],\"internalType\":\"struct LiquidStakingStorage.Withdrawal[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserWithdrawalsArray\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eraReq\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lag\",\"type\":\"uint256\"}],\"internalType\":\"struct LiquidStakingStorage.Withdrawal[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"haveUtility\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_DNTname\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_utilName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_distrAddr\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"isActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isLpToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isPartner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isStaker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isUnstakes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastEraTotalBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUnstaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidStakingManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lpHandlers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lpTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftDistr\",\"outputs\":[{\"internalType\":\"contract INFTDistributor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"partnerIdx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"partners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"partnersLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidStakingManager\",\"type\":\"address\"}],\"name\":\"setLiquidStakingManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setMinStakeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eraStarted\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sum2unstake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRevenue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalUserRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unbondedPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakingPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"usersShotsPerEra\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"utilName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eraReq\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lag\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setMinStakeAmount(uint256)\":{\"params\":{\"_amount\":\"=> new min stake amount\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"withdraw(uint256)\":{\"params\":{\"_id\":\"=> withdrawal index\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"currentEra()\":{\"notice\":\"get current era\"},\"distr()\":{\"notice\":\"distributor data\"},\"getUserWithdrawals()\":{\"notice\":\"returns user active withdrawals\"},\"isLpToken(address)\":{\"notice\":\"handlers for work with LP tokens\"},\"setMinStakeAmount(uint256)\":{\"notice\":\"sets min stake amount\"},\"totalBalance()\":{\"notice\":\"core values\"},\"unstakingPool()\":{\"notice\":\"pool values\"},\"utilName()\":{\"notice\":\"settings for distributor\"},\"withdraw(uint256)\":{\"notice\":\"finish previously opened withdrawal\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LiquidStaking/LiquidStaking.sol\":\"LiquidStaking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/LiquidStaking/LiquidStaking.sol\":{\"keccak256\":\"0xb79cdf89d7783363a7fc2f2d5a782085d6f8c7497431642d1d5f232c3638637f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec5623b931c6c353c545238978e4302dd96a500042ca3ee173aab026a1c34e5\",\"dweb:/ipfs/QmYmAu6wx5YTstPpQWZhAozbGTs2uPe3CSBnoWLtWdnm3w\"]},\"contracts/LiquidStaking/LiquidStakingStorage.sol\":{\"keccak256\":\"0xc6e302aedf2da5421d0f62d95fa3a5413569e8b5083ed2a94fbb61f092223d08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26ac411ea5eb944170fb62cf33885c5a1b5cb4474d328fbb1d372863d5764aa0\",\"dweb:/ipfs/QmNq2pEpM17Eco1YxYoynGdUkFyJw6RQGvXXBweRQ6QAaA\"]},\"contracts/NDistributor.sol\":{\"keccak256\":\"0xf56a0a717f7eac1f2fc254260a3adc7b76b38f433ef75d5d361d792381d91506\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c20d5dc0c369c8dcca00639676343e6bb364831f9617fae479be09a72eb051d\",\"dweb:/ipfs/QmaFCPgrSTRe4fAZ2vfSdcTQeVESJXQLErCZuxPaABbAmM\"]},\"contracts/interfaces/DappsStaking.sol\":{\"keccak256\":\"0xf8298be9e94a553de178c483d0d8efd2d5d0aafc8e8106b65aa30068d89e05b1\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://631e3d2c7272f26c37e85c67c9d43726f3897fa111c01ce04f57785d2fc2ee24\",\"dweb:/ipfs/QmRyVLS9dqR28Gb1qWnUHGqdvhCjfSQNFnWUdSKkMScRkr\"]},\"contracts/interfaces/IAdaptersDistributor.sol\":{\"keccak256\":\"0x4c0c583fe1646101e01ae92486926eb3710c27aa7021c68ac35f49133722c184\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05830918637ed312bf953d729fbb17b38a872af7b5c4267a017c599b88692431\",\"dweb:/ipfs/QmS25WFHSfQY9dM5ooo87h7Mx14hKA5cGunEzELA8bTEJf\"]},\"contracts/interfaces/IDNT.sol\":{\"keccak256\":\"0xd9a14eabdb4bebc8e81df58d2407301e60b426c32c59f52f21a32aba5483d766\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://064ddfac6b3b533f89b7643d76befb45f6396b711c6546eebaca370fa2f034f3\",\"dweb:/ipfs/QmTFqVxCRVZpHn1z8bGU3Sv6yt2ddjZviJyrSBh358H4Rk\"]},\"contracts/interfaces/ILiquidStaking.sol\":{\"keccak256\":\"0x31e51b639dcc67203c1ba732d6a08040219435f209468c31b328f4bd1baedb7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e50c2ef8e55e14b5bfcde948c2a705f996bff5fa8d9a6b80584643883b16d097\",\"dweb:/ipfs/Qmbaw5jS7kPF242jhaRy5Nn1D6dk5ai6iPs2ePBH1B7DpR\"]},\"contracts/interfaces/ILiquidStakingManager.sol\":{\"keccak256\":\"0x75568719d6db30f4e55c391fe39bb992a1d7f60cb9e3e727ca480fe4a6d5f4d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://987204b2565260534cafa3acca298fd9e8c728e3108e56aa8bcf6e629b27348f\",\"dweb:/ipfs/QmVTPosa1hK91KNMQmu93e78M3mYegV5WoozyqCNpKZcsm\"]},\"contracts/interfaces/INFTDistributor.sol\":{\"keccak256\":\"0xd05123a0a5733673c684caa179fc030351b30e68f3c0da31816ddaa8380b3789\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bd4f728f31bd3d69e57f3c41f50242509d980c93b2566f845689bcba50c3990\",\"dweb:/ipfs/QmYwj78S16Fr6zT71kr2n3cCzFnSTdFJ5rsRyfVSQUnPFh\"]},\"contracts/interfaces/IPartnerHandler.sol\":{\"keccak256\":\"0xe21ebea595e6606b3b7d07abfdf3d01da878aa7ef8ae688dd41f4d3b502f58e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a396815e15a50abace371a1cc9243ca4aa5b04862c3830679f6558885dcc03c0\",\"dweb:/ipfs/QmZZxqXhAsNmtKDJHmTa6pJ8kkhiHqSLK1Vv7xAoLY3xMW\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x2ea9f206854c98b67dd228f8cad22bfe90ba7b1c2295315672f2e1e244623fc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4a7ef6774a9acbbb01583a9fc4656ee9b3dae4b8d5099f480625bfc0af68a02\",\"dweb:/ipfs/QmeXZcdZ7FELTc21GSgjRHXFCj4ohxrsZUaNzA5cMemAbE\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.4+commit.c7e474f2"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "era",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "reason",
              "type": "bytes",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ClaimDappError",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "eraStakerReward",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_era",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ClaimDappSuccess",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "utility",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "era",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "reason",
              "type": "bytes",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ClaimStakerError",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "era",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "lastClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimStakerSuccess",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Claimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "utility",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimedFromUtility",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FillRewardPool",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FillUnbonded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FillUnstaking",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "utility",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "HarvestRewards",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetMinStakeAmount",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Staked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "utility",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StakedInUtility",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "era",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Synchronization",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "utility",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "sum2unstake",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "era",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "reason",
              "type": "bytes",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "UnbondAndUnstakeError",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "era",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "sum2unstake",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UnbondAndUnstakeSuccess",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "immediate",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unstaked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "utility",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "immediate",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UnstakedFromUtility",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawRevenue",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_era",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "reason",
              "type": "bytes",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "WithdrawUnbondedError",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_era",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "WithdrawUnbondedSuccess",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdrawn",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DAPPS_STAKING",
          "outputs": [
            {
              "internalType": "contract DappsStaking",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DNTname",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MANAGEMENT_FEE",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MANAGER",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "REVENUE_FEE",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "REWARDS_PRECISION",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "UNSTAKING_FEE",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "accumulatedRewardsPerShare",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "adaptersDistr",
          "outputs": [
            {
              "internalType": "contract IAdaptersDistributor",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "buffer",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimingTxLimit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "currentEra",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "dapps",
          "outputs": [
            {
              "internalType": "address",
              "name": "dappAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stakedBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sum2unstake",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "dappsList",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "deactivationEra",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "distr",
          "outputs": [
            {
              "internalType": "contract NDistributor",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dntToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "eraBuffer",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "eraRevenue",
          "outputs": [
            {
              "internalType": "bool",
              "name": "done",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "eraRewards",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eraShotsLimit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "eraStakerReward",
          "outputs": [
            {
              "internalType": "bool",
              "name": "done",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "eraUnstaked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "done",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_utility",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_era",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStaker",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "eraBalance_",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isZeroBalance_",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "rewards_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastClaimedEra_",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserWithdrawals",
          "outputs": [
            {
              "internalType": "struct LiquidStakingStorage.Withdrawal[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "val",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "eraReq",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lag",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserWithdrawalsArray",
          "outputs": [
            {
              "internalType": "struct LiquidStakingStorage.Withdrawal[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "val",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "eraReq",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lag",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "haveUtility",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_DNTname",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_utilName",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_distrAddr",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isActive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isLpToken",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isPartner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isStaker",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isUnstakes",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lastClaimed",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lastEraTotalBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lastStaked",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lastUnstaked",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lastUpdated",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "liquidStakingManager",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lpHandlers",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lpTokens",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minStakeAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nftDistr",
          "outputs": [
            {
              "internalType": "contract INFTDistributor",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "partnerIdx",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "partners",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "partnersLimit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardPool",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_liquidStakingManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setLiquidStakingManager"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinStakeAmount"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakers",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "totalBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "eraStarted",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sum2unstake",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalRevenue",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalUserRewards",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "unbondedPool",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "unstakingPool",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "usersShotsPerEra",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "utilName",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawBlock",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawals",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "eraReq",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lag",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "custom:oz-upgrades-unsafe-allow": "constructor"
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "setMinStakeAmount(uint256)": {
            "params": {
              "_amount": "=> new min stake amount"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "withdraw(uint256)": {
            "params": {
              "_id": "=> withdrawal index"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "currentEra()": {
            "notice": "get current era"
          },
          "distr()": {
            "notice": "distributor data"
          },
          "getUserWithdrawals()": {
            "notice": "returns user active withdrawals"
          },
          "isLpToken(address)": {
            "notice": "handlers for work with LP tokens"
          },
          "setMinStakeAmount(uint256)": {
            "notice": "sets min stake amount"
          },
          "totalBalance()": {
            "notice": "core values"
          },
          "unstakingPool()": {
            "notice": "pool values"
          },
          "utilName()": {
            "notice": "settings for distributor"
          },
          "withdraw(uint256)": {
            "notice": "finish previously opened withdrawal"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/LiquidStaking/LiquidStaking.sol": "LiquidStaking"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/LiquidStaking/LiquidStaking.sol": {
        "keccak256": "0xb79cdf89d7783363a7fc2f2d5a782085d6f8c7497431642d1d5f232c3638637f",
        "urls": [
          "bzz-raw://6ec5623b931c6c353c545238978e4302dd96a500042ca3ee173aab026a1c34e5",
          "dweb:/ipfs/QmYmAu6wx5YTstPpQWZhAozbGTs2uPe3CSBnoWLtWdnm3w"
        ],
        "license": "MIT"
      },
      "contracts/LiquidStaking/LiquidStakingStorage.sol": {
        "keccak256": "0xc6e302aedf2da5421d0f62d95fa3a5413569e8b5083ed2a94fbb61f092223d08",
        "urls": [
          "bzz-raw://26ac411ea5eb944170fb62cf33885c5a1b5cb4474d328fbb1d372863d5764aa0",
          "dweb:/ipfs/QmNq2pEpM17Eco1YxYoynGdUkFyJw6RQGvXXBweRQ6QAaA"
        ],
        "license": "MIT"
      },
      "contracts/NDistributor.sol": {
        "keccak256": "0xf56a0a717f7eac1f2fc254260a3adc7b76b38f433ef75d5d361d792381d91506",
        "urls": [
          "bzz-raw://0c20d5dc0c369c8dcca00639676343e6bb364831f9617fae479be09a72eb051d",
          "dweb:/ipfs/QmaFCPgrSTRe4fAZ2vfSdcTQeVESJXQLErCZuxPaABbAmM"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/DappsStaking.sol": {
        "keccak256": "0xf8298be9e94a553de178c483d0d8efd2d5d0aafc8e8106b65aa30068d89e05b1",
        "urls": [
          "bzz-raw://631e3d2c7272f26c37e85c67c9d43726f3897fa111c01ce04f57785d2fc2ee24",
          "dweb:/ipfs/QmRyVLS9dqR28Gb1qWnUHGqdvhCjfSQNFnWUdSKkMScRkr"
        ],
        "license": "BSD-3-Clause"
      },
      "contracts/interfaces/IAdaptersDistributor.sol": {
        "keccak256": "0x4c0c583fe1646101e01ae92486926eb3710c27aa7021c68ac35f49133722c184",
        "urls": [
          "bzz-raw://05830918637ed312bf953d729fbb17b38a872af7b5c4267a017c599b88692431",
          "dweb:/ipfs/QmS25WFHSfQY9dM5ooo87h7Mx14hKA5cGunEzELA8bTEJf"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IDNT.sol": {
        "keccak256": "0xd9a14eabdb4bebc8e81df58d2407301e60b426c32c59f52f21a32aba5483d766",
        "urls": [
          "bzz-raw://064ddfac6b3b533f89b7643d76befb45f6396b711c6546eebaca370fa2f034f3",
          "dweb:/ipfs/QmTFqVxCRVZpHn1z8bGU3Sv6yt2ddjZviJyrSBh358H4Rk"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ILiquidStaking.sol": {
        "keccak256": "0x31e51b639dcc67203c1ba732d6a08040219435f209468c31b328f4bd1baedb7e",
        "urls": [
          "bzz-raw://e50c2ef8e55e14b5bfcde948c2a705f996bff5fa8d9a6b80584643883b16d097",
          "dweb:/ipfs/Qmbaw5jS7kPF242jhaRy5Nn1D6dk5ai6iPs2ePBH1B7DpR"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ILiquidStakingManager.sol": {
        "keccak256": "0x75568719d6db30f4e55c391fe39bb992a1d7f60cb9e3e727ca480fe4a6d5f4d3",
        "urls": [
          "bzz-raw://987204b2565260534cafa3acca298fd9e8c728e3108e56aa8bcf6e629b27348f",
          "dweb:/ipfs/QmVTPosa1hK91KNMQmu93e78M3mYegV5WoozyqCNpKZcsm"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/INFTDistributor.sol": {
        "keccak256": "0xd05123a0a5733673c684caa179fc030351b30e68f3c0da31816ddaa8380b3789",
        "urls": [
          "bzz-raw://1bd4f728f31bd3d69e57f3c41f50242509d980c93b2566f845689bcba50c3990",
          "dweb:/ipfs/QmYwj78S16Fr6zT71kr2n3cCzFnSTdFJ5rsRyfVSQUnPFh"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IPartnerHandler.sol": {
        "keccak256": "0xe21ebea595e6606b3b7d07abfdf3d01da878aa7ef8ae688dd41f4d3b502f58e2",
        "urls": [
          "bzz-raw://a396815e15a50abace371a1cc9243ca4aa5b04862c3830679f6558885dcc03c0",
          "dweb:/ipfs/QmZZxqXhAsNmtKDJHmTa6pJ8kkhiHqSLK1Vv7xAoLY3xMW"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
        "keccak256": "0x2ea9f206854c98b67dd228f8cad22bfe90ba7b1c2295315672f2e1e244623fc3",
        "urls": [
          "bzz-raw://b4a7ef6774a9acbbb01583a9fc4656ee9b3dae4b8d5099f480625bfc0af68a02",
          "dweb:/ipfs/QmeXZcdZ7FELTc21GSgjRHXFCj4ohxrsZUaNzA5cMemAbE"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
        "keccak256": "0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa",
        "urls": [
          "bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c",
          "dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/LiquidStaking/LiquidStaking.sol",
    "id": 4904,
    "exportedSymbols": {
      "AccessControlUpgradeable": [
        26724
      ],
      "AddressUpgradeable": [
        30355
      ],
      "ContextUpgradeable": [
        30397
      ],
      "DappsStaking": [
        19618
      ],
      "ERC165Upgradeable": [
        30741
      ],
      "IAccessControlUpgradeable": [
        26822
      ],
      "IAdaptersDistributor": [
        19637
      ],
      "IDNT": [
        19755
      ],
      "IERC165Upgradeable": [
        30753
      ],
      "ILiquidStaking": [
        19967
      ],
      "ILiquidStakingManager": [
        19977
      ],
      "INFTDistributor": [
        20314
      ],
      "IPartnerHandler": [
        20879
      ],
      "Initializable": [
        27105
      ],
      "LiquidStaking": [
        4903
      ],
      "LiquidStakingStorage": [
        8901
      ],
      "NDistributor": [
        15577
      ],
      "Proxy": [
        31797
      ],
      "StringsUpgradeable": [
        30697
      ]
    },
    "nodeType": "SourceUnit",
    "src": "31:3562:6",
    "nodes": [
      {
        "id": 4557,
        "nodeType": "PragmaDirective",
        "src": "31:22:6",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 4558,
        "nodeType": "ImportDirective",
        "src": "55:81:6",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4904,
        "sourceUnit": 26725,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4559,
        "nodeType": "ImportDirective",
        "src": "137:49:6",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
        "file": "@openzeppelin/contracts/proxy/Proxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4904,
        "sourceUnit": 31798,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4560,
        "nodeType": "ImportDirective",
        "src": "187:36:6",
        "nodes": [],
        "absolutePath": "contracts/LiquidStaking/LiquidStakingStorage.sol",
        "file": "./LiquidStakingStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4904,
        "sourceUnit": 8902,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4561,
        "nodeType": "ImportDirective",
        "src": "224:49:6",
        "nodes": [],
        "absolutePath": "contracts/interfaces/ILiquidStakingManager.sol",
        "file": "../interfaces/ILiquidStakingManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4904,
        "sourceUnit": 19978,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4903,
        "nodeType": "ContractDefinition",
        "src": "275:3314:6",
        "nodes": [
          {
            "id": 4570,
            "nodeType": "UsingForDirective",
            "src": "361:45:6",
            "nodes": [],
            "libraryName": {
              "id": 4568,
              "name": "AddressUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30355,
              "src": "367:18:6"
            },
            "typeName": {
              "id": 4569,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "390:15:6",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            }
          },
          {
            "id": 4573,
            "nodeType": "UsingForDirective",
            "src": "411:37:6",
            "nodes": [],
            "libraryName": {
              "id": 4571,
              "name": "AddressUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30355,
              "src": "417:18:6"
            },
            "typeName": {
              "id": 4572,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "440:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 4589,
            "nodeType": "ModifierDefinition",
            "src": "454:120:6",
            "nodes": [],
            "body": {
              "id": 4588,
              "nodeType": "Block",
              "src": "479:95:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "497:7:6",
                          "subExpression": {
                            "id": 4576,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8741,
                            "src": "498:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 4579,
                              "name": "MANAGER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8525,
                              "src": "516:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 4580,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "525:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "525:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4578,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26479,
                            "src": "508:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 4582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "508:28:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "497:39:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e747261637420706175736564",
                        "id": 4584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "538:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3050dffacb9368cabd9386d9e9f4fef5deb3cfb41011f6d6a59caa1f97c9cb15",
                          "typeString": "literal_string \"Contract paused\""
                        },
                        "value": "Contract paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3050dffacb9368cabd9386d9e9f4fef5deb3cfb41011f6d6a59caa1f97c9cb15",
                          "typeString": "literal_string \"Contract paused\""
                        }
                      ],
                      "id": 4575,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "489:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "489:67:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4586,
                  "nodeType": "ExpressionStatement",
                  "src": "489:67:6"
                },
                {
                  "id": 4587,
                  "nodeType": "PlaceholderStatement",
                  "src": "566:1:6"
                }
              ]
            },
            "name": "whenNotPaused",
            "nameLocation": "463:13:6",
            "parameters": {
              "id": 4574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "476:2:6"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 4597,
            "nodeType": "FunctionDefinition",
            "src": "633:53:6",
            "nodes": [],
            "body": {
              "id": 4596,
              "nodeType": "Block",
              "src": "647:39:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4593,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27104,
                      "src": "657:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "657:22:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4595,
                  "nodeType": "ExpressionStatement",
                  "src": "657:22:6"
                }
              ]
            },
            "documentation": {
              "id": 4590,
              "nodeType": "StructuredDocumentation",
              "src": "580:48:6",
              "text": "@custom:oz-upgrades-unsafe-allow constructor"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 4591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "644:2:6"
            },
            "returnParameters": {
              "id": 4592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "647:0:6"
            },
            "scope": 4903,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4703,
            "nodeType": "FunctionDefinition",
            "src": "692:833:6",
            "nodes": [],
            "body": {
              "id": 4702,
              "nodeType": "Block",
              "src": "832:693:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 4609,
                            "name": "_distrAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4603,
                            "src": "850:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 4610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30130,
                          "src": "850:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 4611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "850:23:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f6469737472416464722073686f756c6420626520636f6e74726163742061646472657373",
                        "id": 4612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "875:39:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5c798700711e7c655cde6301b9c145740eec3f7a0e4a1a1c295d1b0d22a32f4",
                          "typeString": "literal_string \"_distrAddr should be contract address\""
                        },
                        "value": "_distrAddr should be contract address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d5c798700711e7c655cde6301b9c145740eec3f7a0e4a1a1c295d1b0d22a32f4",
                          "typeString": "literal_string \"_distrAddr should be contract address\""
                        }
                      ],
                      "id": 4608,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "842:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "842:73:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4614,
                  "nodeType": "ExpressionStatement",
                  "src": "842:73:6"
                },
                {
                  "expression": {
                    "id": 4617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4615,
                      "name": "DNTname",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8530,
                      "src": "925:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4616,
                      "name": "_DNTname",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4599,
                      "src": "935:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "925:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 4618,
                  "nodeType": "ExpressionStatement",
                  "src": "925:18:6"
                },
                {
                  "expression": {
                    "id": 4621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4619,
                      "name": "utilName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8528,
                      "src": "953:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4620,
                      "name": "_utilName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4601,
                      "src": "964:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "953:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 4622,
                  "nodeType": "ExpressionStatement",
                  "src": "953:20:6"
                },
                {
                  "assignments": [
                    4624
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4624,
                      "mutability": "mutable",
                      "name": "era",
                      "nameLocation": "992:3:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 4702,
                      "src": "984:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4623,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "984:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4629,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4625,
                        "name": "currentEra",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8900,
                        "src": "998:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 4626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "998:12:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 4627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1013:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "998:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "984:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4631,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26427,
                        "src": "1035:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 4632,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1055:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1055:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4630,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26687,
                      "src": "1024:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1024:42:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4635,
                  "nodeType": "ExpressionStatement",
                  "src": "1024:42:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4637,
                        "name": "MANAGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8525,
                        "src": "1087:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 4638,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1096:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1096:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4636,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26687,
                      "src": "1076:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 4640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1076:31:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4641,
                  "nodeType": "ExpressionStatement",
                  "src": "1076:31:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130",
                        "id": 4643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1135:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 4642,
                      "name": "setMinStakeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4793,
                      "src": "1117:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1117:21:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4645,
                  "nodeType": "ExpressionStatement",
                  "src": "1117:21:6"
                },
                {
                  "expression": {
                    "id": 4650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4646,
                      "name": "withdrawBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8535,
                      "src": "1148:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 4647,
                          "name": "DAPPS_STAKING",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8520,
                          "src": "1164:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DappsStaking_$19618",
                            "typeString": "contract DappsStaking"
                          }
                        },
                        "id": 4648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "read_unbonding_period",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19509,
                        "src": "1164:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 4649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1164:37:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1148:53:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4651,
                  "nodeType": "ExpressionStatement",
                  "src": "1148:53:6"
                },
                {
                  "expression": {
                    "id": 4656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4652,
                      "name": "distr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8544,
                      "src": "1212:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NDistributor_$15577",
                        "typeString": "contract NDistributor"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4654,
                          "name": "_distrAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4603,
                          "src": "1233:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4653,
                        "name": "NDistributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15577,
                        "src": "1220:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NDistributor_$15577_$",
                          "typeString": "type(contract NDistributor)"
                        }
                      },
                      "id": 4655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1220:24:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NDistributor_$15577",
                        "typeString": "contract NDistributor"
                      }
                    },
                    "src": "1212:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NDistributor_$15577",
                      "typeString": "contract NDistributor"
                    }
                  },
                  "id": 4657,
                  "nodeType": "ExpressionStatement",
                  "src": "1212:32:6"
                },
                {
                  "expression": {
                    "id": 4660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4658,
                      "name": "lastUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8591,
                      "src": "1255:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4659,
                      "name": "era",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4624,
                      "src": "1269:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1255:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4661,
                  "nodeType": "ExpressionStatement",
                  "src": "1255:17:6"
                },
                {
                  "expression": {
                    "id": 4664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4662,
                      "name": "lastStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8602,
                      "src": "1282:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4663,
                      "name": "era",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4624,
                      "src": "1295:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1282:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4665,
                  "nodeType": "ExpressionStatement",
                  "src": "1282:16:6"
                },
                {
                  "expression": {
                    "id": 4668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4666,
                      "name": "lastUnstaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8604,
                      "src": "1308:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4667,
                      "name": "era",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4624,
                      "src": "1323:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1308:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4669,
                  "nodeType": "ExpressionStatement",
                  "src": "1308:18:6"
                },
                {
                  "expression": {
                    "id": 4672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4670,
                      "name": "lastClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8643,
                      "src": "1336:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4671,
                      "name": "era",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4624,
                      "src": "1350:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1336:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4673,
                  "nodeType": "ExpressionStatement",
                  "src": "1336:17:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4677,
                        "name": "_utilName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4601,
                        "src": "1379:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 4674,
                        "name": "dappsList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8707,
                        "src": "1364:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 4676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1364:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$bound_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 4678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1364:25:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4679,
                  "nodeType": "ExpressionStatement",
                  "src": "1364:25:6"
                },
                {
                  "expression": {
                    "id": 4684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4680,
                        "name": "haveUtility",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8716,
                        "src": "1399:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 4682,
                      "indexExpression": {
                        "id": 4681,
                        "name": "_utilName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4601,
                        "src": "1411:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1399:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1424:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1399:29:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4685,
                  "nodeType": "ExpressionStatement",
                  "src": "1399:29:6"
                },
                {
                  "expression": {
                    "id": 4690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4686,
                        "name": "isActive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8720,
                        "src": "1438:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 4688,
                      "indexExpression": {
                        "id": 4687,
                        "name": "_utilName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4601,
                        "src": "1447:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1438:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1460:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1438:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4691,
                  "nodeType": "ExpressionStatement",
                  "src": "1438:26:6"
                },
                {
                  "expression": {
                    "id": 4700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 4692,
                          "name": "dapps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8712,
                          "src": "1474:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Dapp_$8685_storage_$",
                            "typeString": "mapping(string memory => struct LiquidStakingStorage.Dapp storage ref)"
                          }
                        },
                        "id": 4694,
                        "indexExpression": {
                          "id": 4693,
                          "name": "_utilName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4601,
                          "src": "1480:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1474:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dapp_$8685_storage",
                          "typeString": "struct LiquidStakingStorage.Dapp storage ref"
                        }
                      },
                      "id": 4695,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "dappAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8675,
                      "src": "1474:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4698,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "1513:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidStaking_$4903",
                            "typeString": "contract LiquidStaking"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_LiquidStaking_$4903",
                            "typeString": "contract LiquidStaking"
                          }
                        ],
                        "id": 4697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1505:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4696,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1505:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1505:13:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1474:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4701,
                  "nodeType": "ExpressionStatement",
                  "src": "1474:44:6"
                }
              ]
            },
            "functionSelector": "077f224a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4606,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4605,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27025,
                  "src": "820:11:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "820:11:6"
              }
            ],
            "name": "initialize",
            "nameLocation": "701:10:6",
            "parameters": {
              "id": 4604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4599,
                  "mutability": "mutable",
                  "name": "_DNTname",
                  "nameLocation": "735:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 4703,
                  "src": "721:22:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4598,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "721:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4601,
                  "mutability": "mutable",
                  "name": "_utilName",
                  "nameLocation": "767:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 4703,
                  "src": "753:23:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4600,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "753:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4603,
                  "mutability": "mutable",
                  "name": "_distrAddr",
                  "nameLocation": "794:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 4703,
                  "src": "786:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "786:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "711:99:6"
            },
            "returnParameters": {
              "id": 4607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "832:0:6"
            },
            "scope": 4903,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4720,
            "nodeType": "FunctionDefinition",
            "src": "1531:118:6",
            "nodes": [],
            "body": {
              "id": 4719,
              "nodeType": "Block",
              "src": "1575:74:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1593:7:6",
                        "subExpression": {
                          "id": 4710,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8741,
                          "src": "1594:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920706175736564",
                        "id": 4712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1602:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae10a178d979b07355a6dcae907d641ef7c4a0706d16acb8fe65e979f32d0ced",
                          "typeString": "literal_string \"Already paused\""
                        },
                        "value": "Already paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae10a178d979b07355a6dcae907d641ef7c4a0706d16acb8fe65e979f32d0ced",
                          "typeString": "literal_string \"Already paused\""
                        }
                      ],
                      "id": 4709,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1585:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1585:34:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4714,
                  "nodeType": "ExpressionStatement",
                  "src": "1585:34:6"
                },
                {
                  "expression": {
                    "id": 4717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4715,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8741,
                      "src": "1629:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1638:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1629:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4718,
                  "nodeType": "ExpressionStatement",
                  "src": "1629:13:6"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 4706,
                    "name": "MANAGER",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8525,
                    "src": "1566:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 4707,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4705,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26438,
                  "src": "1557:8:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1557:17:6"
              }
            ],
            "name": "pause",
            "nameLocation": "1540:5:6",
            "parameters": {
              "id": 4704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1545:2:6"
            },
            "returnParameters": {
              "id": 4708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1575:0:6"
            },
            "scope": 4903,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4736,
            "nodeType": "FunctionDefinition",
            "src": "1655:116:6",
            "nodes": [],
            "body": {
              "id": 4735,
              "nodeType": "Block",
              "src": "1701:70:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4727,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8741,
                        "src": "1719:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420706175736564",
                        "id": 4728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1727:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42dc2407a75faf3d27b2da842a9cbdcb04395eb47f95674bbbc6a3718ccd52ad",
                          "typeString": "literal_string \"Not paused\""
                        },
                        "value": "Not paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_42dc2407a75faf3d27b2da842a9cbdcb04395eb47f95674bbbc6a3718ccd52ad",
                          "typeString": "literal_string \"Not paused\""
                        }
                      ],
                      "id": 4726,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1711:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1711:29:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4730,
                  "nodeType": "ExpressionStatement",
                  "src": "1711:29:6"
                },
                {
                  "expression": {
                    "id": 4733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4731,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8741,
                      "src": "1750:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 4732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1759:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1750:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4734,
                  "nodeType": "ExpressionStatement",
                  "src": "1750:14:6"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 4723,
                    "name": "MANAGER",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8525,
                    "src": "1692:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 4724,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4722,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26438,
                  "src": "1683:8:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1683:17:6"
              }
            ],
            "name": "unpause",
            "nameLocation": "1664:7:6",
            "parameters": {
              "id": 4721,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1671:2:6"
            },
            "returnParameters": {
              "id": 4725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1701:0:6"
            },
            "scope": 4903,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4766,
            "nodeType": "FunctionDefinition",
            "src": "1778:325:6",
            "nodes": [],
            "body": {
              "id": 4765,
              "nodeType": "Block",
              "src": "1880:223:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4745,
                          "name": "_liquidStakingManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4738,
                          "src": "1898:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4748,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1931:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1923:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4746,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1923:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1923:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1898:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573732063616e74206265206e756c6c",
                        "id": 4751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1935:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5c1e3c4460575f77c3b8b6f38d59c6358854b5585929fda8ca27d5597a62beb1",
                          "typeString": "literal_string \"Address cant be null\""
                        },
                        "value": "Address cant be null"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5c1e3c4460575f77c3b8b6f38d59c6358854b5585929fda8ca27d5597a62beb1",
                          "typeString": "literal_string \"Address cant be null\""
                        }
                      ],
                      "id": 4744,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1890:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1890:68:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4753,
                  "nodeType": "ExpressionStatement",
                  "src": "1890:68:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 4755,
                            "name": "_liquidStakingManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4738,
                            "src": "1976:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 4756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30130,
                          "src": "1976:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 4757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1976:34:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d616e616765722073686f756c6420626520636f6e747261637421",
                        "id": 4758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2012:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03d615273bafb15a5b069e967cdee091743cae7096245b4b93c9262b35d8cfd4",
                          "typeString": "literal_string \"Manager should be contract!\""
                        },
                        "value": "Manager should be contract!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03d615273bafb15a5b069e967cdee091743cae7096245b4b93c9262b35d8cfd4",
                          "typeString": "literal_string \"Manager should be contract!\""
                        }
                      ],
                      "id": 4754,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1968:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1968:74:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4760,
                  "nodeType": "ExpressionStatement",
                  "src": "1968:74:6"
                },
                {
                  "expression": {
                    "id": 4763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4761,
                      "name": "liquidStakingManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8739,
                      "src": "2052:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4762,
                      "name": "_liquidStakingManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4738,
                      "src": "2075:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2052:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4764,
                  "nodeType": "ExpressionStatement",
                  "src": "2052:44:6"
                }
              ]
            },
            "functionSelector": "fbd73b93",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 4741,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 26427,
                    "src": "1860:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 4742,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4740,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26438,
                  "src": "1851:8:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1851:28:6"
              }
            ],
            "name": "setLiquidStakingManager",
            "nameLocation": "1787:23:6",
            "parameters": {
              "id": 4739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4738,
                  "mutability": "mutable",
                  "name": "_liquidStakingManager",
                  "nameLocation": "1819:21:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 4766,
                  "src": "1811:29:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4737,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1811:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1810:31:6"
            },
            "returnParameters": {
              "id": 4743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1880:0:6"
            },
            "scope": 4903,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4793,
            "nodeType": "FunctionDefinition",
            "src": "2194:222:6",
            "nodes": [],
            "body": {
              "id": 4792,
              "nodeType": "Block",
              "src": "2260:156:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4776,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4769,
                          "src": "2278:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2288:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2278:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53686f756c642062652067726561746572207468616e207a65726f21",
                        "id": 4779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2291:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_53eb9fb539457890ef7e24133d98b40cfd4210b07cfc427e0ab4f6ae2f8933e1",
                          "typeString": "literal_string \"Should be greater than zero!\""
                        },
                        "value": "Should be greater than zero!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_53eb9fb539457890ef7e24133d98b40cfd4210b07cfc427e0ab4f6ae2f8933e1",
                          "typeString": "literal_string \"Should be greater than zero!\""
                        }
                      ],
                      "id": 4775,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2270:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2270:52:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4781,
                  "nodeType": "ExpressionStatement",
                  "src": "2270:52:6"
                },
                {
                  "expression": {
                    "id": 4784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4782,
                      "name": "minStakeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8645,
                      "src": "2332:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4783,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4769,
                      "src": "2349:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2332:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4785,
                  "nodeType": "ExpressionStatement",
                  "src": "2332:24:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4787,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2389:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2389:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4789,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4769,
                        "src": "2401:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4786,
                      "name": "SetMinStakeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8831,
                      "src": "2371:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2371:38:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4791,
                  "nodeType": "EmitStatement",
                  "src": "2366:43:6"
                }
              ]
            },
            "documentation": {
              "id": 4767,
              "nodeType": "StructuredDocumentation",
              "src": "2109:80:6",
              "text": "@notice sets min stake amount\n @param _amount => new min stake amount"
            },
            "functionSelector": "eb4af045",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 4772,
                    "name": "MANAGER",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8525,
                    "src": "2251:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 4773,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4771,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26438,
                  "src": "2242:8:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2242:17:6"
              }
            ],
            "name": "setMinStakeAmount",
            "nameLocation": "2203:17:6",
            "parameters": {
              "id": 4770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4769,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2226:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 4793,
                  "src": "2221:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4768,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2221:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2220:14:6"
            },
            "returnParameters": {
              "id": 4774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2260:0:6"
            },
            "scope": 4903,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4810,
            "nodeType": "FunctionDefinition",
            "src": "2422:253:6",
            "nodes": [],
            "body": {
              "id": 4809,
              "nodeType": "Block",
              "src": "2504:171:6",
              "nodes": [],
              "statements": [
                {
                  "documentation": "@dev address(0) should changed on LiquidStakingManager contract address",
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4805,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2660:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sig",
                        "nodeType": "MemberAccess",
                        "src": "2660:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4802,
                            "name": "liquidStakingManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8739,
                            "src": "2627:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4801,
                          "name": "ILiquidStakingManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19977,
                          "src": "2605:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ILiquidStakingManager_$19977_$",
                            "typeString": "type(contract ILiquidStakingManager)"
                          }
                        },
                        "id": 4803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2605:43:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILiquidStakingManager_$19977",
                          "typeString": "contract ILiquidStakingManager"
                        }
                      },
                      "id": 4804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19976,
                      "src": "2605:54:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_address_$",
                        "typeString": "function (bytes4) view external returns (address)"
                      }
                    },
                    "id": 4807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2605:63:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4800,
                  "id": 4808,
                  "nodeType": "Return",
                  "src": "2598:70:6"
                }
              ]
            },
            "baseFunctions": [
              31762
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4797,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4796,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4589,
                  "src": "2472:13:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2472:13:6"
              }
            ],
            "name": "_implementation",
            "nameLocation": "2431:15:6",
            "overrides": {
              "id": 4795,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2463:8:6"
            },
            "parameters": {
              "id": 4794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2446:2:6"
            },
            "returnParameters": {
              "id": 4800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4799,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4810,
                  "src": "2495:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4798,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2495:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2494:9:6"
            },
            "scope": 4903,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 4822,
            "nodeType": "FunctionDefinition",
            "src": "2772:82:6",
            "nodes": [],
            "body": {
              "id": 4821,
              "nodeType": "Block",
              "src": "2809:45:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4817,
                          "name": "_implementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            4810
                          ],
                          "referencedDeclaration": 4810,
                          "src": "2829:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2829:17:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4816,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31756,
                      "src": "2819:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2819:28:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4820,
                  "nodeType": "ExpressionStatement",
                  "src": "2819:28:6"
                }
              ]
            },
            "documentation": {
              "id": 4811,
              "nodeType": "StructuredDocumentation",
              "src": "2681:86:6",
              "text": "@notice finish previously opened withdrawal\n @param _id => withdrawal index"
            },
            "functionSelector": "2e1a7d4d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2781:8:6",
            "parameters": {
              "id": 4814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4813,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "2795:3:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 4822,
                  "src": "2790:8:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4812,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2790:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2789:10:6"
            },
            "returnParameters": {
              "id": 4815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2809:0:6"
            },
            "scope": 4903,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4874,
            "nodeType": "FunctionDefinition",
            "src": "2860:408:6",
            "nodes": [],
            "body": {
              "id": 4873,
              "nodeType": "Block",
              "src": "3038:230:6",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    4841
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4841,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "3063:1:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 4873,
                      "src": "3048:16:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$8698_storage_ptr",
                        "typeString": "struct LiquidStakingStorage.Staker"
                      },
                      "typeName": {
                        "id": 4840,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4839,
                          "name": "Staker",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8698,
                          "src": "3048:6:6"
                        },
                        "referencedDeclaration": 8698,
                        "src": "3048:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$8698_storage_ptr",
                          "typeString": "struct LiquidStakingStorage.Staker"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4848,
                  "initialValue": {
                    "baseExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 4842,
                          "name": "dapps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8712,
                          "src": "3067:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Dapp_$8685_storage_$",
                            "typeString": "mapping(string memory => struct LiquidStakingStorage.Dapp storage ref)"
                          }
                        },
                        "id": 4844,
                        "indexExpression": {
                          "id": 4843,
                          "name": "_utility",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4824,
                          "src": "3073:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3067:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dapp_$8685_storage",
                          "typeString": "struct LiquidStakingStorage.Dapp storage ref"
                        }
                      },
                      "id": 4845,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8684,
                      "src": "3067:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$8698_storage_$",
                        "typeString": "mapping(address => struct LiquidStakingStorage.Staker storage ref)"
                      }
                    },
                    "id": 4847,
                    "indexExpression": {
                      "id": 4846,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4826,
                      "src": "3091:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3067:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Staker_$8698_storage",
                      "typeString": "struct LiquidStakingStorage.Staker storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3048:49:6"
                },
                {
                  "expression": {
                    "id": 4854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4849,
                      "name": "eraBalance_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4831,
                      "src": "3107:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 4850,
                          "name": "s",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4841,
                          "src": "3121:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$8698_storage_ptr",
                            "typeString": "struct LiquidStakingStorage.Staker storage pointer"
                          }
                        },
                        "id": 4851,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "eraBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8689,
                        "src": "3121:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 4853,
                      "indexExpression": {
                        "id": 4852,
                        "name": "_era",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4828,
                        "src": "3134:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3121:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3107:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4855,
                  "nodeType": "ExpressionStatement",
                  "src": "3107:32:6"
                },
                {
                  "expression": {
                    "id": 4861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4856,
                      "name": "isZeroBalance_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4833,
                      "src": "3149:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 4857,
                          "name": "s",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4841,
                          "src": "3166:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$8698_storage_ptr",
                            "typeString": "struct LiquidStakingStorage.Staker storage pointer"
                          }
                        },
                        "id": 4858,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isZeroBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8693,
                        "src": "3166:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 4860,
                      "indexExpression": {
                        "id": 4859,
                        "name": "_era",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4828,
                        "src": "3182:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3166:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3149:38:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4862,
                  "nodeType": "ExpressionStatement",
                  "src": "3149:38:6"
                },
                {
                  "expression": {
                    "id": 4866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4863,
                      "name": "rewards_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4835,
                      "src": "3197:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 4864,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4841,
                        "src": "3208:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$8698_storage_ptr",
                          "typeString": "struct LiquidStakingStorage.Staker storage pointer"
                        }
                      },
                      "id": 4865,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8695,
                      "src": "3208:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3197:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4867,
                  "nodeType": "ExpressionStatement",
                  "src": "3197:20:6"
                },
                {
                  "expression": {
                    "id": 4871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4868,
                      "name": "lastClaimedEra_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4837,
                      "src": "3227:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 4869,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4841,
                        "src": "3245:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$8698_storage_ptr",
                          "typeString": "struct LiquidStakingStorage.Staker storage pointer"
                        }
                      },
                      "id": 4870,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastClaimedEra",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8697,
                      "src": "3245:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3227:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4872,
                  "nodeType": "ExpressionStatement",
                  "src": "3227:34:6"
                }
              ]
            },
            "functionSelector": "0f80b592",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStaker",
            "nameLocation": "2869:9:6",
            "parameters": {
              "id": 4829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4824,
                  "mutability": "mutable",
                  "name": "_utility",
                  "nameLocation": "2893:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 4874,
                  "src": "2879:22:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4823,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2879:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4826,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "2911:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 4874,
                  "src": "2903:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4825,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2903:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4828,
                  "mutability": "mutable",
                  "name": "_era",
                  "nameLocation": "2926:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 4874,
                  "src": "2918:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4827,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2918:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2878:53:6"
            },
            "returnParameters": {
              "id": 4838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4831,
                  "mutability": "mutable",
                  "name": "eraBalance_",
                  "nameLocation": "2961:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 4874,
                  "src": "2953:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4830,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2953:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4833,
                  "mutability": "mutable",
                  "name": "isZeroBalance_",
                  "nameLocation": "2979:14:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 4874,
                  "src": "2974:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4832,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2974:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4835,
                  "mutability": "mutable",
                  "name": "rewards_",
                  "nameLocation": "3003:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 4874,
                  "src": "2995:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4834,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2995:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4837,
                  "mutability": "mutable",
                  "name": "lastClaimedEra_",
                  "nameLocation": "3021:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 4874,
                  "src": "3013:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4836,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3013:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2952:85:6"
            },
            "scope": 4903,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4888,
            "nodeType": "FunctionDefinition",
            "src": "3326:121:6",
            "nodes": [],
            "body": {
              "id": 4887,
              "nodeType": "Block",
              "src": "3400:47:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 4882,
                      "name": "withdrawals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8567,
                      "src": "3417:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Withdrawal_$8561_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct LiquidStakingStorage.Withdrawal storage ref[] storage ref)"
                      }
                    },
                    "id": 4885,
                    "indexExpression": {
                      "expression": {
                        "id": 4883,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3429:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3429:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3417:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Withdrawal_$8561_storage_$dyn_storage",
                      "typeString": "struct LiquidStakingStorage.Withdrawal storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 4881,
                  "id": 4886,
                  "nodeType": "Return",
                  "src": "3410:30:6"
                }
              ]
            },
            "documentation": {
              "id": 4875,
              "nodeType": "StructuredDocumentation",
              "src": "3278:43:6",
              "text": "@notice returns user active withdrawals"
            },
            "functionSelector": "331d437b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserWithdrawals",
            "nameLocation": "3335:18:6",
            "parameters": {
              "id": 4876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3353:2:6"
            },
            "returnParameters": {
              "id": 4881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4880,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4888,
                  "src": "3379:19:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Withdrawal_$8561_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct LiquidStakingStorage.Withdrawal[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4878,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4877,
                        "name": "Withdrawal",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 8561,
                        "src": "3379:10:6"
                      },
                      "referencedDeclaration": 8561,
                      "src": "3379:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Withdrawal_$8561_storage_ptr",
                        "typeString": "struct LiquidStakingStorage.Withdrawal"
                      }
                    },
                    "id": 4879,
                    "nodeType": "ArrayTypeName",
                    "src": "3379:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Withdrawal_$8561_storage_$dyn_storage_ptr",
                      "typeString": "struct LiquidStakingStorage.Withdrawal[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3378:21:6"
            },
            "scope": 4903,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4902,
            "nodeType": "FunctionDefinition",
            "src": "3453:134:6",
            "nodes": [],
            "body": {
              "id": 4901,
              "nodeType": "Block",
              "src": "3545:42:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 4897,
                      "name": "withdrawals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8567,
                      "src": "3562:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Withdrawal_$8561_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct LiquidStakingStorage.Withdrawal storage ref[] storage ref)"
                      }
                    },
                    "id": 4899,
                    "indexExpression": {
                      "id": 4898,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4890,
                      "src": "3574:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3562:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Withdrawal_$8561_storage_$dyn_storage",
                      "typeString": "struct LiquidStakingStorage.Withdrawal storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 4896,
                  "id": 4900,
                  "nodeType": "Return",
                  "src": "3555:25:6"
                }
              ]
            },
            "functionSelector": "c6ecccb8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserWithdrawalsArray",
            "nameLocation": "3462:23:6",
            "parameters": {
              "id": 4891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4890,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "3494:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 4902,
                  "src": "3486:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4889,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3486:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3485:15:6"
            },
            "returnParameters": {
              "id": 4896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4895,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4902,
                  "src": "3524:19:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Withdrawal_$8561_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct LiquidStakingStorage.Withdrawal[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4893,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4892,
                        "name": "Withdrawal",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 8561,
                        "src": "3524:10:6"
                      },
                      "referencedDeclaration": 8561,
                      "src": "3524:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Withdrawal_$8561_storage_ptr",
                        "typeString": "struct LiquidStakingStorage.Withdrawal"
                      }
                    },
                    "id": 4894,
                    "nodeType": "ArrayTypeName",
                    "src": "3524:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Withdrawal_$8561_storage_$dyn_storage_ptr",
                      "typeString": "struct LiquidStakingStorage.Withdrawal[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3523:21:6"
            },
            "scope": 4903,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4562,
              "name": "AccessControlUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26724,
              "src": "301:24:6"
            },
            "id": 4563,
            "nodeType": "InheritanceSpecifier",
            "src": "301:24:6"
          },
          {
            "baseName": {
              "id": 4564,
              "name": "LiquidStakingStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8901,
              "src": "327:20:6"
            },
            "id": 4565,
            "nodeType": "InheritanceSpecifier",
            "src": "327:20:6"
          },
          {
            "baseName": {
              "id": 4566,
              "name": "Proxy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31797,
              "src": "349:5:6"
            },
            "id": 4567,
            "nodeType": "InheritanceSpecifier",
            "src": "349:5:6"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          4903,
          31797,
          8901,
          26724,
          30741,
          30753,
          26822,
          30397,
          27105
        ],
        "name": "LiquidStaking",
        "nameLocation": "284:13:6",
        "scope": 4904,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 6
}