{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "era",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "ClaimDappError",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eraStakerReward",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_era",
          "type": "uint256"
        }
      ],
      "name": "ClaimDappSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "utility",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "era",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "ClaimStakerError",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "era",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lastClaimed",
          "type": "uint256"
        }
      ],
      "name": "ClaimStakerSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "utility",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ClaimedFromUtility",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "FillRewardPool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "FillUnbonded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "FillUnstaking",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "utility",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "HarvestRewards",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "SetMinStakeAmount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "utility",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "StakedInUtility",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "era",
          "type": "uint256"
        }
      ],
      "name": "Synchronization",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "utility",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sum2unstake",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "era",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "UnbondAndUnstakeError",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "era",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sum2unstake",
          "type": "uint256"
        }
      ],
      "name": "UnbondAndUnstakeSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "immediate",
          "type": "bool"
        }
      ],
      "name": "Unstaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "utility",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "immediate",
          "type": "bool"
        }
      ],
      "name": "UnstakedFromUtility",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawRevenue",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_era",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "WithdrawUnbondedError",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_era",
          "type": "uint256"
        }
      ],
      "name": "WithdrawUnbondedSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DAPPS_STAKING",
      "outputs": [
        {
          "internalType": "contract DappsStaking",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DNTname",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MANAGEMENT_FEE",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MANAGER",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REVENUE_FEE",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REWARDS_PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UNSTAKING_FEE",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "accumulatedRewardsPerShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "adaptersDistr",
      "outputs": [
        {
          "internalType": "contract IAdaptersDistributor",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "buffer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimingTxLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentEra",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "dapps",
      "outputs": [
        {
          "internalType": "address",
          "name": "dappAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "stakedBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sum2unstake",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dappsList",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "deactivationEra",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distr",
      "outputs": [
        {
          "internalType": "contract NDistributor",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dntToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "eraBuffer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "eraRevenue",
      "outputs": [
        {
          "internalType": "bool",
          "name": "done",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "eraRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "eraShot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eraShotsLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "eraStakerReward",
      "outputs": [
        {
          "internalType": "bool",
          "name": "done",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "eraUnstaked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "done",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserLpTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "haveUtility",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "isActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isLpToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isPartner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isStaker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isUnstakes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastEraTotalBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastUnstaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastUpdated",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidStakingManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lpHandlers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lpTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_user",
          "type": "address[]"
        }
      ],
      "name": "migrateBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "migrateInternalStorage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "migrateStorage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minStakeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftDistr",
      "outputs": [
        {
          "internalType": "contract INFTDistributor",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "partnerIdx",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "partners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "partnersLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "eraStarted",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sum2unstake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalRevenue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "totalUserRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unbondedPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unstakingPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "usersShotsPerEra",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "utilName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "withdrawals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "eraReq",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lag",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061239e806100206000396000f3fe608060405234801561001057600080fd5b50600436106103fb5760003560e01c80638062939011610215578063c3b49d0411610125578063dcf425df116100b8578063eb51a44c11610087578063eb51a44c146109f1578063f128f63114610a1e578063f188768414610a27578063fb67510514610a30578063fd5e6dd114610a3857600080fd5b8063dcf425df14610943578063e09c1954146109ac578063e2e836f8146109d5578063e77ee345146109e857600080fd5b8063d0b06f5d116100f4578063d0b06f5d14610901578063d547741f1461090a578063d6356ff41461091d578063da3bc9581461093057600080fd5b8063c3b49d041461088a578063c4e137e71461089d578063c71367b5146108ca578063c8902a21146108d357600080fd5b8063a5ae02ac116101a8578063af66c36b11610177578063af66c36b1461083f578063bd1bbd3b14610848578063bf2d9e0b1461085b578063bf8137ab14610864578063c21a72761461087757600080fd5b8063a5ae02ac14610805578063ab48692914610825578063ad7a672f1461082d578063adc1b9561461083657600080fd5b8063973628f6116101e4578063973628f6146107b5578063a217fddf146107bd578063a2ce0f4a146107c5578063a44bca8e146107e557600080fd5b8063806293901461076057806386b3cd26146107735780638c0f9aac1461077f57806391d14854146107a257600080fd5b806340bf8a8d116103105780635c975abb116102a35780636bbea766116102725780636bbea766146106e05780636f1e8533146106f35780636f5e4488146107165780636f68f2e91461071f5780637111dfa31461074d57600080fd5b80635c975abb146106a85780635ca5914e146106bc5780635f1554e3146106cf57806366666aa9146106d757600080fd5b80635495ec81116102df5780635495ec811461066357806354b057f91461066c57806359601ebc1461069757806359b40f411461069f57600080fd5b806340bf8a8d146105fd578063422b1077146106125780634421bd1e146106405780634d6174511461065a57600080fd5b80631bb5e2dc116103935780632a14d8f4116103625780632a14d8f4146105595780632e4a4a17146105845780632ea31bf6146105915780632f2ff15d146105d557806336568abe146105ea57600080fd5b80631bb5e2dc146104fa5780631dc007851461050d57806324025b191461052d578063248a9ca31461053657600080fd5b80630f24ca7d116103cf5780630f24ca7d1461047d57806312a12a06146104a057806316934fc4146104a95780631b2df850146104e557600080fd5b8062179fbd1461040057806301ffc9a71461041c5780630413f9a51461043f57806305e2a21714610452575b600080fd5b61040960b75481565b6040519081526020015b60405180910390f35b61042f61042a366004611f3b565b610a4b565b6040519015158152602001610413565b61040961044d366004611dd4565b610a82565b60a654610465906001600160a01b031681565b6040516001600160a01b039091168152602001610413565b61042f61048b366004611dd4565b60aa6020526000908152604090205460ff1681565b61040960a85481565b6104d06104b7366004611dd4565b609e602052600090815260409020805460019091015482565b60408051928352602083019190915201610413565b61040960008051602061234983398151915281565b610465610508366004611ef8565b610b6c565b61040961051b366004611ef8565b60ac6020526000908152604090205481565b610409609a5481565b610409610544366004611ef8565b60009081526065602052604090206001015490565b610409610567366004611f63565b805160208183018101805160c38252928201919093012091525481565b60b65461042f9060ff1681565b6105be61059f366004611ef8565b60a1602052600090815260409020805460019091015460ff9091169082565b604080519215158352602083019190915201610413565b6105e86105e3366004611f10565b610b96565b005b6105e86105f8366004611f10565b610bc0565b610605610c43565b6040516104139190612199565b610625610620366004611dee565b610cd1565b60408051938452602084019290925290820152606001610413565b610648600981565b60405160ff9091168152602001610413565b61040960bb5481565b61040960a95481565b61040961067a366004611dee565b60ae60209081526000928352604080842090915290825290205481565b610648600181565b61046561500181565b60c75461042f90600160a01b900460ff1681565b60c754610465906001600160a01b031681565b610648600a81565b610409609c5481565b609d54610465906001600160a01b031681565b61042f610701366004611dd4565b60a76020526000908152604090205460ff1681565b610409609b5481565b61042f61072d366004611f63565b805160208183018101805160c18252928201919093012091525460ff1681565b6105e861075b366004611dd4565b610d13565b6105e861076e366004611e49565b61116f565b61040964e8d4a5100081565b61042f61078d366004611dd4565b60b86020526000908152604090205460ff1681565b61042f6107b0366004611f10565b6111dc565b610409611207565b610409600081565b6104096107d3366004611ef8565b60c46020526000908152604090205481565b6104096107f3366004611dd4565b60b06020526000908152604090205481565b610409610813366004611dd4565b60b96020526000908152604090205481565b610605611281565b61040960995481565b61040960b35481565b61040960b55481565b60c554610465906001600160a01b031681565b61040960ad5481565b6105e8610872366004611dd4565b61128e565b610409610885366004611ef8565b6115ef565b610465610898366004611ef8565b611606565b6105be6108ab366004611ef8565b60a0602052600090815260409020805460019091015460ff9091169082565b61040960a35481565b61042f6108e1366004611f63565b805160208183018101805160c28252928201919093012091525460ff1681565b61040960a45481565b6105e8610918366004611f10565b611616565b61040961092b366004611e17565b61163b565b61060561093e366004611ef8565b611679565b610987610951366004611f63565b805160208183018101805160c0825292820191909301209152805460018201546002909201546001600160a01b03909116919083565b604080516001600160a01b039094168452602084019290925290820152606001610413565b6104656109ba366004611dd4565b60b1602052600090815260409020546001600160a01b031681565b60c654610465906001600160a01b031681565b61040960bc5481565b6105be6109ff366004611ef8565b60a2602052600090815260409020805460019091015460ff9091169082565b61040960b25481565b61040960b45481565b6105e86116a4565b610465610a46366004611ef8565b61171a565b60006001600160e01b03198216637965db0b60e01b1480610a7c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60ba54600090610a9457506000919050565b60005b60ba54811015610b665760ba8181548110610ac257634e487b7160e01b600052603260045260246000fd5b600091825260209091200154604051630419c05b60e11b81526001600160a01b0385811660048301529091169063083380b69060240160206040518083038186803b158015610b1057600080fd5b505afa158015610b24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b489190611ff0565b610b5290836121fd565b915080610b5e816122d7565b915050610a97565b50919050565b60ab8181548110610b7c57600080fd5b6000918252602090912001546001600160a01b0316905081565b600082815260656020526040902060010154610bb18161172a565b610bbb8383611737565b505050565b6001600160a01b0381163314610c355760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b610c3f82826117bd565b5050565b60988054610c50906122a2565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7c906122a2565b8015610cc95780601f10610c9e57610100808354040283529160200191610cc9565b820191906000526020600020905b815481529060010190602001808311610cac57829003601f168201915b505050505081565b609f6020528160005260406000208181548110610ced57600080fd5b600091825260209091206003909102018054600182015460029092015490935090915083565b600080516020612349833981519152610d2b8161172a565b6001600160a01b038216610d3d575050565b6000610d47611207565b905060b06000846001600160a01b03166001600160a01b031681526020019081526020016000205460c06097604051610d80919061207f565b9081526040805191829003602090810183206001600160a01b038089166000908152600390920183528382206002019590955560ae82528281208682529091522054609d5463e1d9b41760e01b83529092169063e1d9b41790610ded908790609790609890600401612163565b60206040518083038186803b158015610e0557600080fd5b505afa158015610e19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3d9190611ff0565b610e479190612248565b60c06097604051610e58919061207f565b9081526040805191829003602090810183206001600160a01b038816600090815260039091018252828120868252909152209190915560c090610e9d9060979061207f565b90815260408051602092819003830190206001600160a01b03861660009081526003909101835281812084825290925290205415610edc576000610edf565b60015b60c06097604051610ef0919061207f565b90815260408051602092819003830190206001600160a01b03871660008181526003909201845282822086835260019081018552838320805460ff191696151596909617909555815260ae909252812091610f4c9084906121fd565b81526020810191909152604090810160002054609d54915163e1d9b41760e01b815290916001600160a01b03169063e1d9b41790610f94908790609790609890600401612163565b60206040518083038186803b158015610fac57600080fd5b505afa158015610fc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe49190611ff0565b610fee9190612248565b60c06097604051610fff919061207f565b90815260408051602092819003830190206001600160a01b038716600090815260039091019092528120906110358460016121fd565b81526020019081526020016000208190555060c06097604051611058919061207f565b90815260408051602092819003830190206001600160a01b0386166000908152600390910190925281209061108e8360016121fd565b8152602001908152602001600020546000146110ab5760006110ae565b60015b60c060976040516110bf919061207f565b90815260200160405180910390206003016000856001600160a01b03166001600160a01b03168152602001908152602001600020600101600083600161110591906121fd565b815260200190815260200160002060006101000a81548160ff0219169083151502179055508060c0609760405161113c919061207f565b908152604080519182900360209081019092206001600160a01b0387166000908152600391820190935291200155505050565b6000805160206123498339815191526111878161172a565b815160005b818110156111d6576111c48482815181106111b757634e487b7160e01b600052603260045260246000fd5b6020026020010151610d13565b806111ce816122d7565b91505061118c565b50505050565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60006150016001600160a01b031663e608d80b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561124457600080fd5b505afa158015611258573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127c9190611ff0565b905090565b60978054610c50906122a2565b6000805160206123498339815191526112a68161172a565b6001600160a01b0382166112f25760405162461bcd60e51b81526020600482015260136024820152725a65726f206164647265737320616c61726d2160681b6044820152606401610c2c565b60006112fc611207565b60b2546001600160a01b038516600090815260af6020908152604080832085845290915290205491925010156113695760405162461bcd60e51b8152602060048201526012602482015271546f6f206d756368206572612073686f747360701b6044820152606401610c2c565b6001600160a01b038316600090815260af602090815260408083208484529091529020546115a6576001600160a01b038316600090815260af60205260408120816113b5600185612248565b815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561140d57602002820191906000526020600020905b8154815260200190600101908083116113f9575b505050505090506000815111156115a457600061142982611824565b9050600060c0604051611451906e41646170746572735574696c69747960881b8152600f0190565b90815260200160405180910390206003016000876001600160a01b03166001600160a01b0316815260200190815260200160002090508181600001600086815260200190815260200160002060008282546114ac91906121fd565b90915550506000848152602082905260409020546114e657600084815260018281016020526040909120805460ff191690911790556114ff565b60008481526001820160205260409020805460ff191690555b604080516e41646170746572735574696c69747960881b815260c0600f820152815190819003602f0190206001600160a01b038816600090815260039182016020529190912001546115a1576115568460016121fd565b6040516e41646170746572735574696c69747960881b815260c090600f0190815260408051602092819003830190206001600160a01b038a1660009081526003918201909352912001555b50505b505b60006115b184610a82565b6001600160a01b03909416600090815260af602090815260408083209483529381529281208054600181018255908252929020909101929092555050565b60bd81600281106115ff57600080fd5b0154905081565b60ba8181548110610b7c57600080fd5b6000828152606560205260409020600101546116318161172a565b610bbb83836117bd565b60af602052826000526040600020602052816000526040600020818154811061166357600080fd5b9060005260206000200160009250925050505481565b60bf818154811061168957600080fd5b906000526020600020016000915090508054610c50906122a2565b6000805160206123498339815191526116bc8161172a565b60a55460005b81811015610bbb5761170860a582815481106116ee57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316610d13565b80611712816122d7565b9150506116c2565b60a58181548110610b7c57600080fd5b6117348133611b6b565b50565b61174182826111dc565b610c3f5760008281526065602090815260408083206001600160a01b03851684529091529020805460ff191660011790556117793390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6117c782826111dc565b15610c3f5760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b8051600090829082805b611839600184612248565b811015611a8f5760005b600161184f8386612248565b6118599190612248565b81101561199a578461186c8260016121fd565b8151811061188a57634e487b7160e01b600052603260045260246000fd5b60200260200101518582815181106118b257634e487b7160e01b600052603260045260246000fd5b6020026020010151111561198857600192506000856118d183866121fd565b815181106118ef57634e487b7160e01b600052603260045260246000fd5b6020026020010151905085828151811061191957634e487b7160e01b600052603260045260246000fd5b60200260200101518683600161192f91906121fd565b8151811061194d57634e487b7160e01b600052603260045260246000fd5b6020026020010181815250508086838151811061197a57634e487b7160e01b600052603260045260246000fd5b602002602001018181525050505b80611992816122d7565b915050611843565b5081611a7d576119ab6002846122f2565b611a405760028460016119be8387612215565b6119c89190612248565b815181106119e657634e487b7160e01b600052603260045260246000fd5b6020026020010151856002866119fc9190612215565b81518110611a1a57634e487b7160e01b600052603260045260246000fd5b6020026020010151611a2c91906121fd565b611a369190612215565b9695505050505050565b83611a4c600285612215565b81518110611a6a57634e487b7160e01b600052603260045260246000fd5b6020026020010151945050505050919050565b80611a87816122d7565b91505061182e565b50611a9b6002836122f2565b611b2f576002836001611aae8386612215565b611ab89190612248565b81518110611ad657634e487b7160e01b600052603260045260246000fd5b602002602001015184600285611aec9190612215565b81518110611b0a57634e487b7160e01b600052603260045260246000fd5b6020026020010151611b1c91906121fd565b611b269190612215565b95945050505050565b82611b3b600284612215565b81518110611b5957634e487b7160e01b600052603260045260246000fd5b60200260200101519350505050919050565b611b7582826111dc565b610c3f57611b8d816001600160a01b03166014611bcf565b611b98836020611bcf565b604051602001611ba99291906120ee565b60408051601f198184030181529082905262461bcd60e51b8252610c2c91600401612199565b60606000611bde836002612229565b611be99060026121fd565b67ffffffffffffffff811115611c0f57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611c39576020820181803683370190505b509050600360fc1b81600081518110611c6257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611c9f57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000611cc3846002612229565b611cce9060016121fd565b90505b6001811115611d62576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611d1057634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110611d3457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93611d5b8161228b565b9050611cd1565b508315611db15760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610c2c565b9392505050565b80356001600160a01b0381168114611dcf57600080fd5b919050565b600060208284031215611de5578081fd5b611db182611db8565b60008060408385031215611e00578081fd5b611e0983611db8565b946020939093013593505050565b600080600060608486031215611e2b578081fd5b611e3484611db8565b95602085013595506040909401359392505050565b60006020808385031215611e5b578182fd5b823567ffffffffffffffff80821115611e72578384fd5b818501915085601f830112611e85578384fd5b813581811115611e9757611e97612332565b8060051b9150611ea88483016121cc565b8181528481019084860184860187018a1015611ec2578788fd5b8795505b83861015611eeb57611ed781611db8565b835260019590950194918601918601611ec6565b5098975050505050505050565b600060208284031215611f09578081fd5b5035919050565b60008060408385031215611f22578182fd5b82359150611f3260208401611db8565b90509250929050565b600060208284031215611f4c578081fd5b81356001600160e01b031981168114611db1578182fd5b60006020808385031215611f75578182fd5b823567ffffffffffffffff80821115611f8c578384fd5b818501915085601f830112611f9f578384fd5b813581811115611fb157611fb1612332565b611fc3601f8201601f191685016121cc565b91508082528684828501011115611fd8578485fd5b80848401858401378101909201929092529392505050565b600060208284031215612001578081fd5b5051919050565b60008154612015816122a2565b808552602060018381168015612032576001811461204657612074565b60ff19851688840152604088019550612074565b866000528260002060005b8581101561206c5781548a8201860152908301908401612051565b890184019650505b505050505092915050565b600080835461208d816122a2565b600182811680156120a557600181146120b6576120e2565b60ff198416875282870194506120e2565b8786526020808720875b858110156120d95781548a8201529084019082016120c0565b50505082870194505b50929695505050505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161212681601785016020880161225f565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161215781602884016020880161225f565b01602801949350505050565b6001600160a01b038416815260606020820181905260009061218790830185612008565b8281036040840152611a368185612008565b60208152600082518060208401526121b881604085016020870161225f565b601f01601f19169190910160400192915050565b604051601f8201601f1916810167ffffffffffffffff811182821017156121f5576121f5612332565b604052919050565b6000821982111561221057612210612306565b500190565b6000826122245761222461231c565b500490565b600081600019048311821515161561224357612243612306565b500290565b60008282101561225a5761225a612306565b500390565b60005b8381101561227a578181015183820152602001612262565b838111156111d65750506000910152565b60008161229a5761229a612306565b506000190190565b600181811c908216806122b657607f821691505b60208210811415610b6657634e487b7160e01b600052602260045260246000fd5b60006000198214156122eb576122eb612306565b5060010190565b6000826123015761230161231c565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fdfeaf290d8680820aad922855f39b306097b20e28774d6c1ad35a20325630c3a02ca2646970667358221220b902b50da85a6bacb86494f2e44a8eb8089eb9f5018557aee455aac64803780464736f6c63430008040033",
    "sourceMap": "176:4997:9:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106103fb5760003560e01c80638062939011610215578063c3b49d0411610125578063dcf425df116100b8578063eb51a44c11610087578063eb51a44c146109f1578063f128f63114610a1e578063f188768414610a27578063fb67510514610a30578063fd5e6dd114610a3857600080fd5b8063dcf425df14610943578063e09c1954146109ac578063e2e836f8146109d5578063e77ee345146109e857600080fd5b8063d0b06f5d116100f4578063d0b06f5d14610901578063d547741f1461090a578063d6356ff41461091d578063da3bc9581461093057600080fd5b8063c3b49d041461088a578063c4e137e71461089d578063c71367b5146108ca578063c8902a21146108d357600080fd5b8063a5ae02ac116101a8578063af66c36b11610177578063af66c36b1461083f578063bd1bbd3b14610848578063bf2d9e0b1461085b578063bf8137ab14610864578063c21a72761461087757600080fd5b8063a5ae02ac14610805578063ab48692914610825578063ad7a672f1461082d578063adc1b9561461083657600080fd5b8063973628f6116101e4578063973628f6146107b5578063a217fddf146107bd578063a2ce0f4a146107c5578063a44bca8e146107e557600080fd5b8063806293901461076057806386b3cd26146107735780638c0f9aac1461077f57806391d14854146107a257600080fd5b806340bf8a8d116103105780635c975abb116102a35780636bbea766116102725780636bbea766146106e05780636f1e8533146106f35780636f5e4488146107165780636f68f2e91461071f5780637111dfa31461074d57600080fd5b80635c975abb146106a85780635ca5914e146106bc5780635f1554e3146106cf57806366666aa9146106d757600080fd5b80635495ec81116102df5780635495ec811461066357806354b057f91461066c57806359601ebc1461069757806359b40f411461069f57600080fd5b806340bf8a8d146105fd578063422b1077146106125780634421bd1e146106405780634d6174511461065a57600080fd5b80631bb5e2dc116103935780632a14d8f4116103625780632a14d8f4146105595780632e4a4a17146105845780632ea31bf6146105915780632f2ff15d146105d557806336568abe146105ea57600080fd5b80631bb5e2dc146104fa5780631dc007851461050d57806324025b191461052d578063248a9ca31461053657600080fd5b80630f24ca7d116103cf5780630f24ca7d1461047d57806312a12a06146104a057806316934fc4146104a95780631b2df850146104e557600080fd5b8062179fbd1461040057806301ffc9a71461041c5780630413f9a51461043f57806305e2a21714610452575b600080fd5b61040960b75481565b6040519081526020015b60405180910390f35b61042f61042a366004611f3b565b610a4b565b6040519015158152602001610413565b61040961044d366004611dd4565b610a82565b60a654610465906001600160a01b031681565b6040516001600160a01b039091168152602001610413565b61042f61048b366004611dd4565b60aa6020526000908152604090205460ff1681565b61040960a85481565b6104d06104b7366004611dd4565b609e602052600090815260409020805460019091015482565b60408051928352602083019190915201610413565b61040960008051602061234983398151915281565b610465610508366004611ef8565b610b6c565b61040961051b366004611ef8565b60ac6020526000908152604090205481565b610409609a5481565b610409610544366004611ef8565b60009081526065602052604090206001015490565b610409610567366004611f63565b805160208183018101805160c38252928201919093012091525481565b60b65461042f9060ff1681565b6105be61059f366004611ef8565b60a1602052600090815260409020805460019091015460ff9091169082565b604080519215158352602083019190915201610413565b6105e86105e3366004611f10565b610b96565b005b6105e86105f8366004611f10565b610bc0565b610605610c43565b6040516104139190612199565b610625610620366004611dee565b610cd1565b60408051938452602084019290925290820152606001610413565b610648600981565b60405160ff9091168152602001610413565b61040960bb5481565b61040960a95481565b61040961067a366004611dee565b60ae60209081526000928352604080842090915290825290205481565b610648600181565b61046561500181565b60c75461042f90600160a01b900460ff1681565b60c754610465906001600160a01b031681565b610648600a81565b610409609c5481565b609d54610465906001600160a01b031681565b61042f610701366004611dd4565b60a76020526000908152604090205460ff1681565b610409609b5481565b61042f61072d366004611f63565b805160208183018101805160c18252928201919093012091525460ff1681565b6105e861075b366004611dd4565b610d13565b6105e861076e366004611e49565b61116f565b61040964e8d4a5100081565b61042f61078d366004611dd4565b60b86020526000908152604090205460ff1681565b61042f6107b0366004611f10565b6111dc565b610409611207565b610409600081565b6104096107d3366004611ef8565b60c46020526000908152604090205481565b6104096107f3366004611dd4565b60b06020526000908152604090205481565b610409610813366004611dd4565b60b96020526000908152604090205481565b610605611281565b61040960995481565b61040960b35481565b61040960b55481565b60c554610465906001600160a01b031681565b61040960ad5481565b6105e8610872366004611dd4565b61128e565b610409610885366004611ef8565b6115ef565b610465610898366004611ef8565b611606565b6105be6108ab366004611ef8565b60a0602052600090815260409020805460019091015460ff9091169082565b61040960a35481565b61042f6108e1366004611f63565b805160208183018101805160c28252928201919093012091525460ff1681565b61040960a45481565b6105e8610918366004611f10565b611616565b61040961092b366004611e17565b61163b565b61060561093e366004611ef8565b611679565b610987610951366004611f63565b805160208183018101805160c0825292820191909301209152805460018201546002909201546001600160a01b03909116919083565b604080516001600160a01b039094168452602084019290925290820152606001610413565b6104656109ba366004611dd4565b60b1602052600090815260409020546001600160a01b031681565b60c654610465906001600160a01b031681565b61040960bc5481565b6105be6109ff366004611ef8565b60a2602052600090815260409020805460019091015460ff9091169082565b61040960b25481565b61040960b45481565b6105e86116a4565b610465610a46366004611ef8565b61171a565b60006001600160e01b03198216637965db0b60e01b1480610a7c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60ba54600090610a9457506000919050565b60005b60ba54811015610b665760ba8181548110610ac257634e487b7160e01b600052603260045260246000fd5b600091825260209091200154604051630419c05b60e11b81526001600160a01b0385811660048301529091169063083380b69060240160206040518083038186803b158015610b1057600080fd5b505afa158015610b24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b489190611ff0565b610b5290836121fd565b915080610b5e816122d7565b915050610a97565b50919050565b60ab8181548110610b7c57600080fd5b6000918252602090912001546001600160a01b0316905081565b600082815260656020526040902060010154610bb18161172a565b610bbb8383611737565b505050565b6001600160a01b0381163314610c355760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b610c3f82826117bd565b5050565b60988054610c50906122a2565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7c906122a2565b8015610cc95780601f10610c9e57610100808354040283529160200191610cc9565b820191906000526020600020905b815481529060010190602001808311610cac57829003601f168201915b505050505081565b609f6020528160005260406000208181548110610ced57600080fd5b600091825260209091206003909102018054600182015460029092015490935090915083565b600080516020612349833981519152610d2b8161172a565b6001600160a01b038216610d3d575050565b6000610d47611207565b905060b06000846001600160a01b03166001600160a01b031681526020019081526020016000205460c06097604051610d80919061207f565b9081526040805191829003602090810183206001600160a01b038089166000908152600390920183528382206002019590955560ae82528281208682529091522054609d5463e1d9b41760e01b83529092169063e1d9b41790610ded908790609790609890600401612163565b60206040518083038186803b158015610e0557600080fd5b505afa158015610e19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3d9190611ff0565b610e479190612248565b60c06097604051610e58919061207f565b9081526040805191829003602090810183206001600160a01b038816600090815260039091018252828120868252909152209190915560c090610e9d9060979061207f565b90815260408051602092819003830190206001600160a01b03861660009081526003909101835281812084825290925290205415610edc576000610edf565b60015b60c06097604051610ef0919061207f565b90815260408051602092819003830190206001600160a01b03871660008181526003909201845282822086835260019081018552838320805460ff191696151596909617909555815260ae909252812091610f4c9084906121fd565b81526020810191909152604090810160002054609d54915163e1d9b41760e01b815290916001600160a01b03169063e1d9b41790610f94908790609790609890600401612163565b60206040518083038186803b158015610fac57600080fd5b505afa158015610fc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe49190611ff0565b610fee9190612248565b60c06097604051610fff919061207f565b90815260408051602092819003830190206001600160a01b038716600090815260039091019092528120906110358460016121fd565b81526020019081526020016000208190555060c06097604051611058919061207f565b90815260408051602092819003830190206001600160a01b0386166000908152600390910190925281209061108e8360016121fd565b8152602001908152602001600020546000146110ab5760006110ae565b60015b60c060976040516110bf919061207f565b90815260200160405180910390206003016000856001600160a01b03166001600160a01b03168152602001908152602001600020600101600083600161110591906121fd565b815260200190815260200160002060006101000a81548160ff0219169083151502179055508060c0609760405161113c919061207f565b908152604080519182900360209081019092206001600160a01b0387166000908152600391820190935291200155505050565b6000805160206123498339815191526111878161172a565b815160005b818110156111d6576111c48482815181106111b757634e487b7160e01b600052603260045260246000fd5b6020026020010151610d13565b806111ce816122d7565b91505061118c565b50505050565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60006150016001600160a01b031663e608d80b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561124457600080fd5b505afa158015611258573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127c9190611ff0565b905090565b60978054610c50906122a2565b6000805160206123498339815191526112a68161172a565b6001600160a01b0382166112f25760405162461bcd60e51b81526020600482015260136024820152725a65726f206164647265737320616c61726d2160681b6044820152606401610c2c565b60006112fc611207565b60b2546001600160a01b038516600090815260af6020908152604080832085845290915290205491925010156113695760405162461bcd60e51b8152602060048201526012602482015271546f6f206d756368206572612073686f747360701b6044820152606401610c2c565b6001600160a01b038316600090815260af602090815260408083208484529091529020546115a6576001600160a01b038316600090815260af60205260408120816113b5600185612248565b815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561140d57602002820191906000526020600020905b8154815260200190600101908083116113f9575b505050505090506000815111156115a457600061142982611824565b9050600060c0604051611451906e41646170746572735574696c69747960881b8152600f0190565b90815260200160405180910390206003016000876001600160a01b03166001600160a01b0316815260200190815260200160002090508181600001600086815260200190815260200160002060008282546114ac91906121fd565b90915550506000848152602082905260409020546114e657600084815260018281016020526040909120805460ff191690911790556114ff565b60008481526001820160205260409020805460ff191690555b604080516e41646170746572735574696c69747960881b815260c0600f820152815190819003602f0190206001600160a01b038816600090815260039182016020529190912001546115a1576115568460016121fd565b6040516e41646170746572735574696c69747960881b815260c090600f0190815260408051602092819003830190206001600160a01b038a1660009081526003918201909352912001555b50505b505b60006115b184610a82565b6001600160a01b03909416600090815260af602090815260408083209483529381529281208054600181018255908252929020909101929092555050565b60bd81600281106115ff57600080fd5b0154905081565b60ba8181548110610b7c57600080fd5b6000828152606560205260409020600101546116318161172a565b610bbb83836117bd565b60af602052826000526040600020602052816000526040600020818154811061166357600080fd5b9060005260206000200160009250925050505481565b60bf818154811061168957600080fd5b906000526020600020016000915090508054610c50906122a2565b6000805160206123498339815191526116bc8161172a565b60a55460005b81811015610bbb5761170860a582815481106116ee57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316610d13565b80611712816122d7565b9150506116c2565b60a58181548110610b7c57600080fd5b6117348133611b6b565b50565b61174182826111dc565b610c3f5760008281526065602090815260408083206001600160a01b03851684529091529020805460ff191660011790556117793390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6117c782826111dc565b15610c3f5760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b8051600090829082805b611839600184612248565b811015611a8f5760005b600161184f8386612248565b6118599190612248565b81101561199a578461186c8260016121fd565b8151811061188a57634e487b7160e01b600052603260045260246000fd5b60200260200101518582815181106118b257634e487b7160e01b600052603260045260246000fd5b6020026020010151111561198857600192506000856118d183866121fd565b815181106118ef57634e487b7160e01b600052603260045260246000fd5b6020026020010151905085828151811061191957634e487b7160e01b600052603260045260246000fd5b60200260200101518683600161192f91906121fd565b8151811061194d57634e487b7160e01b600052603260045260246000fd5b6020026020010181815250508086838151811061197a57634e487b7160e01b600052603260045260246000fd5b602002602001018181525050505b80611992816122d7565b915050611843565b5081611a7d576119ab6002846122f2565b611a405760028460016119be8387612215565b6119c89190612248565b815181106119e657634e487b7160e01b600052603260045260246000fd5b6020026020010151856002866119fc9190612215565b81518110611a1a57634e487b7160e01b600052603260045260246000fd5b6020026020010151611a2c91906121fd565b611a369190612215565b9695505050505050565b83611a4c600285612215565b81518110611a6a57634e487b7160e01b600052603260045260246000fd5b6020026020010151945050505050919050565b80611a87816122d7565b91505061182e565b50611a9b6002836122f2565b611b2f576002836001611aae8386612215565b611ab89190612248565b81518110611ad657634e487b7160e01b600052603260045260246000fd5b602002602001015184600285611aec9190612215565b81518110611b0a57634e487b7160e01b600052603260045260246000fd5b6020026020010151611b1c91906121fd565b611b269190612215565b95945050505050565b82611b3b600284612215565b81518110611b5957634e487b7160e01b600052603260045260246000fd5b60200260200101519350505050919050565b611b7582826111dc565b610c3f57611b8d816001600160a01b03166014611bcf565b611b98836020611bcf565b604051602001611ba99291906120ee565b60408051601f198184030181529082905262461bcd60e51b8252610c2c91600401612199565b60606000611bde836002612229565b611be99060026121fd565b67ffffffffffffffff811115611c0f57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611c39576020820181803683370190505b509050600360fc1b81600081518110611c6257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611c9f57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000611cc3846002612229565b611cce9060016121fd565b90505b6001811115611d62576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611d1057634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110611d3457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93611d5b8161228b565b9050611cd1565b508315611db15760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610c2c565b9392505050565b80356001600160a01b0381168114611dcf57600080fd5b919050565b600060208284031215611de5578081fd5b611db182611db8565b60008060408385031215611e00578081fd5b611e0983611db8565b946020939093013593505050565b600080600060608486031215611e2b578081fd5b611e3484611db8565b95602085013595506040909401359392505050565b60006020808385031215611e5b578182fd5b823567ffffffffffffffff80821115611e72578384fd5b818501915085601f830112611e85578384fd5b813581811115611e9757611e97612332565b8060051b9150611ea88483016121cc565b8181528481019084860184860187018a1015611ec2578788fd5b8795505b83861015611eeb57611ed781611db8565b835260019590950194918601918601611ec6565b5098975050505050505050565b600060208284031215611f09578081fd5b5035919050565b60008060408385031215611f22578182fd5b82359150611f3260208401611db8565b90509250929050565b600060208284031215611f4c578081fd5b81356001600160e01b031981168114611db1578182fd5b60006020808385031215611f75578182fd5b823567ffffffffffffffff80821115611f8c578384fd5b818501915085601f830112611f9f578384fd5b813581811115611fb157611fb1612332565b611fc3601f8201601f191685016121cc565b91508082528684828501011115611fd8578485fd5b80848401858401378101909201929092529392505050565b600060208284031215612001578081fd5b5051919050565b60008154612015816122a2565b808552602060018381168015612032576001811461204657612074565b60ff19851688840152604088019550612074565b866000528260002060005b8581101561206c5781548a8201860152908301908401612051565b890184019650505b505050505092915050565b600080835461208d816122a2565b600182811680156120a557600181146120b6576120e2565b60ff198416875282870194506120e2565b8786526020808720875b858110156120d95781548a8201529084019082016120c0565b50505082870194505b50929695505050505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161212681601785016020880161225f565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161215781602884016020880161225f565b01602801949350505050565b6001600160a01b038416815260606020820181905260009061218790830185612008565b8281036040840152611a368185612008565b60208152600082518060208401526121b881604085016020870161225f565b601f01601f19169190910160400192915050565b604051601f8201601f1916810167ffffffffffffffff811182821017156121f5576121f5612332565b604052919050565b6000821982111561221057612210612306565b500190565b6000826122245761222461231c565b500490565b600081600019048311821515161561224357612243612306565b500290565b60008282101561225a5761225a612306565b500390565b60005b8381101561227a578181015183820152602001612262565b838111156111d65750506000910152565b60008161229a5761229a612306565b506000190190565b600181811c908216806122b657607f821691505b60208210811415610b6657634e487b7160e01b600052602260045260246000fd5b60006000198214156122eb576122eb612306565b5060010190565b6000826123015761230161231c565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fdfeaf290d8680820aad922855f39b306097b20e28774d6c1ad35a20325630c3a02ca2646970667358221220b902b50da85a6bacb86494f2e44a8eb8089eb9f5018557aee455aac64803780464736f6c63430008040033",
    "sourceMap": "176:4997:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3956:27:11;;;;;;;;;8277:25:94;;;8265:2;8250:18;3956:27:11;;;;;;;;2903:213:51;;;;;;:::i;:::-;;:::i;:::-;;;7841:14:94;;7834:22;7816:41;;7804:2;7789:18;2903:213:51;7771:92:94;801:248:9;;;;;;:::i;:::-;;:::i;2627:23:11:-;;;;;-1:-1:-1;;;;;2627:23:11;;;;;;-1:-1:-1;;;;;6787:32:94;;;6769:51;;6757:2;6742:18;2627:23:11;6724:102:94;2915:41:11;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2755:22;;;;;;1419:39;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;11460:25:94;;;11516:2;11501:18;;11494:34;;;;11433:18;1419:39:11;11415:119:94;680:54:11;;-1:-1:-1;;;;;;;;;;;680:54:11;;3014:25;;;;;;:::i;:::-;;:::i;3098:39::-;;;;;;:::i;:::-;;;;;;;;;;;;;;896:25;;;;;;4721:129:51;;;;;;:::i;:::-;4795:7;4821:12;;;:6;:12;;;;;:22;;;;4721:129;5359:49:11;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;3876:22;;;;;;;;;2167:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8061:14:94;;8054:22;8036:41;;8108:2;8093:18;;8086:34;;;;8009:18;2167:47:11;7991:135:94;5146:145:51;;;;;;:::i;:::-;;:::i;:::-;;6255:214;;;;;;:::i;:::-;;:::i;810:21:11:-;;;:::i;:::-;;;;;;;:::i;1595:51::-;;;;;;:::i;:::-;;:::i;:::-;;;;11741:25:94;;;11797:2;11782:18;;11775:34;;;;11825:18;;;11818:34;11729:2;11714:18;1595:51:11;11696:162:94;3999:37:11;;4035:1;3999:37;;;;;12035:4:94;12023:17;;;12005:36;;11993:2;11978:18;3999:37:11;11960:87:94;4650:25:11;;;;;;2783:24;;;;;;3227:55;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;4070:39;;4108:1;4070:39;;565:109;;631:42;565:109;;5664:18;;;;;-1:-1:-1;;;5664:18:11;;;;;;5622:35;;;;;-1:-1:-1;;;;;5622:35:11;;;4143:41;;4182:2;4143:41;;987:22;;;;;;1049:25;;;;;-1:-1:-1;;;;;1049:25:11;;;2656:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;;956:25;;;;;;5266:42;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3949:835:9;;;;;;:::i;:::-;;:::i;4980:190::-;;;;;;:::i;:::-;;:::i;5482:48:11:-;;5526:4;5482:48;;4368:41;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3203:145:51;;;;;;:::i;:::-;;:::i;7333:105:11:-;;;:::i;2324:49:51:-;;2369:4;2324:49;;5414:61:11;;;;;;:::i;:::-;;;;;;;;;;;;;;3413:48;;;;;;:::i;:::-;;;;;;;;;;;;;;4467:42;;;;;;:::i;:::-;;;;;;;;;;;;;;782:22;;;:::i;866:24::-;;;;;;3706:23;;;;;;3795;;;;;;5537:31;;;;;-1:-1:-1;;;;;5537:31:11;;;3144:24;;;;;;2025:1199:9;;;;;;:::i;:::-;;:::i;5134:27:11:-;;;;;;:::i;:::-;;:::i;4515:25::-;;;;;;:::i;:::-;;:::i;2066:43::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2378:24;;;;;;5314:39;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2409:23;;;;;;5571:147:51;;;;;;:::i;:::-;;:::i;3288:67:11:-;;;;;;:::i;:::-;;:::i;5168:25::-;;;;;;:::i;:::-;;:::i;5224:36::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5224:36:11;;;;;;;;;;;-1:-1:-1;;;;;7546:32:94;;;7528:51;;7610:2;7595:18;;7588:34;;;;7638:18;;;7631:34;7516:2;7501:18;5224:36:11;7483:188:94;3519:45:11;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3519:45:11;;;5574:41;;;;;-1:-1:-1;;;;;5574:41:11;;;5094:34;;;;;;2304:42;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;3571:25;;;;;;3735:26;;;;;;4790:184:9;;;:::i;2545:24:11:-;;;;;;:::i;:::-;;:::i;2903:213:51:-;2988:4;-1:-1:-1;;;;;;3011:58:51;;-1:-1:-1;;;3011:58:51;;:98;;-1:-1:-1;;;;;;;;;;1168:51:76;;;3073:36:51;3004:105;2903:213;-1:-1:-1;;2903:213:51:o;801:248:9:-;889:8;:15;862:11;;885:34;;-1:-1:-1;918:1:9;;801:248;-1:-1:-1;801:248:9:o;885:34::-;934:6;929:114;946:8;:15;942:19;;929:114;;;1008:8;1017:1;1008:11;;;;;;-1:-1:-1;;;1008:11:9;;;;;;;;;;;;;;;;;;;992:40;;-1:-1:-1;;;992:40:9;;-1:-1:-1;;;;;6787:32:94;;;992:40:9;;;6769:51:94;1008:11:9;;;;992:33;;6742:18:94;;992:40:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;982:50;;;;:::i;:::-;;-1:-1:-1;963:3:9;;;;:::i;:::-;;;;929:114;;;;801:248;;;:::o;3014:25:11:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3014:25:11;;-1:-1:-1;3014:25:11;:::o;5146:145:51:-;4795:7;4821:12;;;:6;:12;;;;;:22;;;2802:16;2813:4;2802:10;:16::i;:::-;5259:25:::1;5270:4;5276:7;5259:10;:25::i;:::-;5146:145:::0;;;:::o;6255:214::-;-1:-1:-1;;;;;6350:23:51;;929:10:73;6350:23:51;6342:83;;;;-1:-1:-1;;;6342:83:51;;10890:2:94;6342:83:51;;;10872:21:94;10929:2;10909:18;;;10902:30;10968:34;10948:18;;;10941:62;-1:-1:-1;;;11019:18:94;;;11012:45;11074:19;;6342:83:51;;;;;;;;;6436:26;6448:4;6454:7;6436:11;:26::i;:::-;6255:214;;:::o;810:21:11:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1595:51::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1595:51:11;;-1:-1:-1;1595:51:11;:::o;3949:835:9:-;-1:-1:-1;;;;;;;;;;;2802:16:51;2813:4;2802:10;:16::i;:::-;-1:-1:-1;;;;;4027:19:9;::::1;4023:32;;6255:214:51::0;;:::o;4023:32:9:-:1;4064:12;4079;:10;:12::i;:::-;4064:27;;4142:16;:23;4159:5;-1:-1:-1::0;;;;;4142:23:9::1;-1:-1:-1::0;;;;;4142:23:9::1;;;;;;;;;;;;;4101:5;4107:8;4101:15;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;;;-1:-1:-1;;;;;4101:30:9;;::::1;;::::0;;;:23:::1;::::0;;::::1;:30:::0;;;;;:38:::1;;:64:::0;;;;4283:6:::1;:13:::0;;;;;:19;;;;;;;;4225:5:::1;::::0;-1:-1:-1;;;4225:55:9;;4283:19;;4225:5:::1;::::0;:29:::1;::::0;:55:::1;::::0;4125:5;;4262:8:::1;::::0;4272:7:::1;::::0;4225:55:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:77;;;;:::i;:::-;4175:5;4181:8;4175:15;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;;;-1:-1:-1;;;;;4175:30:9;::::1;;::::0;;;:23:::1;::::0;;::::1;:30:::0;;;;;:47;;;;;;;:127;;;;4365:5:::1;::::0;:15:::1;::::0;4371:8:::1;::::0;4365:15:::1;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;4365:30:9;::::1;;::::0;;;:23:::1;::::0;;::::1;:30:::0;;;;;:47;;;;;;;;;:52;:67:::1;;4427:5;4365:67;;;4420:4;4365:67;4312:5;4318:8;4312:15;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;4312:30:9;::::1;;::::0;;;:23:::1;::::0;;::::1;:30:::0;;;;;:50;;;:44:::1;::::0;;::::1;:50:::0;;;;;:120;;-1:-1:-1;;4312:120:9::1;::::0;::::1;;::::0;;;::::1;::::0;;;4554:13;;:6:::1;:13:::0;;;;;;4568:8:::1;::::0;4312:50;;4568:8:::1;:::i;:::-;4554:23:::0;;::::1;::::0;::::1;::::0;;;;;;;;-1:-1:-1;4554:23:9;;4496:5:::1;::::0;:55;;-1:-1:-1;;;4496:55:9;;4554:23;;-1:-1:-1;;;;;4496:5:9::1;::::0;:29:::1;::::0;:55:::1;::::0;4526:5;;4533:8:::1;::::0;4543:7:::1;::::0;4496:55:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:81;;;;:::i;:::-;4442:5;4448:8;4442:15;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;4442:30:9;::::1;;::::0;;;:23:::1;::::0;;::::1;:30:::0;;;;;;4484:8:::1;:4:::0;4491:1:::1;4484:8;:::i;:::-;4442:51;;;;;;;;;;;:135;;;;4644:5;4650:8;4644:15;;;;;;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;4644:30:9;::::1;;::::0;;;:23:::1;::::0;;::::1;:30:::0;;;;;;4686:8:::1;:4:::0;4693:1:::1;4686:8;:::i;:::-;4644:51;;;;;;;;;;;;4699:1;4644:56;:71;;4710:5;4644:71;;;4703:4;4644:71;4587:5;4593:8;4587:15;;;;;;:::i;:::-;;;;;;;;;;;;;:23;;:30;4611:5;-1:-1:-1::0;;;;;4587:30:9::1;-1:-1:-1::0;;;;;4587:30:9::1;;;;;;;;;;;;:44;;:54;4632:4;4639:1;4632:8;;;;:::i;:::-;4587:54;;;;;;;;;;;;:128;;;;;;;;;;;;;;;;;;4773:4;4725:5;4731:8;4725:15;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;;;;-1:-1:-1;;;;;4725:30:9;::::1;;::::0;;;:23:::1;::::0;;::::1;:30:::0;;;;;:45:::1;:52:::0;-1:-1:-1;3949:835:9;;:::o;4980:190::-;-1:-1:-1;;;;;;;;;;;2802:16:51;2813:4;2802:10;:16::i;:::-;5070:12:9;;5061:6:::1;5092:72;5108:1;5104;:5;5092:72;;;5129:24;5144:5;5150:1;5144:8;;;;;;-1:-1:-1::0;;;5144:8:9::1;;;;;;;;;;;;;;;5129:14;:24::i;:::-;5111:3:::0;::::1;::::0;::::1;:::i;:::-;;;;5092:72;;;;2828:1:51;4980:190:9::0;;:::o;3203:145:51:-;3289:4;3312:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3312:29:51;;;;;;;;;;;;;;;3203:145::o;7333:105:11:-;7376:4;631:42;-1:-1:-1;;;;;7399:30:11;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7392:39;;7333:105;:::o;782:22::-;;;;;;;:::i;2025:1199:9:-;-1:-1:-1;;;;;;;;;;;2802:16:51;2813:4;2802:10;:16::i;:::-;-1:-1:-1;;;;;2102:19:9;::::1;2094:51;;;::::0;-1:-1:-1;;;2094:51:9;;10195:2:94;2094:51:9::1;::::0;::::1;10177:21:94::0;10234:2;10214:18;;;10207:30;-1:-1:-1;;;10253:18:94;;;10246:49;10312:18;;2094:51:9::1;10167:169:94::0;2094:51:9::1;2172:8;2183:12;:10;:12::i;:::-;2252:13;::::0;-1:-1:-1;;;;;2213:23:9;::::1;;::::0;;;:16:::1;:23;::::0;;;;;;;:28;;;;;;;;:35;2172:23;;-1:-1:-1;;2213:52:9::1;2205:83;;;::::0;-1:-1:-1;;;2205:83:9;;10543:2:94;2205:83:9::1;::::0;::::1;10525:21:94::0;10582:2;10562:18;;;10555:30;-1:-1:-1;;;10601:18:94;;;10594:48;10659:18;;2205:83:9::1;10515:168:94::0;2205:83:9::1;-1:-1:-1::0;;;;;2355:23:9;::::1;;::::0;;;:16:::1;:23;::::0;;;;;;;:28;;;;;;;;:35;2351:771:::1;;-1:-1:-1::0;;;;;2431:23:9;::::1;2411:17;2431:23:::0;;;:16:::1;:23;::::0;;;;2411:17;2455:7:::1;2461:1;2455:3:::0;:7:::1;:::i;:::-;2431:32;;;;;;;;;;;2411:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2495:1;2482:3;:10;:14;2478:634;;;2516:15;2534;2545:3;2534:10;:15::i;:::-;2516:33;;2568:21;2592:5;:24;;;;-1:-1:-1::0;;;5763:30:94;;5818:2;5809:12;;5753:74;2592:24:9::1;;;;;;;;;;;;;:32;;:39;2625:5;-1:-1:-1::0;;;;;2592:39:9::1;-1:-1:-1::0;;;;;2592:39:9::1;;;;;;;;;;;;2568:63;;2679:7;2653:6;:17;;:22;2671:3;2653:22;;;;;;;;;;;;:33;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;2709:17:9::1;:22:::0;;;::::1;::::0;;;;;;;2705:186:::1;;2760:25;::::0;;;2788:4:::1;2760:20:::0;;::::1;:25;::::0;;;;;:32;;-1:-1:-1;;2760:32:9::1;::::0;;::::1;::::0;;2705:186:::1;;;2867:5;2839:25:::0;;;:20:::1;::::0;::::1;:25;::::0;;;;:33;;-1:-1:-1;;2839:33:9::1;::::0;;2705:186:::1;2932:24;::::0;;-1:-1:-1;;;5763:30:94;;2932:5:9::1;5818:2:94::0;5809:12;;2932:24:9;;;;;;;;;;;-1:-1:-1;;;;;2932:39:9;::::1;-1:-1:-1::0;2932:39:9;;;:32:::1;::::0;;::::1;:24;:39:::0;;;;;:54:::1;::::0;2928:170:::1;;3072:7;:3:::0;3078:1:::1;3072:7;:::i;:::-;3015:24;::::0;-1:-1:-1;;;5763:30:94;;3015:5:9::1;::::0;5818:2:94;5809:12;3015:24:9;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;;;;;3015:39:9;::::1;;::::0;;;:32:::1;::::0;;::::1;:39:::0;;;;;:54:::1;:64:::0;2928:170:::1;2478:634;;;2351:771;;3132:10;3145:22;3161:5;3145:15;:22::i;:::-;-1:-1:-1::0;;;;;3177:23:9;;::::1;;::::0;;;:16:::1;:23;::::0;;;;;;;:28;;;;;;;;;:40;;::::1;::::0;::::1;::::0;;;;;;;;;;::::1;::::0;;;;-1:-1:-1;;2025:1199:9:o;5134:27:11:-;;;;;;;;;;;;;;;-1:-1:-1;5134:27:11;:::o;4515:25::-;;;;;;;;;;;;5571:147:51;4795:7;4821:12;;;:6;:12;;;;;:22;;;2802:16;2813:4;2802:10;:16::i;:::-;5685:26:::1;5697:4;5703:7;5685:11;:26::i;3288:67:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5168:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4790:184:9:-;-1:-1:-1;;;;;;;;;;;2802:16:51;2813:4;2802:10;:16::i;:::-;4870:7:9::1;:14:::0;4861:6:::1;4894:74;4910:1;4906;:5;4894:74;;;4931:26;4946:7;4954:1;4946:10;;;;;;-1:-1:-1::0;;;4946:10:9::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;4946:10:9::1;4931:14;:26::i;:::-;4913:3:::0;::::1;::::0;::::1;:::i;:::-;;;;4894:74;;2545:24:11::0;;;;;;;;;;;;3642:103:51;3708:30;3719:4;929:10:73;3708::51;:30::i;:::-;3642:103;:::o;7804:233::-;7887:22;7895:4;7901:7;7887;:22::i;:::-;7882:149;;7925:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7925:29:51;;;;;;;;;:36;;-1:-1:-1;;7925:36:51;7957:4;7925:36;;;8007:12;929:10:73;;850:96;8007:12:51;-1:-1:-1;;;;;7980:40:51;7998:7;-1:-1:-1;;;;;7980:40:51;7992:4;7980:40;;;;;;;;;;7804:233;;:::o;8208:234::-;8291:22;8299:4;8305:7;8291;:22::i;:::-;8287:149;;;8361:5;8329:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8329:29:51;;;;;;;;;;:37;;-1:-1:-1;;8329:37:51;;;8385:40;929:10:73;;8329:12:51;;8385:40;;8361:5;8385:40;8208:234;;:::o;1170:757:9:-;1298:10;;1232:9;;1273:4;;1232:9;;1348:480;1365:7;1371:1;1365:3;:7;:::i;:::-;1361:1;:11;1348:480;;;1398:6;1393:261;1420:1;1410:7;1416:1;1410:3;:7;:::i;:::-;:11;;;;:::i;:::-;1406:1;:15;1393:261;;;1459:3;1463:5;:1;1467;1463:5;:::i;:::-;1459:10;;;;;;-1:-1:-1;;;1459:10:9;;;;;;;;;;;;;;;1450:3;1454:1;1450:6;;;;;;-1:-1:-1;;;1450:6:9;;;;;;;;;;;;;;;:19;1446:194;;;1503:4;;-1:-1:-1;1529:6:9;1538:3;1542:5;:1;1503:4;1542:5;:::i;:::-;1538:10;;;;;;-1:-1:-1;;;1538:10:9;;;;;;;;;;;;;;;1529:19;;1583:3;1587:1;1583:6;;;;;;-1:-1:-1;;;1583:6:9;;;;;;;;;;;;;;;1570:3;1574:1;1578;1574:5;;;;:::i;:::-;1570:10;;;;;;-1:-1:-1;;;1570:10:9;;;;;;;;;;;;;;:19;;;;;1620:1;1611:3;1615:1;1611:6;;;;;;-1:-1:-1;;;1611:6:9;;;;;;;;;;;;;;:10;;;;;1446:194;;1423:3;;;;:::i;:::-;;;;1393:261;;;;1685:7;1680:138;;1716:7;1722:1;1716:3;:7;:::i;:::-;1712:56;;1767:1;1751:3;1763:1;1755:5;1767:1;1755:3;:5;:::i;:::-;:9;;;;:::i;:::-;1751:14;;;;;;-1:-1:-1;;;1751:14:9;;;;;;;;;;;;;;;1738:3;1746:1;1742:3;:5;;;;:::i;:::-;1738:10;;;;;;-1:-1:-1;;;1738:10:9;;;;;;;;;;;;;;;:27;;;;:::i;:::-;1737:31;;;;:::i;:::-;1730:38;1170:757;-1:-1:-1;;;;;;1170:757:9:o;1712:56::-;1793:3;1797:5;1801:1;1797:3;:5;:::i;:::-;1793:10;;;;;;-1:-1:-1;;;1793:10:9;;;;;;;;;;;;;;;1786:17;;;;;;1170:757;;;:::o;1680:138::-;1374:3;;;;:::i;:::-;;;;1348:480;;;-1:-1:-1;1841:7:9;1847:1;1841:3;:7;:::i;:::-;1837:56;;1892:1;1876:3;1888:1;1880:5;1892:1;1880:3;:5;:::i;:::-;:9;;;;:::i;:::-;1876:14;;;;;;-1:-1:-1;;;1876:14:9;;;;;;;;;;;;;;;1863:3;1871:1;1867:3;:5;;;;:::i;:::-;1863:10;;;;;;-1:-1:-1;;;1863:10:9;;;;;;;;;;;;;;;:27;;;;:::i;:::-;1862:31;;;;:::i;:::-;1855:38;1170:757;-1:-1:-1;;;;;1170:757:9:o;1837:56::-;1910:3;1914:5;1918:1;1914:3;:5;:::i;:::-;1910:10;;;;;;-1:-1:-1;;;1910:10:9;;;;;;;;;;;;;;;1903:17;;;;;1170:757;;;:::o;4026:514:51:-;4114:22;4122:4;4128:7;4114;:22::i;:::-;4109:425;;4297:52;4336:7;-1:-1:-1;;;;;4297:52:51;4346:2;4297:30;:52::i;:::-;4420:49;4459:4;4466:2;4420:30;:49::i;:::-;4204:287;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4204:287:51;;;;;;;;;;-1:-1:-1;;;4152:371:51;;;;;;;:::i;1663:441:75:-;1738:13;1763:19;1795:10;1799:6;1795:1;:10;:::i;:::-;:14;;1808:1;1795:14;:::i;:::-;1785:25;;;;;;-1:-1:-1;;;1785:25:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1785:25:75;;1763:47;;-1:-1:-1;;;1820:6:75;1827:1;1820:9;;;;;;-1:-1:-1;;;1820:9:75;;;;;;;;;;;;:15;-1:-1:-1;;;;;1820:15:75;;;;;;;;;-1:-1:-1;;;1845:6:75;1852:1;1845:9;;;;;;-1:-1:-1;;;1845:9:75;;;;;;;;;;;;:15;-1:-1:-1;;;;;1845:15:75;;;;;;;;-1:-1:-1;1875:9:75;1887:10;1891:6;1887:1;:10;:::i;:::-;:14;;1900:1;1887:14;:::i;:::-;1875:26;;1870:132;1907:1;1903;:5;1870:132;;;-1:-1:-1;;;1954:5:75;1962:3;1954:11;1941:25;;;;;-1:-1:-1;;;1941:25:75;;;;;;;;;;;;1929:6;1936:1;1929:9;;;;;;-1:-1:-1;;;1929:9:75;;;;;;;;;;;;:37;-1:-1:-1;;;;;1929:37:75;;;;;;;;-1:-1:-1;1990:1:75;1980:11;;;;;1910:3;;;:::i;:::-;;;1870:132;;;-1:-1:-1;2019:10:75;;2011:55;;;;-1:-1:-1;;;2011:55:75;;9834:2:94;2011:55:75;;;9816:21:94;;;9853:18;;;9846:30;9912:34;9892:18;;;9885:62;9964:18;;2011:55:75;9806:182:94;2011:55:75;2090:6;1663:441;-1:-1:-1;;;1663:441:75:o;14:173:94:-;82:20;;-1:-1:-1;;;;;131:31:94;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:196::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;393:264::-;461:6;469;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;647:2;632:18;;;;619:32;;-1:-1:-1;;;480:177:94:o;662:332::-;739:6;747;755;808:2;796:9;787:7;783:23;779:32;776:2;;;829:6;821;814:22;776:2;857:29;876:9;857:29;:::i;:::-;847:39;933:2;918:18;;905:32;;-1:-1:-1;984:2:94;969:18;;;956:32;;766:228;-1:-1:-1;;;766:228:94:o;999:1008::-;1083:6;1114:2;1157;1145:9;1136:7;1132:23;1128:32;1125:2;;;1178:6;1170;1163:22;1125:2;1223:9;1210:23;1252:18;1293:2;1285:6;1282:14;1279:2;;;1314:6;1306;1299:22;1279:2;1357:6;1346:9;1342:22;1332:32;;1402:7;1395:4;1391:2;1387:13;1383:27;1373:2;;1429:6;1421;1414:22;1373:2;1470;1457:16;1492:2;1488;1485:10;1482:2;;;1498:18;;:::i;:::-;1544:2;1541:1;1537:10;1527:20;;1567:28;1591:2;1587;1583:11;1567:28;:::i;:::-;1629:15;;;1660:12;;;;1692:11;;;1722;;;1718:20;;1715:33;-1:-1:-1;1712:2:94;;;1766:6;1758;1751:22;1712:2;1793:6;1784:15;;1808:169;1822:2;1819:1;1816:9;1808:169;;;1879:23;1898:3;1879:23;:::i;:::-;1867:36;;1840:1;1833:9;;;;;1923:12;;;;1955;;1808:169;;;-1:-1:-1;1996:5:94;1094:913;-1:-1:-1;;;;;;;;1094:913:94:o;2012:190::-;2071:6;2124:2;2112:9;2103:7;2099:23;2095:32;2092:2;;;2145:6;2137;2130:22;2092:2;-1:-1:-1;2173:23:94;;2082:120;-1:-1:-1;2082:120:94:o;2207:264::-;2275:6;2283;2336:2;2324:9;2315:7;2311:23;2307:32;2304:2;;;2357:6;2349;2342:22;2304:2;2398:9;2385:23;2375:33;;2427:38;2461:2;2450:9;2446:18;2427:38;:::i;:::-;2417:48;;2294:177;;;;;:::o;2476:306::-;2534:6;2587:2;2575:9;2566:7;2562:23;2558:32;2555:2;;;2608:6;2600;2593:22;2555:2;2639:23;;-1:-1:-1;;;;;;2691:32:94;;2681:43;;2671:2;;2743:6;2735;2728:22;2787:809;2856:6;2887:2;2930;2918:9;2909:7;2905:23;2901:32;2898:2;;;2951:6;2943;2936:22;2898:2;2996:9;2983:23;3025:18;3066:2;3058:6;3055:14;3052:2;;;3087:6;3079;3072:22;3052:2;3130:6;3119:9;3115:22;3105:32;;3175:7;3168:4;3164:2;3160:13;3156:27;3146:2;;3202:6;3194;3187:22;3146:2;3243;3230:16;3265:2;3261;3258:10;3255:2;;;3271:18;;:::i;:::-;3313:53;3356:2;3337:13;;-1:-1:-1;;3333:27:94;3329:36;;3313:53;:::i;:::-;3300:66;;3389:2;3382:5;3375:17;3429:7;3424:2;3419;3415;3411:11;3407:20;3404:33;3401:2;;;3455:6;3447;3440:22;3401:2;3515;3510;3506;3502:11;3497:2;3490:5;3486:14;3473:45;3538:14;;3534:23;;;3527:39;;;;3542:5;2867:729;-1:-1:-1;;;2867:729:94:o;3796:194::-;3866:6;3919:2;3907:9;3898:7;3894:23;3890:32;3887:2;;;3940:6;3932;3925:22;3887:2;-1:-1:-1;3968:16:94;;3877:113;-1:-1:-1;3877:113:94:o;3995:735::-;4045:3;4086:5;4080:12;4115:36;4141:9;4115:36;:::i;:::-;4160:19;;;4198:4;4221:1;4238:18;;;4265:109;;;;4388:1;4383:341;;;;4231:493;;4265:109;-1:-1:-1;;4307:24:94;;4293:12;;;4286:46;4361:2;4352:12;;;-1:-1:-1;4265:109:94;;4383:341;4414:5;4411:1;4404:16;4461:2;4458:1;4448:16;4486:1;4500:174;4514:6;4511:1;4508:13;4500:174;;;4601:14;;4583:11;;;4579:20;;4572:44;4644:16;;;;4529:10;;4500:174;;;4698:11;;4694:20;;;-1:-1:-1;;4231:493:94;;;;;;4053:677;;;;:::o;4735:821::-;4863:3;4892;4927:6;4921:13;4957:36;4983:9;4957:36;:::i;:::-;5012:1;5029:18;;;5056:104;;;;5174:1;5169:362;;;;5022:509;;5056:104;-1:-1:-1;;5089:24:94;;5077:37;;5134:16;;;;-1:-1:-1;5056:104:94;;5169:362;5202:6;5197:3;5190:19;5232:4;5279:2;5274:3;5264:18;5304:3;5320:165;5334:6;5331:1;5328:13;5320:165;;;5412:14;;5399:11;;;5392:35;5455:16;;;;5349:10;;5320:165;;;5324:3;;;5514:6;5509:3;5505:16;5498:23;;5022:509;-1:-1:-1;5547:3:94;;4871:685;-1:-1:-1;;;;;;4871:685:94:o;5832:786::-;6243:25;6238:3;6231:38;6213:3;6298:6;6292:13;6314:62;6369:6;6364:2;6359:3;6355:12;6348:4;6340:6;6336:17;6314:62;:::i;:::-;-1:-1:-1;;;6435:2:94;6395:16;;;6427:11;;;6420:40;6485:13;;6507:63;6485:13;6556:2;6548:11;;6541:4;6529:17;;6507:63;:::i;:::-;6590:17;6609:2;6586:26;;6221:397;-1:-1:-1;;;;6221:397:94:o;6831:490::-;-1:-1:-1;;;;;7050:32:94;;7032:51;;7119:2;7114;7099:18;;7092:30;;;-1:-1:-1;;7145:53:94;;7179:18;;7171:6;7145:53;:::i;:::-;7246:9;7238:6;7234:22;7229:2;7218:9;7214:18;7207:50;7274:41;7308:6;7300;7274:41;:::i;9244:383::-;9393:2;9382:9;9375:21;9356:4;9425:6;9419:13;9468:6;9463:2;9452:9;9448:18;9441:34;9484:66;9543:6;9538:2;9527:9;9523:18;9518:2;9510:6;9506:15;9484:66;:::i;:::-;9611:2;9590:15;-1:-1:-1;;9586:29:94;9571:45;;;;9618:2;9567:54;;9365:262;-1:-1:-1;;9365:262:94:o;12052:275::-;12123:2;12117:9;12188:2;12169:13;;-1:-1:-1;;12165:27:94;12153:40;;12223:18;12208:34;;12244:22;;;12205:62;12202:2;;;12270:18;;:::i;:::-;12306:2;12299:22;12097:230;;-1:-1:-1;12097:230:94:o;12332:128::-;12372:3;12403:1;12399:6;12396:1;12393:13;12390:2;;;12409:18;;:::i;:::-;-1:-1:-1;12445:9:94;;12380:80::o;12465:120::-;12505:1;12531;12521:2;;12536:18;;:::i;:::-;-1:-1:-1;12570:9:94;;12511:74::o;12590:168::-;12630:7;12696:1;12692;12688:6;12684:14;12681:1;12678:21;12673:1;12666:9;12659:17;12655:45;12652:2;;;12703:18;;:::i;:::-;-1:-1:-1;12743:9:94;;12642:116::o;12763:125::-;12803:4;12831:1;12828;12825:8;12822:2;;;12836:18;;:::i;:::-;-1:-1:-1;12873:9:94;;12812:76::o;12893:258::-;12965:1;12975:113;12989:6;12986:1;12983:13;12975:113;;;13065:11;;;13059:18;13046:11;;;13039:39;13011:2;13004:10;12975:113;;;13106:6;13103:1;13100:13;13097:2;;;-1:-1:-1;;13141:1:94;13123:16;;13116:27;12946:205::o;13156:136::-;13195:3;13223:5;13213:2;;13232:18;;:::i;:::-;-1:-1:-1;;;13268:18:94;;13203:89::o;13297:380::-;13376:1;13372:12;;;;13419;;;13440:2;;13494:4;13486:6;13482:17;13472:27;;13440:2;13547;13539:6;13536:14;13516:18;13513:38;13510:2;;;13593:10;13588:3;13584:20;13581:1;13574:31;13628:4;13625:1;13618:15;13656:4;13653:1;13646:15;13682:135;13721:3;-1:-1:-1;;13742:17:94;;13739:2;;;13762:18;;:::i;:::-;-1:-1:-1;13809:1:94;13798:13;;13729:88::o;13822:112::-;13854:1;13880;13870:2;;13885:18;;:::i;:::-;-1:-1:-1;13919:9:94;;13860:74::o;13939:127::-;14000:10;13995:3;13991:20;13988:1;13981:31;14031:4;14028:1;14021:15;14055:4;14052:1;14045:15;14071:127;14132:10;14127:3;14123:20;14120:1;14113:31;14163:4;14160:1;14153:15;14187:4;14184:1;14177:15;14203:127;14264:10;14259:3;14255:20;14252:1;14245:31;14295:4;14292:1;14285:15;14319:4;14316:1;14309:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DAPPS_STAKING()": "59b40f41",
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "DNTname()": "40bf8a8d",
    "MANAGEMENT_FEE()": "5f1554e3",
    "MANAGER()": "1b2df850",
    "REVENUE_FEE()": "4421bd1e",
    "REWARDS_PRECISION()": "86b3cd26",
    "UNSTAKING_FEE()": "59601ebc",
    "accumulatedRewardsPerShare(uint256)": "a2ce0f4a",
    "adaptersDistr()": "e2e836f8",
    "buffer(address,uint256)": "54b057f9",
    "claimingTxLimit()": "00179fbd",
    "currentEra()": "973628f6",
    "dapps(string)": "dcf425df",
    "dappsList(uint256)": "da3bc958",
    "deactivationEra(string)": "2a14d8f4",
    "distr()": "6bbea766",
    "dntToken()": "05e2a217",
    "eraBuffer(uint256)": "c21a7276",
    "eraRevenue(uint256)": "eb51a44c",
    "eraRewards(uint256)": "1dc00785",
    "eraShot(address)": "bf8137ab",
    "eraShotsLimit()": "f128f631",
    "eraStakerReward(uint256)": "2ea31bf6",
    "eraUnstaked(uint256)": "c4e137e7",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getUserLpTokens(address)": "0413f9a5",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "haveUtility(string)": "6f68f2e9",
    "isActive(string)": "c8902a21",
    "isLpToken(address)": "0f24ca7d",
    "isPartner(address)": "8c0f9aac",
    "isStaker(address)": "6f1e8533",
    "isUnstakes()": "2e4a4a17",
    "lastClaimed()": "adc1b956",
    "lastEraTotalBalance()": "e77ee345",
    "lastStaked()": "12a12a06",
    "lastUnstaked()": "5495ec81",
    "lastUpdated()": "d0b06f5d",
    "liquidStakingManager()": "5ca5914e",
    "lpHandlers(address)": "e09c1954",
    "lpTokens(uint256)": "1bb5e2dc",
    "migrateBatch(address[])": "80629390",
    "migrateInternalStorage()": "fb675105",
    "migrateStorage(address)": "7111dfa3",
    "minStakeAmount()": "f1887684",
    "nftDistr()": "bd1bbd3b",
    "partnerIdx(address)": "a5ae02ac",
    "partners(uint256)": "c3b49d04",
    "partnersLimit()": "4d617451",
    "paused()": "5c975abb",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "rewardPool()": "66666aa9",
    "stakers(uint256)": "fd5e6dd1",
    "stakes(address)": "16934fc4",
    "sum2unstake()": "af66c36b",
    "supportsInterface(bytes4)": "01ffc9a7",
    "totalBalance()": "ad7a672f",
    "totalRevenue()": "bf2d9e0b",
    "totalUserRewards(address)": "a44bca8e",
    "unbondedPool()": "c71367b5",
    "unstakingPool()": "6f5e4488",
    "usersShotsPerEra(address,uint256,uint256)": "d6356ff4",
    "utilName()": "ab486929",
    "withdrawBlock()": "24025b19",
    "withdrawals(address,uint256)": "422b1077"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"era\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"ClaimDappError\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eraStakerReward\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_era\",\"type\":\"uint256\"}],\"name\":\"ClaimDappSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"utility\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"era\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"ClaimStakerError\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"era\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastClaimed\",\"type\":\"uint256\"}],\"name\":\"ClaimStakerSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"utility\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimedFromUtility\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"FillRewardPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"FillUnbonded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"FillUnstaking\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"utility\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"HarvestRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SetMinStakeAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"utility\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"StakedInUtility\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"era\",\"type\":\"uint256\"}],\"name\":\"Synchronization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"utility\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sum2unstake\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"era\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"UnbondAndUnstakeError\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"era\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sum2unstake\",\"type\":\"uint256\"}],\"name\":\"UnbondAndUnstakeSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"immediate\",\"type\":\"bool\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"utility\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"immediate\",\"type\":\"bool\"}],\"name\":\"UnstakedFromUtility\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawRevenue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_era\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"WithdrawUnbondedError\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_era\",\"type\":\"uint256\"}],\"name\":\"WithdrawUnbondedSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DAPPS_STAKING\",\"outputs\":[{\"internalType\":\"contract DappsStaking\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DNTname\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MANAGEMENT_FEE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REVENUE_FEE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REWARDS_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNSTAKING_FEE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"accumulatedRewardsPerShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adaptersDistr\",\"outputs\":[{\"internalType\":\"contract IAdaptersDistributor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"buffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimingTxLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentEra\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"dapps\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"dappAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakedBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sum2unstake\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dappsList\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"deactivationEra\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distr\",\"outputs\":[{\"internalType\":\"contract NDistributor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dntToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"eraBuffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"eraRevenue\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"done\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"eraRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"eraShot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eraShotsLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"eraStakerReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"done\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"eraUnstaked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"done\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserLpTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"haveUtility\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"isActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isLpToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isPartner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isStaker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isUnstakes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastEraTotalBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUnstaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidStakingManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lpHandlers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lpTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_user\",\"type\":\"address[]\"}],\"name\":\"migrateBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrateInternalStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"migrateStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftDistr\",\"outputs\":[{\"internalType\":\"contract INFTDistributor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"partnerIdx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"partners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"partnersLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eraStarted\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sum2unstake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRevenue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalUserRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unbondedPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakingPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"usersShotsPerEra\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"utilName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eraReq\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lag\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"eraShot(address)\":{\"params\":{\"_user\":\"user's address\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getUserLpTokens(address)\":{\"params\":{\"_user\":\"shows share of user in nTokens\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"migrateStorage(address)\":{\"details\":\"the beginning of the migration must be carried out at the beginning of a new erabefore starting the migration, you must first call eraShot       for each user to calculate his rewards for the past erabefore starting the migration, you need to make a claim of       rewards for all past eras and call the sync function for all non-updated eras\",\"params\":{\"_user\":\"=> user address\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"currentEra()\":{\"notice\":\"get current era\"},\"distr()\":{\"notice\":\"distributor data\"},\"eraShot(address)\":{\"notice\":\"saving information about users balances\"},\"getUserLpTokens(address)\":{\"notice\":\"iterate by each partner address and get user rewards from handlers\"},\"isLpToken(address)\":{\"notice\":\"handlers for work with LP tokens\"},\"migrateStorage(address)\":{\"notice\":\"function for migrating users storage\"},\"totalBalance()\":{\"notice\":\"core values\"},\"unstakingPool()\":{\"notice\":\"pool values\"},\"utilName()\":{\"notice\":\"settings for distributor\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LiquidStaking/LiquidStakingMigration.sol\":\"LiquidStakingMigration\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/LiquidStaking/LiquidStakingMigration.sol\":{\"keccak256\":\"0x6b806f0050882373934b279dbed09da71d7c4d3afe420bd0800fec592b24e78e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31f44ba2ea7d493f2eeb372ec3eb8af855b775c3f91ba23c05d511ea8cc194c9\",\"dweb:/ipfs/QmP5PCFAZ1kcvhcizy3CxbUjtpjeET8x1q9ZuTwJWhTF9M\"]},\"contracts/LiquidStaking/LiquidStakingStorage.sol\":{\"keccak256\":\"0xc6e302aedf2da5421d0f62d95fa3a5413569e8b5083ed2a94fbb61f092223d08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26ac411ea5eb944170fb62cf33885c5a1b5cb4474d328fbb1d372863d5764aa0\",\"dweb:/ipfs/QmNq2pEpM17Eco1YxYoynGdUkFyJw6RQGvXXBweRQ6QAaA\"]},\"contracts/NDistributor.sol\":{\"keccak256\":\"0xf56a0a717f7eac1f2fc254260a3adc7b76b38f433ef75d5d361d792381d91506\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c20d5dc0c369c8dcca00639676343e6bb364831f9617fae479be09a72eb051d\",\"dweb:/ipfs/QmaFCPgrSTRe4fAZ2vfSdcTQeVESJXQLErCZuxPaABbAmM\"]},\"contracts/interfaces/DappsStaking.sol\":{\"keccak256\":\"0xf8298be9e94a553de178c483d0d8efd2d5d0aafc8e8106b65aa30068d89e05b1\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://631e3d2c7272f26c37e85c67c9d43726f3897fa111c01ce04f57785d2fc2ee24\",\"dweb:/ipfs/QmRyVLS9dqR28Gb1qWnUHGqdvhCjfSQNFnWUdSKkMScRkr\"]},\"contracts/interfaces/IAdaptersDistributor.sol\":{\"keccak256\":\"0x4c0c583fe1646101e01ae92486926eb3710c27aa7021c68ac35f49133722c184\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05830918637ed312bf953d729fbb17b38a872af7b5c4267a017c599b88692431\",\"dweb:/ipfs/QmS25WFHSfQY9dM5ooo87h7Mx14hKA5cGunEzELA8bTEJf\"]},\"contracts/interfaces/IDNT.sol\":{\"keccak256\":\"0xd9a14eabdb4bebc8e81df58d2407301e60b426c32c59f52f21a32aba5483d766\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://064ddfac6b3b533f89b7643d76befb45f6396b711c6546eebaca370fa2f034f3\",\"dweb:/ipfs/QmTFqVxCRVZpHn1z8bGU3Sv6yt2ddjZviJyrSBh358H4Rk\"]},\"contracts/interfaces/ILiquidStaking.sol\":{\"keccak256\":\"0x31e51b639dcc67203c1ba732d6a08040219435f209468c31b328f4bd1baedb7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e50c2ef8e55e14b5bfcde948c2a705f996bff5fa8d9a6b80584643883b16d097\",\"dweb:/ipfs/Qmbaw5jS7kPF242jhaRy5Nn1D6dk5ai6iPs2ePBH1B7DpR\"]},\"contracts/interfaces/INFTDistributor.sol\":{\"keccak256\":\"0xd05123a0a5733673c684caa179fc030351b30e68f3c0da31816ddaa8380b3789\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bd4f728f31bd3d69e57f3c41f50242509d980c93b2566f845689bcba50c3990\",\"dweb:/ipfs/QmYwj78S16Fr6zT71kr2n3cCzFnSTdFJ5rsRyfVSQUnPFh\"]},\"contracts/interfaces/IPartnerHandler.sol\":{\"keccak256\":\"0xe21ebea595e6606b3b7d07abfdf3d01da878aa7ef8ae688dd41f4d3b502f58e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a396815e15a50abace371a1cc9243ca4aa5b04862c3830679f6558885dcc03c0\",\"dweb:/ipfs/QmZZxqXhAsNmtKDJHmTa6pJ8kkhiHqSLK1Vv7xAoLY3xMW\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x2ea9f206854c98b67dd228f8cad22bfe90ba7b1c2295315672f2e1e244623fc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4a7ef6774a9acbbb01583a9fc4656ee9b3dae4b8d5099f480625bfc0af68a02\",\"dweb:/ipfs/QmeXZcdZ7FELTc21GSgjRHXFCj4ohxrsZUaNzA5cMemAbE\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.4+commit.c7e474f2"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "era",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "reason",
              "type": "bytes",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ClaimDappError",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "eraStakerReward",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_era",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ClaimDappSuccess",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "utility",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "era",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "reason",
              "type": "bytes",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ClaimStakerError",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "era",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "lastClaimed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimStakerSuccess",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Claimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "utility",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimedFromUtility",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FillRewardPool",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FillUnbonded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FillUnstaking",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "utility",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "HarvestRewards",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetMinStakeAmount",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Staked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "utility",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StakedInUtility",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "era",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Synchronization",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "utility",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "sum2unstake",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "era",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "reason",
              "type": "bytes",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "UnbondAndUnstakeError",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "era",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "sum2unstake",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UnbondAndUnstakeSuccess",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "immediate",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unstaked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "utility",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "immediate",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UnstakedFromUtility",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawRevenue",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_era",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "reason",
              "type": "bytes",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "WithdrawUnbondedError",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_era",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "WithdrawUnbondedSuccess",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdrawn",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DAPPS_STAKING",
          "outputs": [
            {
              "internalType": "contract DappsStaking",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DNTname",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MANAGEMENT_FEE",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MANAGER",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "REVENUE_FEE",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "REWARDS_PRECISION",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "UNSTAKING_FEE",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "accumulatedRewardsPerShare",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "adaptersDistr",
          "outputs": [
            {
              "internalType": "contract IAdaptersDistributor",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "buffer",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimingTxLimit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "currentEra",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "dapps",
          "outputs": [
            {
              "internalType": "address",
              "name": "dappAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "stakedBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sum2unstake",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "dappsList",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "deactivationEra",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "distr",
          "outputs": [
            {
              "internalType": "contract NDistributor",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dntToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "eraBuffer",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "eraRevenue",
          "outputs": [
            {
              "internalType": "bool",
              "name": "done",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "eraRewards",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "eraShot"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eraShotsLimit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "eraStakerReward",
          "outputs": [
            {
              "internalType": "bool",
              "name": "done",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "eraUnstaked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "done",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserLpTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "haveUtility",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isActive",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isLpToken",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isPartner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isStaker",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isUnstakes",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lastClaimed",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lastEraTotalBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lastStaked",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lastUnstaked",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lastUpdated",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "liquidStakingManager",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lpHandlers",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lpTokens",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_user",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "migrateBatch"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "migrateInternalStorage"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "migrateStorage"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minStakeAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nftDistr",
          "outputs": [
            {
              "internalType": "contract INFTDistributor",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "partnerIdx",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "partners",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "partnersLimit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardPool",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakers",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "totalBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "eraStarted",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sum2unstake",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalRevenue",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalUserRewards",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "unbondedPool",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "unstakingPool",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "usersShotsPerEra",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "utilName",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawBlock",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawals",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "eraReq",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lag",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "eraShot(address)": {
            "params": {
              "_user": "user's address"
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "getUserLpTokens(address)": {
            "params": {
              "_user": "shows share of user in nTokens"
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "migrateStorage(address)": {
            "details": "the beginning of the migration must be carried out at the beginning of a new erabefore starting the migration, you must first call eraShot       for each user to calculate his rewards for the past erabefore starting the migration, you need to make a claim of       rewards for all past eras and call the sync function for all non-updated eras",
            "params": {
              "_user": "=> user address"
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "currentEra()": {
            "notice": "get current era"
          },
          "distr()": {
            "notice": "distributor data"
          },
          "eraShot(address)": {
            "notice": "saving information about users balances"
          },
          "getUserLpTokens(address)": {
            "notice": "iterate by each partner address and get user rewards from handlers"
          },
          "isLpToken(address)": {
            "notice": "handlers for work with LP tokens"
          },
          "migrateStorage(address)": {
            "notice": "function for migrating users storage"
          },
          "totalBalance()": {
            "notice": "core values"
          },
          "unstakingPool()": {
            "notice": "pool values"
          },
          "utilName()": {
            "notice": "settings for distributor"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/LiquidStaking/LiquidStakingMigration.sol": "LiquidStakingMigration"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/LiquidStaking/LiquidStakingMigration.sol": {
        "keccak256": "0x6b806f0050882373934b279dbed09da71d7c4d3afe420bd0800fec592b24e78e",
        "urls": [
          "bzz-raw://31f44ba2ea7d493f2eeb372ec3eb8af855b775c3f91ba23c05d511ea8cc194c9",
          "dweb:/ipfs/QmP5PCFAZ1kcvhcizy3CxbUjtpjeET8x1q9ZuTwJWhTF9M"
        ],
        "license": "MIT"
      },
      "contracts/LiquidStaking/LiquidStakingStorage.sol": {
        "keccak256": "0xc6e302aedf2da5421d0f62d95fa3a5413569e8b5083ed2a94fbb61f092223d08",
        "urls": [
          "bzz-raw://26ac411ea5eb944170fb62cf33885c5a1b5cb4474d328fbb1d372863d5764aa0",
          "dweb:/ipfs/QmNq2pEpM17Eco1YxYoynGdUkFyJw6RQGvXXBweRQ6QAaA"
        ],
        "license": "MIT"
      },
      "contracts/NDistributor.sol": {
        "keccak256": "0xf56a0a717f7eac1f2fc254260a3adc7b76b38f433ef75d5d361d792381d91506",
        "urls": [
          "bzz-raw://0c20d5dc0c369c8dcca00639676343e6bb364831f9617fae479be09a72eb051d",
          "dweb:/ipfs/QmaFCPgrSTRe4fAZ2vfSdcTQeVESJXQLErCZuxPaABbAmM"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/DappsStaking.sol": {
        "keccak256": "0xf8298be9e94a553de178c483d0d8efd2d5d0aafc8e8106b65aa30068d89e05b1",
        "urls": [
          "bzz-raw://631e3d2c7272f26c37e85c67c9d43726f3897fa111c01ce04f57785d2fc2ee24",
          "dweb:/ipfs/QmRyVLS9dqR28Gb1qWnUHGqdvhCjfSQNFnWUdSKkMScRkr"
        ],
        "license": "BSD-3-Clause"
      },
      "contracts/interfaces/IAdaptersDistributor.sol": {
        "keccak256": "0x4c0c583fe1646101e01ae92486926eb3710c27aa7021c68ac35f49133722c184",
        "urls": [
          "bzz-raw://05830918637ed312bf953d729fbb17b38a872af7b5c4267a017c599b88692431",
          "dweb:/ipfs/QmS25WFHSfQY9dM5ooo87h7Mx14hKA5cGunEzELA8bTEJf"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IDNT.sol": {
        "keccak256": "0xd9a14eabdb4bebc8e81df58d2407301e60b426c32c59f52f21a32aba5483d766",
        "urls": [
          "bzz-raw://064ddfac6b3b533f89b7643d76befb45f6396b711c6546eebaca370fa2f034f3",
          "dweb:/ipfs/QmTFqVxCRVZpHn1z8bGU3Sv6yt2ddjZviJyrSBh358H4Rk"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ILiquidStaking.sol": {
        "keccak256": "0x31e51b639dcc67203c1ba732d6a08040219435f209468c31b328f4bd1baedb7e",
        "urls": [
          "bzz-raw://e50c2ef8e55e14b5bfcde948c2a705f996bff5fa8d9a6b80584643883b16d097",
          "dweb:/ipfs/Qmbaw5jS7kPF242jhaRy5Nn1D6dk5ai6iPs2ePBH1B7DpR"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/INFTDistributor.sol": {
        "keccak256": "0xd05123a0a5733673c684caa179fc030351b30e68f3c0da31816ddaa8380b3789",
        "urls": [
          "bzz-raw://1bd4f728f31bd3d69e57f3c41f50242509d980c93b2566f845689bcba50c3990",
          "dweb:/ipfs/QmYwj78S16Fr6zT71kr2n3cCzFnSTdFJ5rsRyfVSQUnPFh"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IPartnerHandler.sol": {
        "keccak256": "0xe21ebea595e6606b3b7d07abfdf3d01da878aa7ef8ae688dd41f4d3b502f58e2",
        "urls": [
          "bzz-raw://a396815e15a50abace371a1cc9243ca4aa5b04862c3830679f6558885dcc03c0",
          "dweb:/ipfs/QmZZxqXhAsNmtKDJHmTa6pJ8kkhiHqSLK1Vv7xAoLY3xMW"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
        "keccak256": "0x2ea9f206854c98b67dd228f8cad22bfe90ba7b1c2295315672f2e1e244623fc3",
        "urls": [
          "bzz-raw://b4a7ef6774a9acbbb01583a9fc4656ee9b3dae4b8d5099f480625bfc0af68a02",
          "dweb:/ipfs/QmeXZcdZ7FELTc21GSgjRHXFCj4ohxrsZUaNzA5cMemAbE"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
        "keccak256": "0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa",
        "urls": [
          "bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c",
          "dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/LiquidStaking/LiquidStakingMigration.sol",
    "id": 8427,
    "exportedSymbols": {
      "AccessControlUpgradeable": [
        26724
      ],
      "AddressUpgradeable": [
        30355
      ],
      "ContextUpgradeable": [
        30397
      ],
      "DappsStaking": [
        19618
      ],
      "ERC165Upgradeable": [
        30741
      ],
      "IAccessControlUpgradeable": [
        26822
      ],
      "IAdaptersDistributor": [
        19637
      ],
      "IDNT": [
        19755
      ],
      "IERC165Upgradeable": [
        30753
      ],
      "ILiquidStaking": [
        19967
      ],
      "INFTDistributor": [
        20314
      ],
      "IPartnerHandler": [
        20879
      ],
      "Initializable": [
        27105
      ],
      "LiquidStakingMigration": [
        8426
      ],
      "LiquidStakingStorage": [
        8901
      ],
      "NDistributor": [
        15577
      ],
      "StringsUpgradeable": [
        30697
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:5142:9",
    "nodes": [
      {
        "id": 7856,
        "nodeType": "PragmaDirective",
        "src": "32:22:9",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 7857,
        "nodeType": "ImportDirective",
        "src": "56:81:9",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 8427,
        "sourceUnit": 26725,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7858,
        "nodeType": "ImportDirective",
        "src": "138:36:9",
        "nodes": [],
        "absolutePath": "contracts/LiquidStaking/LiquidStakingStorage.sol",
        "file": "./LiquidStakingStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 8427,
        "sourceUnit": 8902,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8426,
        "nodeType": "ContractDefinition",
        "src": "176:4997:9",
        "nodes": [
          {
            "id": 7865,
            "nodeType": "UsingForDirective",
            "src": "264:45:9",
            "nodes": [],
            "libraryName": {
              "id": 7863,
              "name": "AddressUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30355,
              "src": "270:18:9"
            },
            "typeName": {
              "id": 7864,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "293:15:9",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            }
          },
          {
            "id": 7868,
            "nodeType": "UsingForDirective",
            "src": "314:37:9",
            "nodes": [],
            "libraryName": {
              "id": 7866,
              "name": "AddressUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30355,
              "src": "320:18:9"
            },
            "typeName": {
              "id": 7867,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "343:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 7907,
            "nodeType": "FunctionDefinition",
            "src": "801:248:9",
            "nodes": [],
            "body": {
              "id": 7906,
              "nodeType": "Block",
              "src": "875:174:9",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 7876,
                        "name": "partners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8671,
                        "src": "889:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 7877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "889:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 7878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "908:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "889:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7882,
                  "nodeType": "IfStatement",
                  "src": "885:34:9",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 7880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "918:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 7875,
                    "id": 7881,
                    "nodeType": "Return",
                    "src": "911:8:9"
                  }
                },
                {
                  "body": {
                    "id": 7904,
                    "nodeType": "Block",
                    "src": "968:75:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 7902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 7893,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7874,
                            "src": "982:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 7900,
                                "name": "_user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7871,
                                "src": "1026:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 7895,
                                      "name": "partners",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8671,
                                      "src": "1008:8:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 7897,
                                    "indexExpression": {
                                      "id": 7896,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7884,
                                      "src": "1017:1:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1008:11:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 7894,
                                  "name": "IPartnerHandler",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20879,
                                  "src": "992:15:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IPartnerHandler_$20879_$",
                                    "typeString": "type(contract IPartnerHandler)"
                                  }
                                },
                                "id": 7898,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "992:28:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPartnerHandler_$20879",
                                  "typeString": "contract IPartnerHandler"
                                }
                              },
                              "id": 7899,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "calc",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 20873,
                              "src": "992:33:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 7901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "992:40:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "982:50:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7903,
                        "nodeType": "ExpressionStatement",
                        "src": "982:50:9"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7886,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7884,
                      "src": "942:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 7887,
                        "name": "partners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8671,
                        "src": "946:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 7888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "946:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "942:19:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7905,
                  "initializationExpression": {
                    "assignments": [
                      7884
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 7884,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "939:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 7905,
                        "src": "934:6:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7883,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "934:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 7885,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "934:6:9"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 7891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "963:3:9",
                      "subExpression": {
                        "id": 7890,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7884,
                        "src": "963:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7892,
                    "nodeType": "ExpressionStatement",
                    "src": "963:3:9"
                  },
                  "nodeType": "ForStatement",
                  "src": "929:114:9"
                }
              ]
            },
            "documentation": {
              "id": 7869,
              "nodeType": "StructuredDocumentation",
              "src": "666:130:9",
              "text": "@notice iterate by each partner address and get user rewards from handlers\n @param _user shows share of user in nTokens"
            },
            "functionSelector": "0413f9a5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserLpTokens",
            "nameLocation": "810:15:9",
            "parameters": {
              "id": 7872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7871,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "834:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 7907,
                  "src": "826:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7870,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "826:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "825:15:9"
            },
            "returnParameters": {
              "id": 7875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7874,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "867:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 7907,
                  "src": "862:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7873,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "862:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "861:13:9"
            },
            "scope": 8426,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 8062,
            "nodeType": "FunctionDefinition",
            "src": "1170:757:9",
            "nodes": [],
            "body": {
              "id": 8061,
              "nodeType": "Block",
              "src": "1243:684:9",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    7920
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7920,
                      "mutability": "mutable",
                      "name": "arr",
                      "nameLocation": "1267:3:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 8061,
                      "src": "1253:17:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 7918,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1253:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7919,
                        "nodeType": "ArrayTypeName",
                        "src": "1253:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7922,
                  "initialValue": {
                    "id": 7921,
                    "name": "_arr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7911,
                    "src": "1273:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1253:24:9"
                },
                {
                  "assignments": [
                    7924
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7924,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "1292:3:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 8061,
                      "src": "1287:8:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7923,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1287:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7927,
                  "initialValue": {
                    "expression": {
                      "id": 7925,
                      "name": "arr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7920,
                      "src": "1298:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 7926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1298:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1287:21:9"
                },
                {
                  "assignments": [
                    7929
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7929,
                      "mutability": "mutable",
                      "name": "swapped",
                      "nameLocation": "1323:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 8061,
                      "src": "1318:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7928,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1318:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7931,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 7930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1333:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1318:20:9"
                },
                {
                  "body": {
                    "id": 8030,
                    "nodeType": "Block",
                    "src": "1379:449:9",
                    "statements": [
                      {
                        "body": {
                          "id": 7995,
                          "nodeType": "Block",
                          "src": "1428:226:9",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7964,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 7956,
                                    "name": "arr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7920,
                                    "src": "1450:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 7958,
                                  "indexExpression": {
                                    "id": 7957,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7944,
                                    "src": "1454:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1450:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "baseExpression": {
                                    "id": 7959,
                                    "name": "arr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7920,
                                    "src": "1459:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 7963,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 7962,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 7960,
                                      "name": "j",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7944,
                                      "src": "1463:1:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 7961,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1467:1:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "1463:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1459:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1450:19:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 7994,
                              "nodeType": "IfStatement",
                              "src": "1446:194:9",
                              "trueBody": {
                                "id": 7993,
                                "nodeType": "Block",
                                "src": "1471:169:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 7967,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 7965,
                                        "name": "swapped",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7929,
                                        "src": "1493:7:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "74727565",
                                        "id": 7966,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1503:4:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "1493:14:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 7968,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1493:14:9"
                                  },
                                  {
                                    "assignments": [
                                      7970
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 7970,
                                        "mutability": "mutable",
                                        "name": "s",
                                        "nameLocation": "1534:1:9",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 7993,
                                        "src": "1529:6:9",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 7969,
                                          "name": "uint",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1529:4:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 7976,
                                    "initialValue": {
                                      "baseExpression": {
                                        "id": 7971,
                                        "name": "arr",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7920,
                                        "src": "1538:3:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 7975,
                                      "indexExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 7974,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 7972,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7944,
                                          "src": "1542:1:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 7973,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1546:1:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "1542:5:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1538:10:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1529:19:9"
                                  },
                                  {
                                    "expression": {
                                      "id": 7985,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 7977,
                                          "name": "arr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7920,
                                          "src": "1570:3:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 7981,
                                        "indexExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 7980,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 7978,
                                            "name": "j",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 7944,
                                            "src": "1574:1:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "+",
                                          "rightExpression": {
                                            "hexValue": "31",
                                            "id": 7979,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1578:1:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "1574:5:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "1570:10:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "id": 7982,
                                          "name": "arr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7920,
                                          "src": "1583:3:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 7984,
                                        "indexExpression": {
                                          "id": 7983,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7944,
                                          "src": "1587:1:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1583:6:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "1570:19:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 7986,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1570:19:9"
                                  },
                                  {
                                    "expression": {
                                      "id": 7991,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 7987,
                                          "name": "arr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7920,
                                          "src": "1611:3:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 7989,
                                        "indexExpression": {
                                          "id": 7988,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7944,
                                          "src": "1615:1:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "1611:6:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "id": 7990,
                                        "name": "s",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7970,
                                        "src": "1620:1:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "1611:10:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 7992,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1611:10:9"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 7952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 7946,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7944,
                            "src": "1406:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 7951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 7949,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 7947,
                                "name": "len",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7924,
                                "src": "1410:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 7948,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7933,
                                "src": "1416:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1410:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 7950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1420:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "1410:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1406:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 7996,
                        "initializationExpression": {
                          "assignments": [
                            7944
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 7944,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "1403:1:9",
                              "nodeType": "VariableDeclaration",
                              "scope": 7996,
                              "src": "1398:6:9",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 7943,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "1398:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 7945,
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1398:6:9"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 7954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "1423:3:9",
                            "subExpression": {
                              "id": 7953,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7944,
                              "src": "1423:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 7955,
                          "nodeType": "ExpressionStatement",
                          "src": "1423:3:9"
                        },
                        "nodeType": "ForStatement",
                        "src": "1393:261:9"
                      },
                      {
                        "condition": {
                          "id": 7998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1684:8:9",
                          "subExpression": {
                            "id": 7997,
                            "name": "swapped",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7929,
                            "src": "1685:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 8029,
                        "nodeType": "IfStatement",
                        "src": "1680:138:9",
                        "trueBody": {
                          "id": 8028,
                          "nodeType": "Block",
                          "src": "1694:124:9",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 8003,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 8001,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 7999,
                                    "name": "len",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7924,
                                    "src": "1716:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "%",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 8000,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1722:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "1716:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 8002,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1727:1:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "1716:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 8021,
                              "nodeType": "IfStatement",
                              "src": "1712:56:9",
                              "trueBody": {
                                "expression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 8019,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 8016,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "baseExpression": {
                                            "id": 8004,
                                            "name": "arr",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 7920,
                                            "src": "1738:3:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                              "typeString": "uint256[] memory"
                                            }
                                          },
                                          "id": 8008,
                                          "indexExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 8007,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 8005,
                                              "name": "len",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7924,
                                              "src": "1742:3:9",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "/",
                                            "rightExpression": {
                                              "hexValue": "32",
                                              "id": 8006,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "1746:1:9",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_2_by_1",
                                                "typeString": "int_const 2"
                                              },
                                              "value": "2"
                                            },
                                            "src": "1742:5:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "1738:10:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "baseExpression": {
                                            "id": 8009,
                                            "name": "arr",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 7920,
                                            "src": "1751:3:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                              "typeString": "uint256[] memory"
                                            }
                                          },
                                          "id": 8015,
                                          "indexExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 8014,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 8012,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 8010,
                                                "name": "len",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7924,
                                                "src": "1755:3:9",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "/",
                                              "rightExpression": {
                                                "hexValue": "32",
                                                "id": 8011,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1759:1:9",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_2_by_1",
                                                  "typeString": "int_const 2"
                                                },
                                                "value": "2"
                                              },
                                              "src": "1755:5:9",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "-",
                                            "rightExpression": {
                                              "hexValue": "31",
                                              "id": 8013,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "1763:1:9",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              },
                                              "value": "1"
                                            },
                                            "src": "1755:9:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "1751:14:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "1738:27:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 8017,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "1737:29:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 8018,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1767:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "1737:31:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "functionReturnParameters": 7915,
                                "id": 8020,
                                "nodeType": "Return",
                                "src": "1730:38:9"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 8022,
                                  "name": "arr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7920,
                                  "src": "1793:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 8026,
                                "indexExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 8025,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 8023,
                                    "name": "len",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7924,
                                    "src": "1797:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 8024,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1801:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "1797:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1793:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 7915,
                              "id": 8027,
                              "nodeType": "Return",
                              "src": "1786:17:9"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 7935,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7933,
                      "src": "1361:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 7938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 7936,
                        "name": "len",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7924,
                        "src": "1365:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 7937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1371:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1365:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1361:11:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8031,
                  "initializationExpression": {
                    "assignments": [
                      7933
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 7933,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1358:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 8031,
                        "src": "1353:6:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7932,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1353:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 7934,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1353:6:9"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 7941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1374:3:9",
                      "subExpression": {
                        "id": 7940,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7933,
                        "src": "1374:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7942,
                    "nodeType": "ExpressionStatement",
                    "src": "1374:3:9"
                  },
                  "nodeType": "ForStatement",
                  "src": "1348:480:9"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 8034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8032,
                        "name": "len",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7924,
                        "src": "1841:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 8033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1847:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "1841:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 8035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1852:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1841:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8054,
                  "nodeType": "IfStatement",
                  "src": "1837:56:9",
                  "trueBody": {
                    "expression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 8052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 8049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 8037,
                                "name": "arr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7920,
                                "src": "1863:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 8041,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 8040,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 8038,
                                  "name": "len",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7924,
                                  "src": "1867:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 8039,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1871:1:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "1867:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1863:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 8042,
                                "name": "arr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7920,
                                "src": "1876:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 8048,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 8047,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 8045,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 8043,
                                    "name": "len",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7924,
                                    "src": "1880:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 8044,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1884:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "1880:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 8046,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1888:1:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "1880:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1876:14:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1863:27:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 8050,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1862:29:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 8051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1892:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "1862:31:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 7915,
                    "id": 8053,
                    "nodeType": "Return",
                    "src": "1855:38:9"
                  }
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 8055,
                      "name": "arr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7920,
                      "src": "1910:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 8059,
                    "indexExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 8058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8056,
                        "name": "len",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7924,
                        "src": "1914:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 8057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1918:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "1914:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1910:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7915,
                  "id": 8060,
                  "nodeType": "Return",
                  "src": "1903:17:9"
                }
              ]
            },
            "documentation": {
              "id": 7908,
              "nodeType": "StructuredDocumentation",
              "src": "1059:106:9",
              "text": "@notice sorts the list in ascending order and return mean\n @param _arr array with user's shares"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "findMedian",
            "nameLocation": "1179:10:9",
            "parameters": {
              "id": 7912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7911,
                  "mutability": "mutable",
                  "name": "_arr",
                  "nameLocation": "1204:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 8062,
                  "src": "1190:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7909,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1190:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7910,
                    "nodeType": "ArrayTypeName",
                    "src": "1190:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1189:20:9"
            },
            "returnParameters": {
              "id": 7915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7914,
                  "mutability": "mutable",
                  "name": "mean",
                  "nameLocation": "1237:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 8062,
                  "src": "1232:9:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7913,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1232:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1231:11:9"
            },
            "scope": 8426,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 8215,
            "nodeType": "FunctionDefinition",
            "src": "2025:1199:9",
            "nodes": [],
            "body": {
              "id": 8214,
              "nodeType": "Block",
              "src": "2084:1140:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8072,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8065,
                          "src": "2102:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 8075,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2119:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2111:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 8073,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2111:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 8076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2111:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2102:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5a65726f206164647265737320616c61726d21",
                        "id": 8078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2123:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6783915c8d5be03a807215249a1906cb55d11dc3083fbc400889774cdb2c0236",
                          "typeString": "literal_string \"Zero address alarm!\""
                        },
                        "value": "Zero address alarm!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6783915c8d5be03a807215249a1906cb55d11dc3083fbc400889774cdb2c0236",
                          "typeString": "literal_string \"Zero address alarm!\""
                        }
                      ],
                      "id": 8071,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2094:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2094:51:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8080,
                  "nodeType": "ExpressionStatement",
                  "src": "2094:51:9"
                },
                {
                  "assignments": [
                    8082
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8082,
                      "mutability": "mutable",
                      "name": "era",
                      "nameLocation": "2177:3:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 8214,
                      "src": "2172:8:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8081,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2172:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8085,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8083,
                      "name": "currentEra",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8900,
                      "src": "2183:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 8084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2183:12:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2172:23:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 8087,
                                "name": "usersShotsPerEra",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8631,
                                "src": "2213:16:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => uint256[] storage ref))"
                                }
                              },
                              "id": 8089,
                              "indexExpression": {
                                "id": 8088,
                                "name": "_user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8065,
                                "src": "2230:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2213:23:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                                "typeString": "mapping(uint256 => uint256[] storage ref)"
                              }
                            },
                            "id": 8091,
                            "indexExpression": {
                              "id": 8090,
                              "name": "era",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8082,
                              "src": "2237:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2213:28:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 8092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2213:35:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 8093,
                          "name": "eraShotsLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8641,
                          "src": "2252:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2213:52:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6f206d756368206572612073686f7473",
                        "id": 8095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2267:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_866212b4b9b7a0b6141d29c53c67c9fac4a265dd7614c3bb5f81dbbcfb1246ae",
                          "typeString": "literal_string \"Too much era shots\""
                        },
                        "value": "Too much era shots"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_866212b4b9b7a0b6141d29c53c67c9fac4a265dd7614c3bb5f81dbbcfb1246ae",
                          "typeString": "literal_string \"Too much era shots\""
                        }
                      ],
                      "id": 8086,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2205:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2205:83:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8097,
                  "nodeType": "ExpressionStatement",
                  "src": "2205:83:9"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 8098,
                            "name": "usersShotsPerEra",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8631,
                            "src": "2355:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => uint256[] storage ref))"
                            }
                          },
                          "id": 8100,
                          "indexExpression": {
                            "id": 8099,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8065,
                            "src": "2372:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2355:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(uint256 => uint256[] storage ref)"
                          }
                        },
                        "id": 8102,
                        "indexExpression": {
                          "id": 8101,
                          "name": "era",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8082,
                          "src": "2379:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2355:28:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 8103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2355:35:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 8104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2394:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2355:40:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8198,
                  "nodeType": "IfStatement",
                  "src": "2351:771:9",
                  "trueBody": {
                    "id": 8197,
                    "nodeType": "Block",
                    "src": "2397:725:9",
                    "statements": [
                      {
                        "assignments": [
                          8110
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8110,
                            "mutability": "mutable",
                            "name": "arr",
                            "nameLocation": "2425:3:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 8197,
                            "src": "2411:17:9",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 8108,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "2411:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 8109,
                              "nodeType": "ArrayTypeName",
                              "src": "2411:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8118,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 8111,
                              "name": "usersShotsPerEra",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8631,
                              "src": "2431:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
                                "typeString": "mapping(address => mapping(uint256 => uint256[] storage ref))"
                              }
                            },
                            "id": 8113,
                            "indexExpression": {
                              "id": 8112,
                              "name": "_user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8065,
                              "src": "2448:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2431:23:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                              "typeString": "mapping(uint256 => uint256[] storage ref)"
                            }
                          },
                          "id": 8117,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 8116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 8114,
                              "name": "era",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8082,
                              "src": "2455:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 8115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2461:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "2455:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2431:32:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2411:52:9"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 8119,
                              "name": "arr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8110,
                              "src": "2482:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 8120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2482:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 8121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2495:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2482:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 8196,
                        "nodeType": "IfStatement",
                        "src": "2478:634:9",
                        "trueBody": {
                          "id": 8195,
                          "nodeType": "Block",
                          "src": "2498:614:9",
                          "statements": [
                            {
                              "assignments": [
                                8124
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 8124,
                                  "mutability": "mutable",
                                  "name": "_amount",
                                  "nameLocation": "2524:7:9",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 8195,
                                  "src": "2516:15:9",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 8123,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2516:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 8128,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 8126,
                                    "name": "arr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8110,
                                    "src": "2545:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  ],
                                  "id": 8125,
                                  "name": "findMedian",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8062,
                                  "src": "2534:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$",
                                    "typeString": "function (uint256[] memory) pure returns (uint256)"
                                  }
                                },
                                "id": 8127,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2534:15:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2516:33:9"
                            },
                            {
                              "assignments": [
                                8131
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 8131,
                                  "mutability": "mutable",
                                  "name": "staker",
                                  "nameLocation": "2583:6:9",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 8195,
                                  "src": "2568:21:9",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Staker_$8698_storage_ptr",
                                    "typeString": "struct LiquidStakingStorage.Staker"
                                  },
                                  "typeName": {
                                    "id": 8130,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 8129,
                                      "name": "Staker",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 8698,
                                      "src": "2568:6:9"
                                    },
                                    "referencedDeclaration": 8698,
                                    "src": "2568:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Staker_$8698_storage_ptr",
                                      "typeString": "struct LiquidStakingStorage.Staker"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 8138,
                              "initialValue": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 8132,
                                      "name": "dapps",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8712,
                                      "src": "2592:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Dapp_$8685_storage_$",
                                        "typeString": "mapping(string memory => struct LiquidStakingStorage.Dapp storage ref)"
                                      }
                                    },
                                    "id": 8134,
                                    "indexExpression": {
                                      "hexValue": "41646170746572735574696c697479",
                                      "id": 8133,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2598:17:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_11ed8ceef2396cb791fd2b8ca6f504e490d9f08101c5bdcccf4f3c3dca3910ca",
                                        "typeString": "literal_string \"AdaptersUtility\""
                                      },
                                      "value": "AdaptersUtility"
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2592:24:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Dapp_$8685_storage",
                                      "typeString": "struct LiquidStakingStorage.Dapp storage ref"
                                    }
                                  },
                                  "id": 8135,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "stakers",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8684,
                                  "src": "2592:32:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$8698_storage_$",
                                    "typeString": "mapping(address => struct LiquidStakingStorage.Staker storage ref)"
                                  }
                                },
                                "id": 8137,
                                "indexExpression": {
                                  "id": 8136,
                                  "name": "_user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8065,
                                  "src": "2625:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2592:39:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Staker_$8698_storage",
                                  "typeString": "struct LiquidStakingStorage.Staker storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2568:63:9"
                            },
                            {
                              "expression": {
                                "id": 8145,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 8139,
                                      "name": "staker",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8131,
                                      "src": "2653:6:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Staker_$8698_storage_ptr",
                                        "typeString": "struct LiquidStakingStorage.Staker storage pointer"
                                      }
                                    },
                                    "id": 8142,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "eraBalance",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8689,
                                    "src": "2653:17:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 8143,
                                  "indexExpression": {
                                    "id": 8141,
                                    "name": "era",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8082,
                                    "src": "2671:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2653:22:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 8144,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8124,
                                  "src": "2679:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2653:33:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 8146,
                              "nodeType": "ExpressionStatement",
                              "src": "2653:33:9"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 8152,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 8147,
                                      "name": "staker",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8131,
                                      "src": "2709:6:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Staker_$8698_storage_ptr",
                                        "typeString": "struct LiquidStakingStorage.Staker storage pointer"
                                      }
                                    },
                                    "id": 8148,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "eraBalance",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 8689,
                                    "src": "2709:17:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 8150,
                                  "indexExpression": {
                                    "id": 8149,
                                    "name": "era",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8082,
                                    "src": "2727:3:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2709:22:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 8151,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2735:1:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "2709:27:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 8170,
                                "nodeType": "Block",
                                "src": "2817:74:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 8168,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "expression": {
                                            "id": 8162,
                                            "name": "staker",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 8131,
                                            "src": "2839:6:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Staker_$8698_storage_ptr",
                                              "typeString": "struct LiquidStakingStorage.Staker storage pointer"
                                            }
                                          },
                                          "id": 8165,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "isZeroBalance",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 8693,
                                          "src": "2839:20:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                            "typeString": "mapping(uint256 => bool)"
                                          }
                                        },
                                        "id": 8166,
                                        "indexExpression": {
                                          "id": 8164,
                                          "name": "era",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 8082,
                                          "src": "2860:3:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "2839:25:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "66616c7365",
                                        "id": 8167,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2867:5:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      },
                                      "src": "2839:33:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 8169,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2839:33:9"
                                  }
                                ]
                              },
                              "id": 8171,
                              "nodeType": "IfStatement",
                              "src": "2705:186:9",
                              "trueBody": {
                                "id": 8161,
                                "nodeType": "Block",
                                "src": "2738:73:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 8159,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "expression": {
                                            "id": 8153,
                                            "name": "staker",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 8131,
                                            "src": "2760:6:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Staker_$8698_storage_ptr",
                                              "typeString": "struct LiquidStakingStorage.Staker storage pointer"
                                            }
                                          },
                                          "id": 8156,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "isZeroBalance",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 8693,
                                          "src": "2760:20:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                            "typeString": "mapping(uint256 => bool)"
                                          }
                                        },
                                        "id": 8157,
                                        "indexExpression": {
                                          "id": 8155,
                                          "name": "era",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 8082,
                                          "src": "2781:3:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "2760:25:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "74727565",
                                        "id": 8158,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2788:4:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "2760:32:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 8160,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2760:32:9"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 8180,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 8172,
                                          "name": "dapps",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 8712,
                                          "src": "2932:5:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Dapp_$8685_storage_$",
                                            "typeString": "mapping(string memory => struct LiquidStakingStorage.Dapp storage ref)"
                                          }
                                        },
                                        "id": 8174,
                                        "indexExpression": {
                                          "hexValue": "41646170746572735574696c697479",
                                          "id": 8173,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "2938:17:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_11ed8ceef2396cb791fd2b8ca6f504e490d9f08101c5bdcccf4f3c3dca3910ca",
                                            "typeString": "literal_string \"AdaptersUtility\""
                                          },
                                          "value": "AdaptersUtility"
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2932:24:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Dapp_$8685_storage",
                                          "typeString": "struct LiquidStakingStorage.Dapp storage ref"
                                        }
                                      },
                                      "id": 8175,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "stakers",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 8684,
                                      "src": "2932:32:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$8698_storage_$",
                                        "typeString": "mapping(address => struct LiquidStakingStorage.Staker storage ref)"
                                      }
                                    },
                                    "id": 8177,
                                    "indexExpression": {
                                      "id": 8176,
                                      "name": "_user",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8065,
                                      "src": "2965:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2932:39:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Staker_$8698_storage",
                                      "typeString": "struct LiquidStakingStorage.Staker storage ref"
                                    }
                                  },
                                  "id": 8178,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "lastClaimedEra",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8697,
                                  "src": "2932:54:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 8179,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2990:1:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "2932:59:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 8194,
                              "nodeType": "IfStatement",
                              "src": "2928:170:9",
                              "trueBody": {
                                "id": 8193,
                                "nodeType": "Block",
                                "src": "2993:105:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 8191,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 8181,
                                                "name": "dapps",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 8712,
                                                "src": "3015:5:9",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Dapp_$8685_storage_$",
                                                  "typeString": "mapping(string memory => struct LiquidStakingStorage.Dapp storage ref)"
                                                }
                                              },
                                              "id": 8183,
                                              "indexExpression": {
                                                "hexValue": "41646170746572735574696c697479",
                                                "id": 8182,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3021:17:9",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_stringliteral_11ed8ceef2396cb791fd2b8ca6f504e490d9f08101c5bdcccf4f3c3dca3910ca",
                                                  "typeString": "literal_string \"AdaptersUtility\""
                                                },
                                                "value": "AdaptersUtility"
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "3015:24:9",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Dapp_$8685_storage",
                                                "typeString": "struct LiquidStakingStorage.Dapp storage ref"
                                              }
                                            },
                                            "id": 8184,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "stakers",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 8684,
                                            "src": "3015:32:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$8698_storage_$",
                                              "typeString": "mapping(address => struct LiquidStakingStorage.Staker storage ref)"
                                            }
                                          },
                                          "id": 8186,
                                          "indexExpression": {
                                            "id": 8185,
                                            "name": "_user",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 8065,
                                            "src": "3048:5:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "3015:39:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Staker_$8698_storage",
                                            "typeString": "struct LiquidStakingStorage.Staker storage ref"
                                          }
                                        },
                                        "id": 8187,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "lastClaimedEra",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 8697,
                                        "src": "3015:54:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 8190,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 8188,
                                          "name": "era",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 8082,
                                          "src": "3072:3:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 8189,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "3078:1:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "3072:7:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3015:64:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 8192,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3015:64:9"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    8200
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8200,
                      "mutability": "mutable",
                      "name": "lpBal",
                      "nameLocation": "3137:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 8214,
                      "src": "3132:10:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8199,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3132:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8204,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 8202,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8065,
                        "src": "3161:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8201,
                      "name": "getUserLpTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7907,
                      "src": "3145:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 8203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3145:22:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3132:35:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8211,
                        "name": "lpBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8200,
                        "src": "3211:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 8205,
                            "name": "usersShotsPerEra",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8631,
                            "src": "3177:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => uint256[] storage ref))"
                            }
                          },
                          "id": 8208,
                          "indexExpression": {
                            "id": 8206,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8065,
                            "src": "3194:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3177:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(uint256 => uint256[] storage ref)"
                          }
                        },
                        "id": 8209,
                        "indexExpression": {
                          "id": 8207,
                          "name": "era",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8082,
                          "src": "3201:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3177:28:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 8210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3177:33:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 8212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3177:40:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8213,
                  "nodeType": "ExpressionStatement",
                  "src": "3177:40:9"
                }
              ]
            },
            "documentation": {
              "id": 8063,
              "nodeType": "StructuredDocumentation",
              "src": "1933:87:9",
              "text": "@notice saving information about users balances\n @param _user user's address"
            },
            "functionSelector": "bf8137ab",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 8068,
                    "name": "MANAGER",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8525,
                    "src": "2075:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 8069,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8067,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26438,
                  "src": "2066:8:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2066:17:9"
              }
            ],
            "name": "eraShot",
            "nameLocation": "2034:7:9",
            "parameters": {
              "id": 8066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8065,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "2050:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 8215,
                  "src": "2042:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8064,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2042:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2041:15:9"
            },
            "returnParameters": {
              "id": 8070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2084:0:9"
            },
            "scope": 8426,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 8364,
            "nodeType": "FunctionDefinition",
            "src": "3949:835:9",
            "nodes": [],
            "body": {
              "id": 8363,
              "nodeType": "Block",
              "src": "4013:771:9",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 8229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8224,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8218,
                      "src": "4027:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 8227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4044:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 8226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4036:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 8225,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4036:7:9",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 8228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4036:10:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4027:19:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8231,
                  "nodeType": "IfStatement",
                  "src": "4023:32:9",
                  "trueBody": {
                    "functionReturnParameters": 8223,
                    "id": 8230,
                    "nodeType": "Return",
                    "src": "4048:7:9"
                  }
                },
                {
                  "assignments": [
                    8233
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8233,
                      "mutability": "mutable",
                      "name": "_era",
                      "nameLocation": "4072:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 8363,
                      "src": "4064:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8232,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4064:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8236,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8234,
                      "name": "currentEra",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8900,
                      "src": "4079:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 8235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4079:12:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4064:27:9"
                },
                {
                  "expression": {
                    "id": 8247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8237,
                              "name": "dapps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8712,
                              "src": "4101:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Dapp_$8685_storage_$",
                                "typeString": "mapping(string memory => struct LiquidStakingStorage.Dapp storage ref)"
                              }
                            },
                            "id": 8239,
                            "indexExpression": {
                              "id": 8238,
                              "name": "utilName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8528,
                              "src": "4107:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4101:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dapp_$8685_storage",
                              "typeString": "struct LiquidStakingStorage.Dapp storage ref"
                            }
                          },
                          "id": 8240,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8684,
                          "src": "4101:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$8698_storage_$",
                            "typeString": "mapping(address => struct LiquidStakingStorage.Staker storage ref)"
                          }
                        },
                        "id": 8242,
                        "indexExpression": {
                          "id": 8241,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8218,
                          "src": "4125:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4101:30:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$8698_storage",
                          "typeString": "struct LiquidStakingStorage.Staker storage ref"
                        }
                      },
                      "id": 8243,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8695,
                      "src": "4101:38:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 8244,
                        "name": "totalUserRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8635,
                        "src": "4142:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 8246,
                      "indexExpression": {
                        "id": 8245,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8218,
                        "src": "4159:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4142:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4101:64:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8248,
                  "nodeType": "ExpressionStatement",
                  "src": "4101:64:9"
                },
                {
                  "expression": {
                    "id": 8270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 8249,
                                "name": "dapps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8712,
                                "src": "4175:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Dapp_$8685_storage_$",
                                  "typeString": "mapping(string memory => struct LiquidStakingStorage.Dapp storage ref)"
                                }
                              },
                              "id": 8251,
                              "indexExpression": {
                                "id": 8250,
                                "name": "utilName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8528,
                                "src": "4181:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4175:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dapp_$8685_storage",
                                "typeString": "struct LiquidStakingStorage.Dapp storage ref"
                              }
                            },
                            "id": 8252,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stakers",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8684,
                            "src": "4175:23:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$8698_storage_$",
                              "typeString": "mapping(address => struct LiquidStakingStorage.Staker storage ref)"
                            }
                          },
                          "id": 8254,
                          "indexExpression": {
                            "id": 8253,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8218,
                            "src": "4199:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4175:30:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$8698_storage",
                            "typeString": "struct LiquidStakingStorage.Staker storage ref"
                          }
                        },
                        "id": 8255,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "eraBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8689,
                        "src": "4175:41:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 8257,
                      "indexExpression": {
                        "id": 8256,
                        "name": "_era",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8233,
                        "src": "4217:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4175:47:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 8269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 8260,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8218,
                            "src": "4255:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 8261,
                            "name": "utilName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8528,
                            "src": "4262:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "id": 8262,
                            "name": "DNTname",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8530,
                            "src": "4272:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "expression": {
                            "id": 8258,
                            "name": "distr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8544,
                            "src": "4225:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NDistributor_$15577",
                              "typeString": "contract NDistributor"
                            }
                          },
                          "id": 8259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getUserDntBalanceInUtil",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14419,
                          "src": "4225:29:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (address,string memory,string memory) view external returns (uint256)"
                          }
                        },
                        "id": 8263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4225:55:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 8264,
                            "name": "buffer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8624,
                            "src": "4283:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(uint256 => uint256))"
                            }
                          },
                          "id": 8266,
                          "indexExpression": {
                            "id": 8265,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8218,
                            "src": "4290:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4283:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 8268,
                        "indexExpression": {
                          "id": 8267,
                          "name": "_era",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8233,
                          "src": "4297:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4283:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4225:77:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4175:127:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8271,
                  "nodeType": "ExpressionStatement",
                  "src": "4175:127:9"
                },
                {
                  "expression": {
                    "id": 8295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 8272,
                                "name": "dapps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8712,
                                "src": "4312:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Dapp_$8685_storage_$",
                                  "typeString": "mapping(string memory => struct LiquidStakingStorage.Dapp storage ref)"
                                }
                              },
                              "id": 8274,
                              "indexExpression": {
                                "id": 8273,
                                "name": "utilName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8528,
                                "src": "4318:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4312:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dapp_$8685_storage",
                                "typeString": "struct LiquidStakingStorage.Dapp storage ref"
                              }
                            },
                            "id": 8275,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stakers",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8684,
                            "src": "4312:23:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$8698_storage_$",
                              "typeString": "mapping(address => struct LiquidStakingStorage.Staker storage ref)"
                            }
                          },
                          "id": 8277,
                          "indexExpression": {
                            "id": 8276,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8218,
                            "src": "4336:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4312:30:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$8698_storage",
                            "typeString": "struct LiquidStakingStorage.Staker storage ref"
                          }
                        },
                        "id": 8278,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isZeroBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8693,
                        "src": "4312:44:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 8280,
                      "indexExpression": {
                        "id": 8279,
                        "name": "_era",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8233,
                        "src": "4357:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4312:50:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 8281,
                                    "name": "dapps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8712,
                                    "src": "4365:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Dapp_$8685_storage_$",
                                      "typeString": "mapping(string memory => struct LiquidStakingStorage.Dapp storage ref)"
                                    }
                                  },
                                  "id": 8283,
                                  "indexExpression": {
                                    "id": 8282,
                                    "name": "utilName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8528,
                                    "src": "4371:8:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4365:15:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Dapp_$8685_storage",
                                    "typeString": "struct LiquidStakingStorage.Dapp storage ref"
                                  }
                                },
                                "id": 8284,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "stakers",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8684,
                                "src": "4365:23:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$8698_storage_$",
                                  "typeString": "mapping(address => struct LiquidStakingStorage.Staker storage ref)"
                                }
                              },
                              "id": 8286,
                              "indexExpression": {
                                "id": 8285,
                                "name": "_user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8218,
                                "src": "4389:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4365:30:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$8698_storage",
                                "typeString": "struct LiquidStakingStorage.Staker storage ref"
                              }
                            },
                            "id": 8287,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "eraBalance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8689,
                            "src": "4365:41:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 8289,
                          "indexExpression": {
                            "id": 8288,
                            "name": "_era",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8233,
                            "src": "4407:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4365:47:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 8290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4416:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4365:52:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "hexValue": "66616c7365",
                        "id": 8293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4427:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "id": 8294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "4365:67:9",
                      "trueExpression": {
                        "hexValue": "74727565",
                        "id": 8292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4420:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4312:120:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8296,
                  "nodeType": "ExpressionStatement",
                  "src": "4312:120:9"
                },
                {
                  "expression": {
                    "id": 8322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 8297,
                                "name": "dapps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8712,
                                "src": "4442:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Dapp_$8685_storage_$",
                                  "typeString": "mapping(string memory => struct LiquidStakingStorage.Dapp storage ref)"
                                }
                              },
                              "id": 8299,
                              "indexExpression": {
                                "id": 8298,
                                "name": "utilName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8528,
                                "src": "4448:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4442:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dapp_$8685_storage",
                                "typeString": "struct LiquidStakingStorage.Dapp storage ref"
                              }
                            },
                            "id": 8300,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stakers",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8684,
                            "src": "4442:23:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$8698_storage_$",
                              "typeString": "mapping(address => struct LiquidStakingStorage.Staker storage ref)"
                            }
                          },
                          "id": 8302,
                          "indexExpression": {
                            "id": 8301,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8218,
                            "src": "4466:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4442:30:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$8698_storage",
                            "typeString": "struct LiquidStakingStorage.Staker storage ref"
                          }
                        },
                        "id": 8303,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "eraBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8689,
                        "src": "4442:41:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 8307,
                      "indexExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8304,
                          "name": "_era",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8233,
                          "src": "4484:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 8305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4491:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4484:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4442:51:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 8321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 8310,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8218,
                            "src": "4526:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 8311,
                            "name": "utilName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8528,
                            "src": "4533:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "id": 8312,
                            "name": "DNTname",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8530,
                            "src": "4543:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "expression": {
                            "id": 8308,
                            "name": "distr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8544,
                            "src": "4496:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NDistributor_$15577",
                              "typeString": "contract NDistributor"
                            }
                          },
                          "id": 8309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getUserDntBalanceInUtil",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14419,
                          "src": "4496:29:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (address,string memory,string memory) view external returns (uint256)"
                          }
                        },
                        "id": 8313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4496:55:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 8314,
                            "name": "buffer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8624,
                            "src": "4554:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(uint256 => uint256))"
                            }
                          },
                          "id": 8316,
                          "indexExpression": {
                            "id": 8315,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8218,
                            "src": "4561:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4554:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 8320,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 8317,
                            "name": "_era",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8233,
                            "src": "4568:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 8318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4575:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4568:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4554:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4496:81:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4442:135:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8323,
                  "nodeType": "ExpressionStatement",
                  "src": "4442:135:9"
                },
                {
                  "expression": {
                    "id": 8351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 8324,
                                "name": "dapps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8712,
                                "src": "4587:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Dapp_$8685_storage_$",
                                  "typeString": "mapping(string memory => struct LiquidStakingStorage.Dapp storage ref)"
                                }
                              },
                              "id": 8326,
                              "indexExpression": {
                                "id": 8325,
                                "name": "utilName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8528,
                                "src": "4593:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4587:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dapp_$8685_storage",
                                "typeString": "struct LiquidStakingStorage.Dapp storage ref"
                              }
                            },
                            "id": 8327,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stakers",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8684,
                            "src": "4587:23:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$8698_storage_$",
                              "typeString": "mapping(address => struct LiquidStakingStorage.Staker storage ref)"
                            }
                          },
                          "id": 8329,
                          "indexExpression": {
                            "id": 8328,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8218,
                            "src": "4611:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4587:30:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$8698_storage",
                            "typeString": "struct LiquidStakingStorage.Staker storage ref"
                          }
                        },
                        "id": 8330,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isZeroBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8693,
                        "src": "4587:44:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 8334,
                      "indexExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8331,
                          "name": "_era",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8233,
                          "src": "4632:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 8332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4639:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4632:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4587:54:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 8335,
                                    "name": "dapps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8712,
                                    "src": "4644:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Dapp_$8685_storage_$",
                                      "typeString": "mapping(string memory => struct LiquidStakingStorage.Dapp storage ref)"
                                    }
                                  },
                                  "id": 8337,
                                  "indexExpression": {
                                    "id": 8336,
                                    "name": "utilName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8528,
                                    "src": "4650:8:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4644:15:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Dapp_$8685_storage",
                                    "typeString": "struct LiquidStakingStorage.Dapp storage ref"
                                  }
                                },
                                "id": 8338,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "stakers",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8684,
                                "src": "4644:23:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$8698_storage_$",
                                  "typeString": "mapping(address => struct LiquidStakingStorage.Staker storage ref)"
                                }
                              },
                              "id": 8340,
                              "indexExpression": {
                                "id": 8339,
                                "name": "_user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8218,
                                "src": "4668:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4644:30:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$8698_storage",
                                "typeString": "struct LiquidStakingStorage.Staker storage ref"
                              }
                            },
                            "id": 8341,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "eraBalance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8689,
                            "src": "4644:41:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 8345,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 8344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 8342,
                              "name": "_era",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8233,
                              "src": "4686:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 8343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4693:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4686:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4644:51:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 8346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4699:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4644:56:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "hexValue": "66616c7365",
                        "id": 8349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4710:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "id": 8350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "4644:71:9",
                      "trueExpression": {
                        "hexValue": "74727565",
                        "id": 8348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4703:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4587:128:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8352,
                  "nodeType": "ExpressionStatement",
                  "src": "4587:128:9"
                },
                {
                  "expression": {
                    "id": 8361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8353,
                              "name": "dapps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8712,
                              "src": "4725:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Dapp_$8685_storage_$",
                                "typeString": "mapping(string memory => struct LiquidStakingStorage.Dapp storage ref)"
                              }
                            },
                            "id": 8355,
                            "indexExpression": {
                              "id": 8354,
                              "name": "utilName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8528,
                              "src": "4731:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4725:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dapp_$8685_storage",
                              "typeString": "struct LiquidStakingStorage.Dapp storage ref"
                            }
                          },
                          "id": 8356,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8684,
                          "src": "4725:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$8698_storage_$",
                            "typeString": "mapping(address => struct LiquidStakingStorage.Staker storage ref)"
                          }
                        },
                        "id": 8358,
                        "indexExpression": {
                          "id": 8357,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8218,
                          "src": "4749:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4725:30:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$8698_storage",
                          "typeString": "struct LiquidStakingStorage.Staker storage ref"
                        }
                      },
                      "id": 8359,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastClaimedEra",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8697,
                      "src": "4725:45:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8360,
                      "name": "_era",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8233,
                      "src": "4773:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4725:52:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8362,
                  "nodeType": "ExpressionStatement",
                  "src": "4725:52:9"
                }
              ]
            },
            "documentation": {
              "id": 8216,
              "nodeType": "StructuredDocumentation",
              "src": "3459:485:9",
              "text": "@notice function for migrating users storage\n @param _user => user address\n @dev the beginning of the migration must be carried out at the beginning of a new era\n @dev before starting the migration, you must first call eraShot \n      for each user to calculate his rewards for the past era\n @dev before starting the migration, you need to make a claim of \n      rewards for all past eras and call the sync function for all non-updated eras"
            },
            "functionSelector": "7111dfa3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 8221,
                    "name": "MANAGER",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8525,
                    "src": "4004:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 8222,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8220,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26438,
                  "src": "3995:8:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "3995:17:9"
              }
            ],
            "name": "migrateStorage",
            "nameLocation": "3958:14:9",
            "parameters": {
              "id": 8219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8218,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "3981:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 8364,
                  "src": "3973:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3973:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3972:15:9"
            },
            "returnParameters": {
              "id": 8223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4013:0:9"
            },
            "scope": 8426,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 8393,
            "nodeType": "FunctionDefinition",
            "src": "4790:184:9",
            "nodes": [],
            "body": {
              "id": 8392,
              "nodeType": "Block",
              "src": "4851:123:9",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    8371
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8371,
                      "mutability": "mutable",
                      "name": "l",
                      "nameLocation": "4866:1:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 8392,
                      "src": "4861:6:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8370,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4861:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8374,
                  "initialValue": {
                    "expression": {
                      "id": 8372,
                      "name": "stakers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8594,
                      "src": "4870:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 8373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "4870:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4861:23:9"
                },
                {
                  "body": {
                    "id": 8390,
                    "nodeType": "Block",
                    "src": "4917:51:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 8385,
                                "name": "stakers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8594,
                                "src": "4946:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 8387,
                              "indexExpression": {
                                "id": 8386,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8376,
                                "src": "4954:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4946:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8384,
                            "name": "migrateStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8364,
                            "src": "4931:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 8388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4931:26:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8389,
                        "nodeType": "ExpressionStatement",
                        "src": "4931:26:9"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8378,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8376,
                      "src": "4906:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 8379,
                      "name": "l",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8371,
                      "src": "4910:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4906:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8391,
                  "initializationExpression": {
                    "assignments": [
                      8376
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8376,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4903:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 8391,
                        "src": "4898:6:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8375,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4898:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 8377,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4898:6:9"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 8382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4913:3:9",
                      "subExpression": {
                        "id": 8381,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8376,
                        "src": "4913:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8383,
                    "nodeType": "ExpressionStatement",
                    "src": "4913:3:9"
                  },
                  "nodeType": "ForStatement",
                  "src": "4894:74:9"
                }
              ]
            },
            "functionSelector": "fb675105",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 8367,
                    "name": "MANAGER",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8525,
                    "src": "4842:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 8368,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8366,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26438,
                  "src": "4833:8:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "4833:17:9"
              }
            ],
            "name": "migrateInternalStorage",
            "nameLocation": "4799:22:9",
            "parameters": {
              "id": 8365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4821:2:9"
            },
            "returnParameters": {
              "id": 8369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4851:0:9"
            },
            "scope": 8426,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 8425,
            "nodeType": "FunctionDefinition",
            "src": "4980:190:9",
            "nodes": [],
            "body": {
              "id": 8424,
              "nodeType": "Block",
              "src": "5051:119:9",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    8403
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8403,
                      "mutability": "mutable",
                      "name": "l",
                      "nameLocation": "5066:1:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 8424,
                      "src": "5061:6:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8402,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5061:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8406,
                  "initialValue": {
                    "expression": {
                      "id": 8404,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8396,
                      "src": "5070:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "id": 8405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "5070:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5061:21:9"
                },
                {
                  "body": {
                    "id": 8422,
                    "nodeType": "Block",
                    "src": "5115:49:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 8417,
                                "name": "_user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8396,
                                "src": "5144:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 8419,
                              "indexExpression": {
                                "id": 8418,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8408,
                                "src": "5150:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5144:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8416,
                            "name": "migrateStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8364,
                            "src": "5129:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 8420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5129:24:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8421,
                        "nodeType": "ExpressionStatement",
                        "src": "5129:24:9"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8410,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8408,
                      "src": "5104:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 8411,
                      "name": "l",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8403,
                      "src": "5108:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5104:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8423,
                  "initializationExpression": {
                    "assignments": [
                      8408
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8408,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5101:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 8423,
                        "src": "5096:6:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8407,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5096:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 8409,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5096:6:9"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 8414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5111:3:9",
                      "subExpression": {
                        "id": 8413,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8408,
                        "src": "5111:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8415,
                    "nodeType": "ExpressionStatement",
                    "src": "5111:3:9"
                  },
                  "nodeType": "ForStatement",
                  "src": "5092:72:9"
                }
              ]
            },
            "functionSelector": "80629390",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 8399,
                    "name": "MANAGER",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8525,
                    "src": "5042:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 8400,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8398,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26438,
                  "src": "5033:8:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "5033:17:9"
              }
            ],
            "name": "migrateBatch",
            "nameLocation": "4989:12:9",
            "parameters": {
              "id": 8397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8396,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "5019:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 8425,
                  "src": "5002:22:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8394,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5002:7:9",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 8395,
                    "nodeType": "ArrayTypeName",
                    "src": "5002:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5001:24:9"
            },
            "returnParameters": {
              "id": 8401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5051:0:9"
            },
            "scope": 8426,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7859,
              "name": "AccessControlUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26724,
              "src": "211:24:9"
            },
            "id": 7860,
            "nodeType": "InheritanceSpecifier",
            "src": "211:24:9"
          },
          {
            "baseName": {
              "id": 7861,
              "name": "LiquidStakingStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8901,
              "src": "237:20:9"
            },
            "id": 7862,
            "nodeType": "InheritanceSpecifier",
            "src": "237:20:9"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          8426,
          8901,
          26724,
          30741,
          30753,
          26822,
          30397,
          27105
        ],
        "name": "LiquidStakingMigration",
        "nameLocation": "185:22:9",
        "scope": 8427,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 9
}