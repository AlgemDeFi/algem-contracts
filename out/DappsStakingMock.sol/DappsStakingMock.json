{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "name": "bond_and_stake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claim_staker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "era",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eraDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "read_current_era",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "read_unbonding_period",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "setEraDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakerRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "start",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        }
      ],
      "name": "unbond_and_unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "unstakes",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "startEra",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unstakesSum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw_unbonded",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60806040526064600155603c60035534801561001a57600080fd5b506100243361002d565b4260025561007d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6108648061008c6000396000f3fe6080604052600436106100f65760003560e01c8063a0b9d8be1161008a578063d97c94ac11610059578063d97c94ac14610269578063db62b20114610289578063e608d80b1461029d578063f2fde38b146102b257600080fd5b8063a0b9d8be146101fd578063be9a65551461021d578063c7841dd214610233578063cfb9cfba1461025357600080fd5b8063715018a6116100c6578063715018a61461016b57806377441b701461018057806377a0fe02146101c05780638da5cb5b146101d557600080fd5b806227d97014610102578063143e55e01461012b5780634455a38f1461014157806352b73e411461015757600080fd5b366100fd57005b600080fd5b34801561010e57600080fd5b5061011860045481565b6040519081526020015b60405180910390f35b34801561013757600080fd5b5061011860015481565b34801561014d57600080fd5b5061011860035481565b610169610165366004610755565b5050565b005b34801561017757600080fd5b506101696102d2565b34801561018c57600080fd5b506101a061019b366004610796565b6102e6565b604080516001600160801b03938416815292909116602083015201610122565b3480156101cc57600080fd5b5061016961031b565b3480156101e157600080fd5b506000546040516001600160a01b039091168152602001610122565b34801561020957600080fd5b50610169610218366004610734565b6104e0565b34801561022957600080fd5b5061011860025481565b34801561023f57600080fd5b5061016961024e366004610755565b61051f565b34801561025f57600080fd5b5061011860055481565b34801561027557600080fd5b50610169610284366004610796565b600355565b34801561029557600080fd5b50600a610118565b3480156102a957600080fd5b506101186105c4565b3480156102be57600080fd5b506101696102cd366004610734565b6105f3565b6102da61066e565b6102e460006106c8565b565b600681815481106102f657600080fd5b6000918252602090912001546001600160801b038082169250600160801b9091041682565b60005b6006548110156104dd57600a6006828154811061034b57634e487b7160e01b600052603260045260246000fd5b60009182526020909120015461037190600160801b90046001600160801b0316426107e6565b101580156103b4575060006006828154811061039d57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160801b0316115b156104cb57336001600160a01b03166108fc600683815481106103e757634e487b7160e01b600052603260045260246000fd5b60009182526020822001546040516001600160801b0390911680159093029291818181858888f19350505050158015610424573d6000803e3d6000fd5b506006818154811061044657634e487b7160e01b600052603260045260246000fd5b6000918252602082200154600480546001600160801b0390921692909161046e9084906107e6565b9250508190555060006006828154811061049857634e487b7160e01b600052603260045260246000fd5b600091825260209091200180546fffffffffffffffffffffffffffffffff19166001600160801b03929092169190911790555b806104d5816107fd565b91505061031e565b50565b6104e861066e565b600554604051339180156108fc02916000818181858888f19350505050158015610516573d6000803e3d6000fd5b50506000600555565b806001600160801b03166004600082825461053a91906107ae565b909155505060045447106101655760066040518060400160405280836001600160801b0316815260200161056c6105c4565b6001600160801b0390811690915282546001818101855560009485526020808620855191909501518416600160801b0293169290921792019190915560058054919290916105bb9084906107ae565b90915550505050565b6000600354600254426105d791906107e6565b6105e191906107c6565b6001546105ee91906107ae565b905090565b6105fb61066e565b6001600160a01b0381166106655760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6104dd816106c8565b6000546001600160a01b031633146102e45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161065c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461072f57600080fd5b919050565b600060208284031215610745578081fd5b61074e82610718565b9392505050565b60008060408385031215610767578081fd5b61077083610718565b915060208301356001600160801b038116811461078b578182fd5b809150509250929050565b6000602082840312156107a7578081fd5b5035919050565b600082198211156107c1576107c1610818565b500190565b6000826107e157634e487b7160e01b81526012600452602481fd5b500490565b6000828210156107f8576107f8610818565b500390565b600060001982141561081157610811610818565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220da099552a3f2e792e0728ee380c681a3a9208bf6ab5ea5df5df53be5d6d5c3d764736f6c63430008040033",
    "sourceMap": "149:2152:6:-:0;;;213:3;192:24;;277:2;248:31;;462:54;;;;;;;;;-1:-1:-1;936:32:110;719:10:123;936:18:110;:32::i;:::-;494:15:6;486:5;:23;149:2152;;2433:187:110;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:110;;;-1:-1:-1;;;;;;2541:17:110;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2433:187;;:::o;149:2152:6:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100f65760003560e01c8063a0b9d8be1161008a578063d97c94ac11610059578063d97c94ac14610269578063db62b20114610289578063e608d80b1461029d578063f2fde38b146102b257600080fd5b8063a0b9d8be146101fd578063be9a65551461021d578063c7841dd214610233578063cfb9cfba1461025357600080fd5b8063715018a6116100c6578063715018a61461016b57806377441b701461018057806377a0fe02146101c05780638da5cb5b146101d557600080fd5b806227d97014610102578063143e55e01461012b5780634455a38f1461014157806352b73e411461015757600080fd5b366100fd57005b600080fd5b34801561010e57600080fd5b5061011860045481565b6040519081526020015b60405180910390f35b34801561013757600080fd5b5061011860015481565b34801561014d57600080fd5b5061011860035481565b610169610165366004610755565b5050565b005b34801561017757600080fd5b506101696102d2565b34801561018c57600080fd5b506101a061019b366004610796565b6102e6565b604080516001600160801b03938416815292909116602083015201610122565b3480156101cc57600080fd5b5061016961031b565b3480156101e157600080fd5b506000546040516001600160a01b039091168152602001610122565b34801561020957600080fd5b50610169610218366004610734565b6104e0565b34801561022957600080fd5b5061011860025481565b34801561023f57600080fd5b5061016961024e366004610755565b61051f565b34801561025f57600080fd5b5061011860055481565b34801561027557600080fd5b50610169610284366004610796565b600355565b34801561029557600080fd5b50600a610118565b3480156102a957600080fd5b506101186105c4565b3480156102be57600080fd5b506101696102cd366004610734565b6105f3565b6102da61066e565b6102e460006106c8565b565b600681815481106102f657600080fd5b6000918252602090912001546001600160801b038082169250600160801b9091041682565b60005b6006548110156104dd57600a6006828154811061034b57634e487b7160e01b600052603260045260246000fd5b60009182526020909120015461037190600160801b90046001600160801b0316426107e6565b101580156103b4575060006006828154811061039d57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160801b0316115b156104cb57336001600160a01b03166108fc600683815481106103e757634e487b7160e01b600052603260045260246000fd5b60009182526020822001546040516001600160801b0390911680159093029291818181858888f19350505050158015610424573d6000803e3d6000fd5b506006818154811061044657634e487b7160e01b600052603260045260246000fd5b6000918252602082200154600480546001600160801b0390921692909161046e9084906107e6565b9250508190555060006006828154811061049857634e487b7160e01b600052603260045260246000fd5b600091825260209091200180546fffffffffffffffffffffffffffffffff19166001600160801b03929092169190911790555b806104d5816107fd565b91505061031e565b50565b6104e861066e565b600554604051339180156108fc02916000818181858888f19350505050158015610516573d6000803e3d6000fd5b50506000600555565b806001600160801b03166004600082825461053a91906107ae565b909155505060045447106101655760066040518060400160405280836001600160801b0316815260200161056c6105c4565b6001600160801b0390811690915282546001818101855560009485526020808620855191909501518416600160801b0293169290921792019190915560058054919290916105bb9084906107ae565b90915550505050565b6000600354600254426105d791906107e6565b6105e191906107c6565b6001546105ee91906107ae565b905090565b6105fb61066e565b6001600160a01b0381166106655760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6104dd816106c8565b6000546001600160a01b031633146102e45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161065c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461072f57600080fd5b919050565b600060208284031215610745578081fd5b61074e82610718565b9392505050565b60008060408385031215610767578081fd5b61077083610718565b915060208301356001600160801b038116811461078b578182fd5b809150509250929050565b6000602082840312156107a7578081fd5b5035919050565b600082198211156107c1576107c1610818565b500190565b6000826107e157634e487b7160e01b81526012600452602481fd5b500490565b6000828210156107f8576107f8610818565b500390565b600060001982141561081157610811610818565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220da099552a3f2e792e0728ee380c681a3a9208bf6ab5ea5df5df53be5d6d5c3d764736f6c63430008040033",
    "sourceMap": "149:2152:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;285:26;;;;;;;;;;;;;;;;;;;2434:25:140;;;2422:2;2407:18;285:26:6;;;;;;;;192:24;;;;;;;;;;;;;;;;248:31;;;;;;;;;;;;;;;;577:61;;;;;;:::i;:::-;;;;;;1831:101:110;;;;;;;;;;;;;:::i;430:25:6:-;;;;;;;;;;-1:-1:-1;430:25:6;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;2209:15:140;;;2191:34;;2261:15;;;;2256:2;2241:18;;2234:43;2111:18;430:25:6;2093:190:140;1074:368:6;;;;;;;;;;;;;:::i;1201:85:110:-;;;;;;;;;;-1:-1:-1;1247:7:110;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:110;;;1134:51:140;;1122:2;1107:18;1201:85:110;1089:102:140;1601:137:6;;;;;;;;;;-1:-1:-1;1601:137:6;;;;;:::i;:::-;;:::i;222:20::-;;;;;;;;;;;;;;;;723:267;;;;;;;;;;-1:-1:-1;723:267:6;;;;;:::i;:::-;;:::i;317:28::-;;;;;;;;;;;;;;;;2174:90;;;;;;;;;;-1:-1:-1;2174:90:6;;;;;:::i;:::-;2234:11;:23;2174:90;2077:91;;;;;;;;;;-1:-1:-1;2159:2:6;2077:91;;1815:155;;;;;;;;;;;;;:::i;2081:198:110:-;;;;;;;;;;-1:-1:-1;2081:198:110;;;;;:::i;:::-;;:::i;1831:101::-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;430:25:6:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;430:25:6;;;;-1:-1:-1;;;;430:25:6;;;;;:::o;1074:368::-;1127:9;1122:314;1142:8;:15;1138:19;;1122:314;;;1224:2;1200:8;1209:1;1200:11;;;;;;-1:-1:-1;;;1200:11:6;;;;;;;;;;;;;;;;;;:20;1182:38;;-1:-1:-1;;;1200:20:6;;-1:-1:-1;;;;;1200:20:6;1182:15;:38;:::i;:::-;:44;;:70;;;;;1251:1;1230:8;1239:1;1230:11;;;;;;-1:-1:-1;;;1230:11:6;;;;;;;;;;;;;;;;;;:18;-1:-1:-1;;;;;1230:18:6;:22;1182:70;1178:248;;;1280:10;-1:-1:-1;;;;;1272:28:6;:48;1301:8;1310:1;1301:11;;;;;;-1:-1:-1;;;1301:11:6;;;;;;;;;;;;;;;;;:18;1272:48;;-1:-1:-1;;;;;1301:18:6;;;1272:48;;;;;;1301:18;1272:48;1301:11;1272:48;1301:18;1272:48;;;;;;;;;;;;;;;;;;;;;;1353:8;1362:1;1353:11;;;;;;-1:-1:-1;;;1353:11:6;;;;;;;;;;;;;;;;;:18;1338:11;:33;;-1:-1:-1;;;;;1353:18:6;;;;1338:11;;:33;;1353:18;;1338:33;:::i;:::-;;;;;;;;1410:1;1389:8;1398:1;1389:11;;;;;;-1:-1:-1;;;1389:11:6;;;;;;;;;;;;;;;;;;:22;;-1:-1:-1;;1389:22:6;-1:-1:-1;;;;;1389:22:6;;;;;;;;;;1178:248;1159:3;;;;:::i;:::-;;;;1122:314;;;;1074:368::o;1601:137::-;1094:13:110;:11;:13::i;:::-;1690::6::1;::::0;1661:43:::1;::::0;1669:10:::1;::::0;1661:43;::::1;;;::::0;::::1;::::0;;;1690:13;1669:10;1661:43;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1730:1:6::1;1714:13;:17:::0;1601:137::o;723:267::-;810:6;-1:-1:-1;;;;;795:21:6;:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;830:11:6;;845:21;-1:-1:-1;826:158:6;;882:8;896:44;;;;;;;;904:6;-1:-1:-1;;;;;896:44:6;;;;;920:18;:16;:18::i;:::-;-1:-1:-1;;;;;896:44:6;;;;;;882:59;;;;;;;;-1:-1:-1;882:59:6;;;;;;;;;;;;;;;;-1:-1:-1;;;882:59:6;;;;;;;;;;;;;955:13;:18;;882:59;;955:13;;:18;;882:59;;955:18;:::i;:::-;;;;-1:-1:-1;;723:267:6;;:::o;1815:155::-;1864:7;1924:11;;1915:5;;1897:15;:23;;;;:::i;:::-;1896:39;;;;:::i;:::-;1890:3;;:45;;;;:::i;:::-;1883:52;;1815:155;:::o;2081:198:110:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:110;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:110;;1398:2:140;2161:73:110::1;::::0;::::1;1380:21:140::0;1437:2;1417:18;;;1410:30;1476:34;1456:18;;;1449:62;-1:-1:-1;;;1527:18:140;;;1520:36;1573:19;;2161:73:110::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;1359:130::-:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:110;719:10:123;1422:23:110;1414:68;;;;-1:-1:-1;;;1414:68:110;;1805:2:140;1414:68:110;;;1787:21:140;;;1824:18;;;1817:30;1883:34;1863:18;;;1856:62;1935:18;;1414:68:110;1777:182:140;2433:187:110;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:110;;;-1:-1:-1;;;;;;2541:17:110;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2433:187;;:::o;14:173:140:-;82:20;;-1:-1:-1;;;;;131:31:140;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:196::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;:::-;343:39;262:126;-1:-1:-1;;;262:126:140:o;393:395::-;461:6;469;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;;650:2;639:9;635:18;622:32;-1:-1:-1;;;;;687:5:140;683:46;676:5;673:57;663:2;;749:6;741;734:22;663:2;777:5;767:15;;;480:308;;;;;:::o;793:190::-;852:6;905:2;893:9;884:7;880:23;876:32;873:2;;;926:6;918;911:22;873:2;-1:-1:-1;954:23:140;;863:120;-1:-1:-1;863:120:140:o;2470:128::-;2510:3;2541:1;2537:6;2534:1;2531:13;2528:2;;;2547:18;;:::i;:::-;-1:-1:-1;2583:9:140;;2518:80::o;2603:217::-;2643:1;2669;2659:2;;-1:-1:-1;;;2694:31:140;;2748:4;2745:1;2738:15;2776:4;2701:1;2766:15;2659:2;-1:-1:-1;2805:9:140;;2649:171::o;2825:125::-;2865:4;2893:1;2890;2887:8;2884:2;;;2898:18;;:::i;:::-;-1:-1:-1;2935:9:140;;2874:76::o;2955:135::-;2994:3;-1:-1:-1;;3015:17:140;;3012:2;;;3035:18;;:::i;:::-;-1:-1:-1;3082:1:140;3071:13;;3002:88::o;3095:127::-;3156:10;3151:3;3147:20;3144:1;3137:31;3187:4;3184:1;3177:15;3211:4;3208:1;3201:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "bond_and_stake(address,uint128)": "52b73e41",
    "claim_staker(address)": "a0b9d8be",
    "era()": "143e55e0",
    "eraDuration()": "4455a38f",
    "owner()": "8da5cb5b",
    "read_current_era()": "e608d80b",
    "read_unbonding_period()": "db62b201",
    "renounceOwnership()": "715018a6",
    "setEraDuration(uint256)": "d97c94ac",
    "stakerRewards()": "cfb9cfba",
    "start()": "be9a6555",
    "transferOwnership(address)": "f2fde38b",
    "unbond_and_unstake(address,uint128)": "c7841dd2",
    "unstakes(uint256)": "77441b70",
    "unstakesSum()": "0027d970",
    "withdraw_unbonded()": "77a0fe02"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"name\":\"bond_and_stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claim_staker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"era\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eraDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"read_current_era\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"read_unbonding_period\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"setEraDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakerRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"unbond_and_unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"unstakes\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"startEra\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakesSum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw_unbonded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"read_current_era()\":{\"returns\":{\"_0\":\"era, The current era\"}},\"read_unbonding_period()\":{\"returns\":{\"_0\":\"period, The unbonding period in eras\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"bond_and_stake(address,uint128)\":{\"notice\":\"Stake provided amount on the contract.\"},\"claim_staker(address)\":{\"notice\":\"Claim one era of unclaimed staker rewards for the specifeid contract.         Staker account is derived from the caller address.\"},\"read_current_era()\":{\"notice\":\"Read current era.\"},\"read_unbonding_period()\":{\"notice\":\"Read unbonding period constant.\"},\"unbond_and_unstake(address,uint128)\":{\"notice\":\"Start unbonding process and unstake balance from the contract.\"},\"withdraw_unbonded()\":{\"notice\":\"Withdraw all funds that have completed the unbonding process.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DappsStakingMock.sol\":\"DappsStakingMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/DappsStakingMock.sol\":{\"keccak256\":\"0x873bfff27939fb8a2c47e0eff30ea45f165f8540937bc29424b4588c011202de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2e52c17729d4070a6bac9bd11bb9b98cec1a893f7e4d2b5ee5db39103a4a2ec\",\"dweb:/ipfs/QmZ9qPL3ywdCfK2VLTCkhkJKUyke4L8b69vHhJmL43vQan\"]},\"contracts/interfaces/DappsStaking.sol\":{\"keccak256\":\"0xf8298be9e94a553de178c483d0d8efd2d5d0aafc8e8106b65aa30068d89e05b1\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://631e3d2c7272f26c37e85c67c9d43726f3897fa111c01ce04f57785d2fc2ee24\",\"dweb:/ipfs/QmRyVLS9dqR28Gb1qWnUHGqdvhCjfSQNFnWUdSKkMScRkr\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.4+commit.c7e474f2"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "",
              "type": "uint128"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "bond_and_stake"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim_staker"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "era",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eraDuration",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "read_current_era",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "read_unbonding_period",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_duration",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setEraDuration"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakerRewards",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "start",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unbond_and_unstake"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "unstakes",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "startEra",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "unstakesSum",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw_unbonded"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "read_current_era()": {
            "returns": {
              "_0": "era, The current era"
            }
          },
          "read_unbonding_period()": {
            "returns": {
              "_0": "period, The unbonding period in eras"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "bond_and_stake(address,uint128)": {
            "notice": "Stake provided amount on the contract."
          },
          "claim_staker(address)": {
            "notice": "Claim one era of unclaimed staker rewards for the specifeid contract.         Staker account is derived from the caller address."
          },
          "read_current_era()": {
            "notice": "Read current era."
          },
          "read_unbonding_period()": {
            "notice": "Read unbonding period constant."
          },
          "unbond_and_unstake(address,uint128)": {
            "notice": "Start unbonding process and unstake balance from the contract."
          },
          "withdraw_unbonded()": {
            "notice": "Withdraw all funds that have completed the unbonding process."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/DappsStakingMock.sol": "DappsStakingMock"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/DappsStakingMock.sol": {
        "keccak256": "0x873bfff27939fb8a2c47e0eff30ea45f165f8540937bc29424b4588c011202de",
        "urls": [
          "bzz-raw://b2e52c17729d4070a6bac9bd11bb9b98cec1a893f7e4d2b5ee5db39103a4a2ec",
          "dweb:/ipfs/QmZ9qPL3ywdCfK2VLTCkhkJKUyke4L8b69vHhJmL43vQan"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/DappsStaking.sol": {
        "keccak256": "0xf8298be9e94a553de178c483d0d8efd2d5d0aafc8e8106b65aa30068d89e05b1",
        "urls": [
          "bzz-raw://631e3d2c7272f26c37e85c67c9d43726f3897fa111c01ce04f57785d2fc2ee24",
          "dweb:/ipfs/QmRyVLS9dqR28Gb1qWnUHGqdvhCjfSQNFnWUdSKkMScRkr"
        ],
        "license": "BSD-3-Clause"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/DappsStakingMock.sol",
    "id": 4128,
    "exportedSymbols": {
      "Context": [
        72509
      ],
      "DappsStaking": [
        27703
      ],
      "DappsStakingMock": [
        4127
      ],
      "Ownable": [
        70062
      ]
    },
    "nodeType": "SourceUnit",
    "src": "31:2271:6",
    "nodes": [
      {
        "id": 3921,
        "nodeType": "PragmaDirective",
        "src": "31:22:6",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 3922,
        "nodeType": "ImportDirective",
        "src": "55:39:6",
        "nodes": [],
        "absolutePath": "contracts/interfaces/DappsStaking.sol",
        "file": "./interfaces/DappsStaking.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4128,
        "sourceUnit": 27704,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3923,
        "nodeType": "ImportDirective",
        "src": "95:52:6",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4128,
        "sourceUnit": 70063,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4127,
        "nodeType": "ContractDefinition",
        "src": "149:2152:6",
        "nodes": [
          {
            "id": 3928,
            "nodeType": "VariableDeclaration",
            "src": "192:24:6",
            "nodes": [],
            "constant": false,
            "functionSelector": "143e55e0",
            "mutability": "mutable",
            "name": "era",
            "nameLocation": "207:3:6",
            "scope": 4127,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3926,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "192:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030",
              "id": 3927,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "213:3:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "100"
            },
            "visibility": "public"
          },
          {
            "id": 3930,
            "nodeType": "VariableDeclaration",
            "src": "222:20:6",
            "nodes": [],
            "constant": false,
            "functionSelector": "be9a6555",
            "mutability": "mutable",
            "name": "start",
            "nameLocation": "237:5:6",
            "scope": 4127,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3929,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "222:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3933,
            "nodeType": "VariableDeclaration",
            "src": "248:31:6",
            "nodes": [],
            "constant": false,
            "functionSelector": "4455a38f",
            "mutability": "mutable",
            "name": "eraDuration",
            "nameLocation": "263:11:6",
            "scope": 4127,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3931,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "248:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3630",
              "id": 3932,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "277:2:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_60_by_1",
                "typeString": "int_const 60"
              },
              "value": "60"
            },
            "visibility": "public"
          },
          {
            "id": 3935,
            "nodeType": "VariableDeclaration",
            "src": "285:26:6",
            "nodes": [],
            "constant": false,
            "functionSelector": "0027d970",
            "mutability": "mutable",
            "name": "unstakesSum",
            "nameLocation": "300:11:6",
            "scope": 4127,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3934,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "285:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3937,
            "nodeType": "VariableDeclaration",
            "src": "317:28:6",
            "nodes": [],
            "constant": false,
            "functionSelector": "cfb9cfba",
            "mutability": "mutable",
            "name": "stakerRewards",
            "nameLocation": "332:13:6",
            "scope": 4127,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3936,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "317:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3942,
            "nodeType": "StructDefinition",
            "src": "352:72:6",
            "nodes": [],
            "canonicalName": "DappsStakingMock.Unstake",
            "members": [
              {
                "constant": false,
                "id": 3939,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "385:6:6",
                "nodeType": "VariableDeclaration",
                "scope": 3942,
                "src": "377:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 3938,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "377:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3941,
                "mutability": "mutable",
                "name": "startEra",
                "nameLocation": "409:8:6",
                "nodeType": "VariableDeclaration",
                "scope": 3942,
                "src": "401:16:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 3940,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "401:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Unstake",
            "nameLocation": "359:7:6",
            "scope": 4127,
            "visibility": "public"
          },
          {
            "id": 3946,
            "nodeType": "VariableDeclaration",
            "src": "430:25:6",
            "nodes": [],
            "constant": false,
            "functionSelector": "77441b70",
            "mutability": "mutable",
            "name": "unstakes",
            "nameLocation": "447:8:6",
            "scope": 4127,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Unstake_$3942_storage_$dyn_storage",
              "typeString": "struct DappsStakingMock.Unstake[]"
            },
            "typeName": {
              "baseType": {
                "id": 3944,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3943,
                  "name": "Unstake",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3942,
                  "src": "430:7:6"
                },
                "referencedDeclaration": 3942,
                "src": "430:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Unstake_$3942_storage_ptr",
                  "typeString": "struct DappsStakingMock.Unstake"
                }
              },
              "id": 3945,
              "nodeType": "ArrayTypeName",
              "src": "430:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Unstake_$3942_storage_$dyn_storage_ptr",
                "typeString": "struct DappsStakingMock.Unstake[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3955,
            "nodeType": "FunctionDefinition",
            "src": "462:54:6",
            "nodes": [],
            "body": {
              "id": 3954,
              "nodeType": "Block",
              "src": "476:40:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 3952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3949,
                      "name": "start",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3930,
                      "src": "486:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3950,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "494:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "494:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "486:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3953,
                  "nodeType": "ExpressionStatement",
                  "src": "486:23:6"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 3947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "473:2:6"
            },
            "returnParameters": {
              "id": 3948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "476:0:6"
            },
            "scope": 4127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3964,
            "nodeType": "FunctionDefinition",
            "src": "577:61:6",
            "nodes": [],
            "body": {
              "id": 3963,
              "nodeType": "Block",
              "src": "636:2:6",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 3956,
              "nodeType": "StructuredDocumentation",
              "src": "522:50:6",
              "text": "@notice Stake provided amount on the contract."
            },
            "functionSelector": "52b73e41",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bond_and_stake",
            "nameLocation": "586:14:6",
            "parameters": {
              "id": 3961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3958,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3964,
                  "src": "601:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3957,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "601:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3960,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3964,
                  "src": "610:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 3959,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "610:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "600:18:6"
            },
            "returnParameters": {
              "id": 3962,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "636:0:6"
            },
            "scope": 4127,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4003,
            "nodeType": "FunctionDefinition",
            "src": "723:267:6",
            "nodes": [],
            "body": {
              "id": 4002,
              "nodeType": "Block",
              "src": "785:205:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 3974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3972,
                      "name": "unstakesSum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3935,
                      "src": "795:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 3973,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3969,
                      "src": "810:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "795:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3975,
                  "nodeType": "ExpressionStatement",
                  "src": "795:21:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3976,
                      "name": "unstakesSum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3935,
                      "src": "830:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 3979,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "853:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DappsStakingMock_$4127",
                              "typeString": "contract DappsStakingMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DappsStakingMock_$4127",
                              "typeString": "contract DappsStakingMock"
                            }
                          ],
                          "id": 3978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "845:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3977,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "845:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "845:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 3981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "845:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "830:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4001,
                  "nodeType": "IfStatement",
                  "src": "826:158:6",
                  "trueBody": {
                    "id": 4000,
                    "nodeType": "Block",
                    "src": "868:116:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3987,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3969,
                                  "src": "904:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 3990,
                                        "name": "read_current_era",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4103,
                                        "src": "920:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                          "typeString": "function () view returns (uint256)"
                                        }
                                      },
                                      "id": 3991,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "920:18:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 3989,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "912:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint128_$",
                                      "typeString": "type(uint128)"
                                    },
                                    "typeName": {
                                      "id": 3988,
                                      "name": "uint128",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "912:7:6",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3992,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "912:27:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  },
                                  {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                ],
                                "id": 3986,
                                "name": "Unstake",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3942,
                                "src": "896:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Unstake_$3942_storage_ptr_$",
                                  "typeString": "type(struct DappsStakingMock.Unstake storage pointer)"
                                }
                              },
                              "id": 3993,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "896:44:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Unstake_$3942_memory_ptr",
                                "typeString": "struct DappsStakingMock.Unstake memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Unstake_$3942_memory_ptr",
                                "typeString": "struct DappsStakingMock.Unstake memory"
                              }
                            ],
                            "expression": {
                              "id": 3983,
                              "name": "unstakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3946,
                              "src": "882:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Unstake_$3942_storage_$dyn_storage",
                                "typeString": "struct DappsStakingMock.Unstake storage ref[] storage ref"
                              }
                            },
                            "id": 3985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "882:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Unstake_$3942_storage_$dyn_storage_ptr_$_t_struct$_Unstake_$3942_storage_$returns$__$bound_to$_t_array$_t_struct$_Unstake_$3942_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct DappsStakingMock.Unstake storage ref[] storage pointer,struct DappsStakingMock.Unstake storage ref)"
                            }
                          },
                          "id": 3994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "882:59:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3995,
                        "nodeType": "ExpressionStatement",
                        "src": "882:59:6"
                      },
                      {
                        "expression": {
                          "id": 3998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3996,
                            "name": "stakerRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3937,
                            "src": "955:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 3997,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "972:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "955:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3999,
                        "nodeType": "ExpressionStatement",
                        "src": "955:18:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3965,
              "nodeType": "StructuredDocumentation",
              "src": "644:74:6",
              "text": "@notice Start unbonding process and unstake balance from the contract."
            },
            "functionSelector": "c7841dd2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unbond_and_unstake",
            "nameLocation": "732:18:6",
            "parameters": {
              "id": 3970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3967,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4003,
                  "src": "751:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3966,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "751:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3969,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "768:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 4003,
                  "src": "760:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 3968,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "760:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "750:25:6"
            },
            "returnParameters": {
              "id": 3971,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "785:0:6"
            },
            "scope": 4127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4064,
            "nodeType": "FunctionDefinition",
            "src": "1074:368:6",
            "nodes": [],
            "body": {
              "id": 4063,
              "nodeType": "Block",
              "src": "1112:330:6",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 4061,
                    "nodeType": "Block",
                    "src": "1164:272:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 4032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 4017,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "1182:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 4018,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "1182:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 4019,
                                    "name": "unstakes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3946,
                                    "src": "1200:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Unstake_$3942_storage_$dyn_storage",
                                      "typeString": "struct DappsStakingMock.Unstake storage ref[] storage ref"
                                    }
                                  },
                                  "id": 4021,
                                  "indexExpression": {
                                    "id": 4020,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4008,
                                    "src": "1209:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1200:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Unstake_$3942_storage",
                                    "typeString": "struct DappsStakingMock.Unstake storage ref"
                                  }
                                },
                                "id": 4022,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "startEra",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3941,
                                "src": "1200:20:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "src": "1182:38:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "hexValue": "3130",
                              "id": 4024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1224:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "src": "1182:44:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 4031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 4026,
                                  "name": "unstakes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3946,
                                  "src": "1230:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Unstake_$3942_storage_$dyn_storage",
                                    "typeString": "struct DappsStakingMock.Unstake storage ref[] storage ref"
                                  }
                                },
                                "id": 4028,
                                "indexExpression": {
                                  "id": 4027,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4008,
                                  "src": "1239:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1230:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Unstake_$3942_storage",
                                  "typeString": "struct DappsStakingMock.Unstake storage ref"
                                }
                              },
                              "id": 4029,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3939,
                              "src": "1230:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 4030,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1251:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "1230:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1182:70:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4060,
                        "nodeType": "IfStatement",
                        "src": "1178:248:6",
                        "trueBody": {
                          "id": 4059,
                          "nodeType": "Block",
                          "src": "1254:172:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 4039,
                                        "name": "unstakes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3946,
                                        "src": "1301:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Unstake_$3942_storage_$dyn_storage",
                                          "typeString": "struct DappsStakingMock.Unstake storage ref[] storage ref"
                                        }
                                      },
                                      "id": 4041,
                                      "indexExpression": {
                                        "id": 4040,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4008,
                                        "src": "1310:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1301:11:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Unstake_$3942_storage",
                                        "typeString": "struct DappsStakingMock.Unstake storage ref"
                                      }
                                    },
                                    "id": 4042,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3939,
                                    "src": "1301:18:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 4035,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "1280:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 4036,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "1280:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 4034,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1272:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                        "typeString": "type(address payable)"
                                      },
                                      "typeName": {
                                        "id": 4033,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1272:8:6",
                                        "stateMutability": "payable",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 4037,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1272:19:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 4038,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "1272:28:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 4043,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1272:48:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4044,
                              "nodeType": "ExpressionStatement",
                              "src": "1272:48:6"
                            },
                            {
                              "expression": {
                                "id": 4050,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 4045,
                                  "name": "unstakesSum",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3935,
                                  "src": "1338:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 4046,
                                      "name": "unstakes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3946,
                                      "src": "1353:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Unstake_$3942_storage_$dyn_storage",
                                        "typeString": "struct DappsStakingMock.Unstake storage ref[] storage ref"
                                      }
                                    },
                                    "id": 4048,
                                    "indexExpression": {
                                      "id": 4047,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4008,
                                      "src": "1362:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1353:11:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Unstake_$3942_storage",
                                      "typeString": "struct DappsStakingMock.Unstake storage ref"
                                    }
                                  },
                                  "id": 4049,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3939,
                                  "src": "1353:18:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "src": "1338:33:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4051,
                              "nodeType": "ExpressionStatement",
                              "src": "1338:33:6"
                            },
                            {
                              "expression": {
                                "id": 4057,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 4052,
                                      "name": "unstakes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3946,
                                      "src": "1389:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Unstake_$3942_storage_$dyn_storage",
                                        "typeString": "struct DappsStakingMock.Unstake storage ref[] storage ref"
                                      }
                                    },
                                    "id": 4054,
                                    "indexExpression": {
                                      "id": 4053,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4008,
                                      "src": "1398:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1389:11:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Unstake_$3942_storage",
                                      "typeString": "struct DappsStakingMock.Unstake storage ref"
                                    }
                                  },
                                  "id": 4055,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3939,
                                  "src": "1389:18:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 4056,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1410:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "1389:22:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "id": 4058,
                              "nodeType": "ExpressionStatement",
                              "src": "1389:22:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4010,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4008,
                      "src": "1138:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 4011,
                        "name": "unstakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3946,
                        "src": "1142:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Unstake_$3942_storage_$dyn_storage",
                          "typeString": "struct DappsStakingMock.Unstake storage ref[] storage ref"
                        }
                      },
                      "id": 4012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1142:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1138:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4062,
                  "initializationExpression": {
                    "assignments": [
                      4008
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 4008,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1135:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 4062,
                        "src": "1127:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4007,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1127:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 4009,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1127:9:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 4015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1159:3:6",
                      "subExpression": {
                        "id": 4014,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4008,
                        "src": "1159:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4016,
                    "nodeType": "ExpressionStatement",
                    "src": "1159:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "1122:314:6"
                }
              ]
            },
            "documentation": {
              "id": 4004,
              "nodeType": "StructuredDocumentation",
              "src": "996:73:6",
              "text": "@notice Withdraw all funds that have completed the unbonding process."
            },
            "functionSelector": "77a0fe02",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw_unbonded",
            "nameLocation": "1083:17:6",
            "parameters": {
              "id": 4005,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1100:2:6"
            },
            "returnParameters": {
              "id": 4006,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1112:0:6"
            },
            "scope": 4127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4086,
            "nodeType": "FunctionDefinition",
            "src": "1601:137:6",
            "nodes": [],
            "body": {
              "id": 4085,
              "nodeType": "Block",
              "src": "1651:87:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4078,
                        "name": "stakerRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3937,
                        "src": "1690:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 4074,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1669:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1669:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1661:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 4072,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1661:8:6",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1661:19:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 4077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1661:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1661:43:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4080,
                  "nodeType": "ExpressionStatement",
                  "src": "1661:43:6"
                },
                {
                  "expression": {
                    "id": 4083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4081,
                      "name": "stakerRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3937,
                      "src": "1714:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 4082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1730:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1714:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4084,
                  "nodeType": "ExpressionStatement",
                  "src": "1714:17:6"
                }
              ]
            },
            "documentation": {
              "id": 4065,
              "nodeType": "StructuredDocumentation",
              "src": "1448:148:6",
              "text": "@notice Claim one era of unclaimed staker rewards for the specifeid contract.\n         Staker account is derived from the caller address."
            },
            "functionSelector": "a0b9d8be",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4070,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4069,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 69981,
                  "src": "1641:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1641:9:6"
              }
            ],
            "name": "claim_staker",
            "nameLocation": "1610:12:6",
            "parameters": {
              "id": 4068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4067,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4086,
                  "src": "1623:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4066,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1623:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1622:9:6"
            },
            "returnParameters": {
              "id": 4071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1651:0:6"
            },
            "scope": 4127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4103,
            "nodeType": "FunctionDefinition",
            "src": "1815:155:6",
            "nodes": [],
            "body": {
              "id": 4102,
              "nodeType": "Block",
              "src": "1873:97:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4092,
                      "name": "era",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3928,
                      "src": "1890:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 4093,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "1897:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 4094,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "1897:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 4095,
                              "name": "start",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3930,
                              "src": "1915:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1897:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 4097,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1896:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 4098,
                        "name": "eraDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3933,
                        "src": "1924:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1896:39:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1890:45:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4091,
                  "id": 4101,
                  "nodeType": "Return",
                  "src": "1883:52:6"
                }
              ]
            },
            "documentation": {
              "id": 4087,
              "nodeType": "StructuredDocumentation",
              "src": "1744:66:6",
              "text": "@notice Read current era.\n @return era, The current era"
            },
            "functionSelector": "e608d80b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "read_current_era",
            "nameLocation": "1824:16:6",
            "parameters": {
              "id": 4088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1840:2:6"
            },
            "returnParameters": {
              "id": 4091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4090,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4103,
                  "src": "1864:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4089,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1864:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1863:9:6"
            },
            "scope": 4127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4112,
            "nodeType": "FunctionDefinition",
            "src": "2077:91:6",
            "nodes": [],
            "body": {
              "id": 4111,
              "nodeType": "Block",
              "src": "2142:26:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "3130",
                    "id": 4109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2159:2:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10_by_1",
                      "typeString": "int_const 10"
                    },
                    "value": "10"
                  },
                  "functionReturnParameters": 4108,
                  "id": 4110,
                  "nodeType": "Return",
                  "src": "2152:9:6"
                }
              ]
            },
            "documentation": {
              "id": 4104,
              "nodeType": "StructuredDocumentation",
              "src": "1976:96:6",
              "text": "@notice Read unbonding period constant.\n @return period, The unbonding period in eras"
            },
            "functionSelector": "db62b201",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "read_unbonding_period",
            "nameLocation": "2086:21:6",
            "parameters": {
              "id": 4105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2107:2:6"
            },
            "returnParameters": {
              "id": 4108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4107,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4112,
                  "src": "2133:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2133:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2132:9:6"
            },
            "scope": 4127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4122,
            "nodeType": "FunctionDefinition",
            "src": "2174:90:6",
            "nodes": [],
            "body": {
              "id": 4121,
              "nodeType": "Block",
              "src": "2224:40:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 4119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4117,
                      "name": "eraDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3933,
                      "src": "2234:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4118,
                      "name": "_duration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4114,
                      "src": "2248:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2234:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4120,
                  "nodeType": "ExpressionStatement",
                  "src": "2234:23:6"
                }
              ]
            },
            "functionSelector": "d97c94ac",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setEraDuration",
            "nameLocation": "2183:14:6",
            "parameters": {
              "id": 4115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4114,
                  "mutability": "mutable",
                  "name": "_duration",
                  "nameLocation": "2206:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 4122,
                  "src": "2198:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2198:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2197:19:6"
            },
            "returnParameters": {
              "id": 4116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2224:0:6"
            },
            "scope": 4127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4126,
            "nodeType": "FunctionDefinition",
            "src": "2270:29:6",
            "nodes": [],
            "body": {
              "id": 4125,
              "nodeType": "Block",
              "src": "2297:2:6",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 4123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2277:2:6"
            },
            "returnParameters": {
              "id": 4124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2297:0:6"
            },
            "scope": 4127,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3924,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 70062,
              "src": "178:7:6"
            },
            "id": 3925,
            "nodeType": "InheritanceSpecifier",
            "src": "178:7:6"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          4127,
          70062,
          72509
        ],
        "name": "DappsStakingMock",
        "nameLocation": "158:16:6",
        "scope": 4128,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 6
}