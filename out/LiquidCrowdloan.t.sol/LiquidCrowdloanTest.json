{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "aastr",
      "outputs": [
        {
          "internalType": "contract MockERC20Upgradeable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "algm",
      "outputs": [
        {
          "internalType": "contract MockERC20Upgradeable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cl",
      "outputs": [
        {
          "internalType": "contract LiquidCrowdloan",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dappsStaking",
      "outputs": [
        {
          "internalType": "contract MockDappsStaking",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testClaimDappStakingRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testClaimRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCloseCrowdloan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testGetStakers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testGlobalUnstakeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testInitialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testUnstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "user",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "user2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "user3",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vesting",
      "outputs": [
        {
          "internalType": "contract ALGMVesting",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b5061bd13806200003e6000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806385226c8111610104578063b9edb1af116100a2578063e3ee1d5411610071578063e3ee1d5414610343578063f82934031461034b578063fa7626d41461035e578063fcd163d51461036b57600080fd5b8063b9edb1af14610308578063ba414fa61461031b578063d509b16c14610333578063e20c9f711461033b57600080fd5b8063916a17c6116100de578063916a17c6146102e8578063993831b6146102f0578063afe571a5146102f8578063b5508aa91461030057600080fd5b806385226c81146102b857806385f8f753146102cd5780638da5cb5b146102d557600080fd5b80634f8632ba11610171578063703ce4af1161014b578063703ce4af1461028257806377734a66146102955780637e805c43146102a8578063810fa039146102b057600080fd5b80634f8632ba1461025257806358b4d79e1461026557806366d9a9a01461026d57600080fd5b80633a1143da116101ad5780633a1143da146102275780633e5e3c231461022f5780633f7286f41461023757806344c63eec1461023f57600080fd5b80630a9254e4146101d45780631ed7831c146101de5780632e415702146101fc575b600080fd5b6101dc61037e565b005b6101e6610c90565b6040516101f39190614c5b565b60405180910390f35b60235461020f906001600160a01b031681565b6040516001600160a01b0390911681526020016101f3565b6101dc610cf2565b6101e661117e565b6101e66111de565b60205461020f906001600160a01b031681565b601b5461020f906001600160a01b031681565b6101dc61123e565b6102756119af565b6040516101f39190614d09565b601d5461020f906001600160a01b031681565b60225461020f906001600160a01b031681565b6101dc611a9e565b6101dc611da0565b6102c0612772565b6040516101f39190614ca8565b6101dc612842565b601e5461020f906001600160a01b031681565b610275612c37565b6101dc612d1d565b6101dc612e86565b6102c0613773565b601c5461020f906001600160a01b031681565b610323613843565b60405190151581526020016101f3565b6101dc613962565b6101e6613eb1565b6101dc613f11565b60215461020f906001600160a01b031681565b6000546103239060ff1681565b601f5461020f906001600160a01b031681565b6040516001625e79b760e01b031981526001600482015260008051602061bc9e8339815191529063ffa186499060240160206040518083038186803b1580156103c657600080fd5b505afa1580156103da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fe9190614a95565b601b80546001600160a01b0319166001600160a01b03929092169190911790556040516001625e79b760e01b031981526002600482015260008051602061bc9e8339815191529063ffa186499060240160206040518083038186803b15801561046657600080fd5b505afa15801561047a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049e9190614a95565b601c80546001600160a01b0319166001600160a01b03929092169190911790556040516001625e79b760e01b0319815260048082015260008051602061bc9e8339815191529063ffa186499060240160206040518083038186803b15801561050557600080fd5b505afa158015610519573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053d9190614a95565b601d80546001600160a01b0319166001600160a01b03929092169190911790556040516001625e79b760e01b031981526003600482015260008051602061bc9e8339815191529063ffa186499060240160206040518083038186803b1580156105a557600080fd5b505afa1580156105b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105dd9190614a95565b601e80546001600160a01b0319166001600160a01b039290921691821790556040516303223eab60e11b8152600481019190915260008051602061bc9e833981519152906306447d5690602401600060405180830381600087803b15801561064457600080fd5b505af1158015610658573d6000803e3d6000fd5b5050505060405161066890614a4a565b604051809103906000f080158015610684573d6000803e3d6000fd5b50602380546001600160a01b03929092166001600160a01b03199092168217905560405163266c45bb60e11b8152634cd88b7690610700906004016040808252600b908201526a20b633b2b6903a37b5b2b760a91b606082015260806020820181905260049082015263414c474d60e01b60a082015260c00190565b600060405180830381600087803b15801561071a57600080fd5b505af115801561072e573d6000803e3d6000fd5b5050505060405161073e90614a4a565b604051809103906000f08015801561075a573d6000803e3d6000fd5b50602280546001600160a01b0319166001600160a01b039290921691821790556040805163266c45bb60e11b81526004810191909152600b60448201526a30a0a9aa29103a37b5b2b760a91b606482015260806024820152600560848201526430a0a9aa2960d91b60a4820152634cd88b769060c401600060405180830381600087803b1580156107ea57600080fd5b505af11580156107fe573d6000803e3d6000fd5b5050505060405161080e90614a57565b604051809103906000f08015801561082a573d6000803e3d6000fd5b50602180546001600160a01b0319166001600160a01b039290921691909117905560405161085790614a64565b604051809103906000f080158015610873573d6000803e3d6000fd5b50602080546001600160a01b0319166001600160a01b0392831690811790915560235460405163189acdbd60e31b8152921660048301529063c4d66de890602401600060405180830381600087803b1580156108ce57600080fd5b505af11580156108e2573d6000803e3d6000fd5b505050506040516108f290614a71565b604051809103906000f08015801561090e573d6000803e3d6000fd5b50601f80546001600160a01b0319166001600160a01b03928316908117909155602054602254602354602154604051630a2ca2bd60e11b8152938616600485015260016024850152918516604484015284166064830152909216608483015290631459457a9060a401600060405180830381600087803b15801561099157600080fd5b505af11580156109a5573d6000803e3d6000fd5b50506023546020546040516340c10f1960e01b81526001600160a01b0391821660048201526ec097ce7bc90715b34b9f10000000006024820152911692506340c10f199150604401602060405180830381600087803b158015610a0757600080fd5b505af1158015610a1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3f9190614b7d565b50602054601f546040516316830bbd60e11b81526001600160a01b039182166004820152911690632d06177a90602401600060405180830381600087803b158015610a8957600080fd5b505af1158015610a9d573d6000803e3d6000fd5b5050505060008051602061bcbe83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610aed57600080fd5b505af1158015610b01573d6000803e3d6000fd5b5050601b5460405163c88a5e6d60e01b81526001600160a01b0390911660048201526f29c30f1029939b146664242d97d9f64960361b602482015260008051602061bc9e833981519152925063c88a5e6d9150604401600060405180830381600087803b158015610b7157600080fd5b505af1158015610b85573d6000803e3d6000fd5b5050601c5460405163c88a5e6d60e01b81526001600160a01b0390911660048201526f29c30f1029939b146664242d97d9f64960361b602482015260008051602061bc9e833981519152925063c88a5e6d9150604401600060405180830381600087803b158015610bf557600080fd5b505af1158015610c09573d6000803e3d6000fd5b505060215460405163c88a5e6d60e01b81526001600160a01b0390911660048201526ec097ce7bc90715b34b9f1000000000602482015260008051602061bc9e833981519152925063c88a5e6d91506044015b600060405180830381600087803b158015610c7657600080fd5b505af1158015610c8a573d6000803e3d6000fd5b50505050565b6060600d805480602002602001604051908101604052809291908181526020018280548015610ce857602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610cca575b5050505050905090565b601b546040516303223eab60e11b81526001600160a01b03909116600482015260008051602061bc9e833981519152906306447d5690602401600060405180830381600087803b158015610d4557600080fd5b505af1158015610d59573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b0316633a4b66f1683635c9adc5dea000006040518263ffffffff1660e01b81526004016000604051808303818588803b158015610db657600080fd5b505af1158015610dca573d6000803e3d6000fd5b505060405163f28dceb360e01b815260206004820152600e60248201526d2732b2b21036b7b9329020a9aa2960911b604482015260008051602061bc9e833981519152935063f28dceb392506064019050600060405180830381600087803b158015610e3557600080fd5b505af1158015610e49573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b0316633a4b66f1670de0b6b3a76400006040518263ffffffff1660e01b81526004016000604051808303818588803b158015610ea557600080fd5b505af1158015610eb9573d6000803e3d6000fd5b505060405163f28dceb360e01b8152602060048201526011602482015270151bdbc81b185c99d94819195c1bdcda5d607a1b604482015260008051602061bc9e833981519152935063f28dceb392506064019050600060405180830381600087803b158015610f2757600080fd5b505af1158015610f3b573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b0316633a4b66f16a52b7d2dcc80cd2e40000006040518263ffffffff1660e01b81526004016000604051808303818588803b158015610f9a57600080fd5b505af1158015610fae573d6000803e3d6000fd5b505050505060008051602061bcbe83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610fff57600080fd5b505af1158015611013573d6000803e3d6000fd5b5050601e5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602061bc9e833981519152925063ca669fa79150602401600060405180830381600087803b15801561106a57600080fd5b505af115801561107e573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b0316636adb930c6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156110d257600080fd5b505af11580156110e6573d6000803e3d6000fd5b5050602254601b546040516370a0823160e01b81526001600160a01b03918216600482015261117c9450911691506370a082319060240160206040518083038186803b15801561113557600080fd5b505afa158015611149573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116d9190614b9d565b683635c9adc5dea000006145fa565b565b6060600f805480602002602001604051908101604052809291908181526020018280548015610ce8576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610cca575050505050905090565b6060600e805480602002602001604051908101604052809291908181526020018280548015610ce8576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610cca575050505050905090565b601b5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602061bc9e8339815191529063ca669fa790602401600060405180830381600087803b15801561129157600080fd5b505af11580156112a5573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b0316633a4b66f1683635c9adc5dea000006040518263ffffffff1660e01b81526004016000604051808303818588803b15801561130257600080fd5b505af1158015611316573d6000803e3d6000fd5b5050601c5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602061bc9e833981519152935063ca669fa792506024019050600060405180830381600087803b15801561136f57600080fd5b505af1158015611383573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b0316633a4b66f1683635c9adc5dea000006040518263ffffffff1660e01b81526004016000604051808303818588803b1580156113e057600080fd5b505af11580156113f4573d6000803e3d6000fd5b5050601e5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602061bc9e833981519152935063ca669fa792506024019050600060405180830381600087803b15801561144d57600080fd5b505af1158015611461573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b0316636adb930c6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156114b557600080fd5b505af11580156114c9573d6000803e3d6000fd5b5050601b546040516303223eab60e11b81526001600160a01b03909116600482015260008051602061bc9e83398151915292506306447d569150602401600060405180830381600087803b15801561152057600080fd5b505af1158015611534573d6000803e3d6000fd5b50506040516372eb5f8160e11b81526224ea01600482015260008051602061bc9e833981519152925063e5d6bf029150602401600060405180830381600087803b15801561158157600080fd5b505af1158015611595573d6000803e3d6000fd5b5050601f54601b54604051630276ca4d60e61b81526001600160a01b0391821660048201526000945091169150639db293409060240160206040518083038186803b1580156115e357600080fd5b505afa1580156115f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161b9190614b9d565b9050601f60009054906101000a90046001600160a01b03166001600160a01b031663372500ab6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561166d57600080fd5b505af1158015611681573d6000803e3d6000fd5b50505050600060026006601f60009054906101000a90046001600160a01b03166001600160a01b0316632941bc296040518163ffffffff1660e01b815260040160206040518083038186803b1580156116d957600080fd5b505afa1580156116ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117119190614b9d565b61171b9190614f1b565b6117259190614f1b565b905061173181836145fa565b602354601b546040516370a0823160e01b81526001600160a01b0391821660048201526117bc9291909116906370a082319060240160206040518083038186803b15801561177e57600080fd5b505afa158015611792573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117b69190614b9d565b826145fa565b6040516372eb5f8160e11b815262dd7c01600482015260008051602061bc9e8339815191529063e5d6bf0290602401600060405180830381600087803b15801561180557600080fd5b505af1158015611819573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b031663372500ab6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561186d57600080fd5b505af1158015611881573d6000803e3d6000fd5b5050505060006002601f60009054906101000a90046001600160a01b03166001600160a01b0316632941bc296040518163ffffffff1660e01b815260040160206040518083038186803b1580156118d757600080fd5b505afa1580156118eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190f9190614b9d565b6119199190614f1b565b602354601b546040516370a0823160e01b81526001600160a01b0391821660048201529293506119aa929116906370a082319060240160206040518083038186803b15801561196757600080fd5b505afa15801561197b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061199f9190614b9d565b6117b6906001614ef7565b505050565b60606012805480602002602001604051908101604052809291908181526020016000905b82821015611a955760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015611a7d57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411611a3f5790505b505050505081525050815260200190600101906119d3565b50505050905090565b601b5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602061bc9e8339815191529063ca669fa790602401600060405180830381600087803b158015611af157600080fd5b505af1158015611b05573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b0316633a4b66f1683635c9adc5dea000006040518263ffffffff1660e01b81526004016000604051808303818588803b158015611b6257600080fd5b505af1158015611b76573d6000803e3d6000fd5b5050601c5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602061bc9e833981519152935063ca669fa792506024019050600060405180830381600087803b158015611bcf57600080fd5b505af1158015611be3573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b0316633a4b66f1683635c9adc5dea000006040518263ffffffff1660e01b81526004016000604051808303818588803b158015611c4057600080fd5b505af1158015611c54573d6000803e3d6000fd5b506000935060029250611c65915050565b604051908082528060200260200182016040528015611c8e578160200160208202803683370190505b509050601f60009054906101000a90046001600160a01b03166001600160a01b03166343352d616040518163ffffffff1660e01b815260040160006040518083038186803b158015611cdf57600080fd5b505afa158015611cf3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611d1b9190810190614ab6565b9050611d5d81600081518110611d4157634e487b7160e01b600052603260045260246000fd5b6020908102919091010151601b546001600160a01b03166146e9565b611d9d81600181518110611d8157634e487b7160e01b600052603260045260246000fd5b6020908102919091010151601c546001600160a01b03166146e9565b50565b60405163f28dceb360e01b815260206004820152600f60248201526e4e6f20616e7920756e7374616b657360881b604482015260008051602061bc9e8339815191529063f28dceb390606401600060405180830381600087803b158015611e0657600080fd5b505af1158015611e1a573d6000803e3d6000fd5b5050601e5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602061bc9e833981519152925063ca669fa79150602401600060405180830381600087803b158015611e7157600080fd5b505af1158015611e85573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b03166368b0216e6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611ed957600080fd5b505af1158015611eed573d6000803e3d6000fd5b5050601b5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602061bc9e833981519152925063ca669fa79150602401600060405180830381600087803b158015611f4457600080fd5b505af1158015611f58573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b0316633a4b66f1683635c9adc5dea000006040518263ffffffff1660e01b81526004016000604051808303818588803b158015611fb557600080fd5b505af1158015611fc9573d6000803e3d6000fd5b5050601c5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602061bc9e833981519152935063ca669fa792506024019050600060405180830381600087803b15801561202257600080fd5b505af1158015612036573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b0316633a4b66f1683635c9adc5dea000006040518263ffffffff1660e01b81526004016000604051808303818588803b15801561209357600080fd5b505af11580156120a7573d6000803e3d6000fd5b5050601e5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602061bc9e833981519152935063ca669fa792506024019050600060405180830381600087803b15801561210057600080fd5b505af1158015612114573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b0316636adb930c6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561216857600080fd5b505af115801561217c573d6000803e3d6000fd5b50506040516372eb5f8160e11b815262dd7c01600482015260008051602061bc9e833981519152925063e5d6bf029150602401600060405180830381600087803b1580156121c957600080fd5b505af11580156121dd573d6000803e3d6000fd5b5050601b5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602061bc9e833981519152925063ca669fa79150602401600060405180830381600087803b15801561223457600080fd5b505af1158015612248573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b0316632def66206040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561229c57600080fd5b505af11580156122b0573d6000803e3d6000fd5b5050601e5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602061bc9e833981519152925063ca669fa79150602401600060405180830381600087803b15801561230757600080fd5b505af115801561231b573d6000803e3d6000fd5b505060405163f28dceb360e01b815260206004820152600f60248201526e4e6f20616e7920756e7374616b657360881b604482015260008051602061bc9e833981519152925063f28dceb39150606401600060405180830381600087803b15801561238557600080fd5b505af1158015612399573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b03166368b0216e6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156123ed57600080fd5b505af1158015612401573d6000803e3d6000fd5b5050601c5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602061bc9e833981519152925063ca669fa79150602401600060405180830381600087803b15801561245857600080fd5b505af115801561246c573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b0316632def66206040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156124c057600080fd5b505af11580156124d4573d6000803e3d6000fd5b5050601e5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602061bc9e833981519152925063ca669fa79150602401600060405180830381600087803b15801561252b57600080fd5b505af115801561253f573d6000803e3d6000fd5b505060405163f28dceb360e01b815260206004820152603660248201527f54686572652077617320616c726561647920676c6f62616c556e7374616b6520604482015275696e207468697320706572696f64206f662074696d6560501b606482015260008051602061bc9e833981519152925063f28dceb39150608401600060405180830381600087803b1580156125d657600080fd5b505af11580156125ea573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b03166368b0216e6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561263e57600080fd5b505af1158015612652573d6000803e3d6000fd5b50506040516372eb5f8160e11b815262f14280600482015260008051602061bc9e833981519152925063e5d6bf029150602401600060405180830381600087803b15801561269f57600080fd5b505af11580156126b3573d6000803e3d6000fd5b5050601e5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602061bc9e833981519152925063ca669fa79150602401600060405180830381600087803b15801561270a57600080fd5b505af115801561271e573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b03166368b0216e6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610c7657600080fd5b60606011805480602002602001604051908101604052809291908181526020016000905b82821015611a955783829060005260206000200180546127b590614f67565b80601f01602080910402602001604051908101604052809291908181526020018280546127e190614f67565b801561282e5780601f106128035761010080835404028352916020019161282e565b820191906000526020600020905b81548152906001019060200180831161281157829003601f168201915b505050505081526020019060010190612796565b601b5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602061bc9e8339815191529063ca669fa790602401600060405180830381600087803b15801561289557600080fd5b505af11580156128a9573d6000803e3d6000fd5b505060405163f28dceb360e01b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260008051602061bc9e833981519152925063f28dceb39150606401600060405180830381600087803b15801561292157600080fd5b505af1158015612935573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b0316636adb930c6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561298957600080fd5b505af115801561299d573d6000803e3d6000fd5b5050601e546040516303223eab60e11b81526001600160a01b03909116600482015260008051602061bc9e83398151915292506306447d569150602401600060405180830381600087803b1580156129f457600080fd5b505af1158015612a08573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b0316636adb930c6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015612a5c57600080fd5b505af1158015612a70573d6000803e3d6000fd5b50505050612b04601f60009054906101000a90046001600160a01b03166001600160a01b031663597e1fb56040518163ffffffff1660e01b815260040160206040518083038186803b158015612ac557600080fd5b505afa158015612ad9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612afd9190614b7d565b60016147dd565b60405163f28dceb360e01b815260206004820152601060248201526f10dc9bddd91b1bd85b8818db1bdcd95960821b604482015260008051602061bc9e8339815191529063f28dceb390606401600060405180830381600087803b158015612b6b57600080fd5b505af1158015612b7f573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b0316636adb930c6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015612bd357600080fd5b505af1158015612be7573d6000803e3d6000fd5b5050505060008051602061bcbe83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610c7657600080fd5b60606013805480602002602001604051908101604052809291908181526020016000905b82821015611a955760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015612d0557602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411612cc75790505b50505050508152505081526020019060010190612c5b565b601b5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602061bc9e8339815191529063ca669fa790602401600060405180830381600087803b158015612d7057600080fd5b505af1158015612d84573d6000803e3d6000fd5b505060405163f28dceb360e01b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260008051602061bc9e833981519152925063f28dceb39150608401600060405180830381600087803b158015612e1357600080fd5b505af1158015612e27573d6000803e3d6000fd5b5050601f54602054602254602354602154604051630a2ca2bd60e11b81526001600160a01b03948516600482015260016024820152928416604484015290831660648301528216608482015291169250631459457a915060a401610c5c565b601b546040516303223eab60e11b81526001600160a01b03909116600482015260008051602061bc9e833981519152906306447d5690602401600060405180830381600087803b158015612ed957600080fd5b505af1158015612eed573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b0316633a4b66f1683635c9adc5dea000006040518263ffffffff1660e01b81526004016000604051808303818588803b158015612f4a57600080fd5b505af1158015612f5e573d6000803e3d6000fd5b505060405163f28dceb360e01b815260206004820152601460248201527321b937bbb23637b0b71039ba34b6361037b832b760611b604482015260008051602061bc9e833981519152935063f28dceb392506064019050600060405180830381600087803b158015612fcf57600080fd5b505af1158015612fe3573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b0316632def66206040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561303757600080fd5b505af115801561304b573d6000803e3d6000fd5b5050505060008051602061bcbe83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561309b57600080fd5b505af11580156130af573d6000803e3d6000fd5b5050601e5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602061bc9e833981519152925063ca669fa79150602401600060405180830381600087803b15801561310657600080fd5b505af115801561311a573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b0316636adb930c6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561316e57600080fd5b505af1158015613182573d6000803e3d6000fd5b5050601b5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602061bc9e833981519152925063ca669fa79150602401600060405180830381600087803b1580156131d957600080fd5b505af11580156131ed573d6000803e3d6000fd5b505060405163f28dceb360e01b815260206004820152602160248201527f4c6f636b696e6720706572696f6420686173206e6f74207965742070617373656044820152601960fa1b606482015260008051602061bc9e833981519152925063f28dceb39150608401600060405180830381600087803b15801561326f57600080fd5b505af1158015613283573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b0316632def66206040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156132d757600080fd5b505af11580156132eb573d6000803e3d6000fd5b50506040516372eb5f8160e11b81526301026600600482015260008051602061bc9e833981519152925063e5d6bf029150602401600060405180830381600087803b15801561333957600080fd5b505af115801561334d573d6000803e3d6000fd5b5050601d5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602061bc9e833981519152925063ca669fa79150602401600060405180830381600087803b1580156133a457600080fd5b505af11580156133b8573d6000803e3d6000fd5b505060405163f28dceb360e01b81526020600482015260156024820152742ab9b2b9103430b99037379030b73c9030a0a9aa2960591b604482015260008051602061bc9e833981519152925063f28dceb39150606401600060405180830381600087803b15801561342857600080fd5b505af115801561343c573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b0316632def66206040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561349057600080fd5b505af11580156134a4573d6000803e3d6000fd5b5050601b546040516303223eab60e11b81526001600160a01b03909116600482015260008051602061bc9e83398151915292506306447d569150602401600060405180830381600087803b1580156134fb57600080fd5b505af115801561350f573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b031663372500ab6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561356357600080fd5b505af1158015613577573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b0316632def66206040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156135cb57600080fd5b505af11580156135df573d6000803e3d6000fd5b5050505060008051602061bcbe83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561362f57600080fd5b505af1158015613643573d6000803e3d6000fd5b5050602254601b546040516370a0823160e01b81526001600160a01b0391821660048201526136d19450911691506370a082319060240160206040518083038186803b15801561369257600080fd5b505afa1580156136a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136ca9190614b9d565b60006145fa565b601f54601b5460405163422b107760e01b81526001600160a01b03918216600482015260006024820181905292919091169063422b10779060440160606040518083038186803b15801561372457600080fd5b505afa158015613738573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061375c9190614bb5565b50509050611d9d81683635c9adc5dea000006145fa565b60606010805480602002602001604051908101604052809291908181526020016000905b82821015611a955783829060005260206000200180546137b690614f67565b80601f01602080910402602001604051908101604052809291908181526020018280546137e290614f67565b801561382f5780601f106138045761010080835404028352916020019161382f565b820191906000526020600020905b81548152906001019060200180831161381257829003601f168201915b505050505081526020019060010190613797565b60008054610100900460ff16156138635750600054610100900460ff1690565b600060008051602061bc9e8339815191523b1561395d576040805160008051602061bc9e833981519152602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916138e5917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001614c0e565b60408051601f19818403018152908290526138ff91614c3f565b6000604051808303816000865af19150503d806000811461393c576040519150601f19603f3d011682016040523d82523d6000602084013e613941565b606091505b50915050808060200190518101906139599190614b7d565b9150505b919050565b601b5460405163ca669fa760e01b81526001600160a01b03909116600482015260009060008051602061bc9e8339815191529063ca669fa790602401600060405180830381600087803b1580156139b857600080fd5b505af11580156139cc573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b0316633a4b66f1683635c9adc5dea000006040518263ffffffff1660e01b81526004016000604051808303818588803b158015613a2957600080fd5b505af1158015613a3d573d6000803e3d6000fd5b5050601f5460405163c88a5e6d60e01b81526001600160a01b0390911660048201526000602482015260008051602061bc9e833981519152935063c88a5e6d92506044019050600060405180830381600087803b158015613a9d57600080fd5b505af1158015613ab1573d6000803e3d6000fd5b5050601e5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602061bc9e833981519152925063ca669fa79150602401600060405180830381600087803b158015613b0857600080fd5b505af1158015613b1c573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b0316636adb930c6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015613b7057600080fd5b505af1158015613b84573d6000803e3d6000fd5b50506040516372eb5f8160e11b815262dd7c0160048201819052935060008051602061bc9e833981519152925063e5d6bf029150602401600060405180830381600087803b158015613bd557600080fd5b505af1158015613be9573d6000803e3d6000fd5b5050601b546040516303223eab60e11b81526001600160a01b03909116600482015260008051602061bc9e83398151915292506306447d569150602401600060405180830381600087803b158015613c4057600080fd5b505af1158015613c54573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b0316632def66206040518163ffffffff1660e01b8152600401600060405180830381600087803b158015613ca857600080fd5b505af1158015613cbc573d6000803e3d6000fd5b505060405163f28dceb360e01b815260206004820152601760248201527f4e6f7420656e6f75676820657261732070617373656421000000000000000000604482015260008051602061bc9e833981519152925063f28dceb39150606401600060405180830381600087803b158015613d3457600080fd5b505af1158015613d48573d6000803e3d6000fd5b5050601f54604051632e1a7d4d60e01b8152600060048201526001600160a01b039091169250632e1a7d4d9150602401600060405180830381600087803b158015613d9257600080fd5b505af1158015613da6573d6000803e3d6000fd5b5060008051602061bc9e833981519152925063e5d6bf029150613dce9050836213c680614ef7565b6040518263ffffffff1660e01b8152600401613dec91815260200190565b600060405180830381600087803b158015613e0657600080fd5b505af1158015613e1a573d6000803e3d6000fd5b5050601b54601f54604051632e1a7d4d60e01b8152600060048201526001600160a01b0392831631945091169150632e1a7d4d90602401600060405180830381600087803b158015613e6b57600080fd5b505af1158015613e7f573d6000803e3d6000fd5b5050601b54613ead92506001600160a01b0316319050613ea883683635c9adc5dea00000614ef7565b6145fa565b5050565b6060600c805480602002602001604051908101604052809291908181526020018280548015610ce8576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610cca575050505050905090565b601b5460405163ca669fa760e01b81526001600160a01b03909116600482015260009060008051602061bc9e8339815191529063ca669fa790602401600060405180830381600087803b158015613f6757600080fd5b505af1158015613f7b573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b0316633a4b66f1683635c9adc5dea000006040518263ffffffff1660e01b81526004016000604051808303818588803b158015613fd857600080fd5b505af1158015613fec573d6000803e3d6000fd5b5050601f5460405163c88a5e6d60e01b81526001600160a01b0390911660048201526000602482015260008051602061bc9e833981519152935063c88a5e6d92506044019050600060405180830381600087803b15801561404c57600080fd5b505af1158015614060573d6000803e3d6000fd5b5050601e5460405163ca669fa760e01b81526001600160a01b03909116600482015260008051602061bc9e833981519152925063ca669fa79150602401600060405180830381600087803b1580156140b757600080fd5b505af11580156140cb573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b0316636adb930c6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561411f57600080fd5b505af1158015614133573d6000803e3d6000fd5b50506040516372eb5f8160e11b815262dd7c0160048201819052935060008051602061bc9e833981519152925063e5d6bf029150602401600060405180830381600087803b15801561418457600080fd5b505af1158015614198573d6000803e3d6000fd5b50506040516301f7b4f360e41b8152601e600482015260008051602061bc9e8339815191529250631f7b4f309150602401600060405180830381600087803b1580156141e357600080fd5b505af11580156141f7573d6000803e3d6000fd5b5050601e546040516303223eab60e11b81526001600160a01b03909116600482015260008051602061bc9e83398151915292506306447d569150602401600060405180830381600087803b15801561424e57600080fd5b505af1158015614262573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b031663ea87e3ff6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156142b657600080fd5b505af11580156142ca573d6000803e3d6000fd5b5050601f546040516342debbab60e01b815260c860048201526001600160a01b0390911692506342debbab9150602401600060405180830381600087803b15801561431457600080fd5b505af1158015614328573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b031663ea87e3ff6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561437c57600080fd5b505af1158015614390573d6000803e3d6000fd5b505060405163f28dceb360e01b815260206004820152601b60248201527f416c6c207265776172647320616c726561647920636c61696d65640000000000604482015260008051602061bc9e833981519152925063f28dceb39150606401600060405180830381600087803b15801561440857600080fd5b505af115801561441c573d6000803e3d6000fd5b50505050601f60009054906101000a90046001600160a01b03166001600160a01b031663ea87e3ff6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561447057600080fd5b505af1158015614484573d6000803e3d6000fd5b505050506000601f60009054906101000a90046001600160a01b03166001600160a01b03166393ef357a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156144d857600080fd5b505afa1580156144ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906145109190614b9d565b9050601f60009054906101000a90046001600160a01b03166001600160a01b03166353d64ee06040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561456257600080fd5b505af1158015614576573d6000803e3d6000fd5b5050601e5461459292506001600160a01b0316319050826145fa565b60008051602061bcbe83398151915260001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156145de57600080fd5b505af11580156145f2573d6000803e3d6000fd5b505050505050565b808214613ead577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405161466b9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8826040516146a29190614e41565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8816040516146d99190614ecd565b60405180910390a1613ead61494a565b806001600160a01b0316826001600160a01b031614613ead577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405161476f9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f826040516147a69190614db9565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f816040516146d99190614e79565b80151582151514613ead577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516148529060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f6040820152616c5d60f01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583826148a3576040518060400160405280600581526020016466616c736560d81b8152506148c1565b604051806040016040528060048152602001637472756560e01b8152505b6040516148ce9190614dfd565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838161491f576040518060400160405280600581526020016466616c736560d81b81525061493d565b604051806040016040528060048152602001637472756560e01b8152505b6040516146d99190614ea3565b60008051602061bc9e8339815191523b15614a39576040805160008051602061bc9e833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526149d89291602001614c0e565b60408051601f19818403018152908290526149f291614c3f565b6000604051808303816000865af19150503d8060008114614a2f576040519150601f19603f3d011682016040523d82523d6000602084013e614a34565b606091505b505050505b6000805461ff001916610100179055565b610fa080614fb983390190565b61073880615f5983390190565b6124898061669183390190565b61318480618b1a83390190565b80516001600160a01b038116811461395d57600080fd5b600060208284031215614aa6578081fd5b614aaf82614a7e565b9392505050565b60006020808385031215614ac8578182fd5b825167ffffffffffffffff80821115614adf578384fd5b818501915085601f830112614af2578384fd5b815181811115614b0457614b04614fa2565b8060051b604051601f19603f83011681018181108582111715614b2957614b29614fa2565b604052828152858101935084860182860187018a1015614b47578788fd5b8795505b83861015614b7057614b5c81614a7e565b855260019590950194938601938601614b4b565b5098975050505050505050565b600060208284031215614b8e578081fd5b81518015158114614aaf578182fd5b600060208284031215614bae578081fd5b5051919050565b600080600060608486031215614bc9578182fd5b8351925060208401519150604084015190509250925092565b60008151808452614bfa816020860160208601614f3b565b601f01601f19169290920160200192915050565b6001600160e01b0319831681528151600090614c31816004850160208701614f3b565b919091016004019392505050565b60008251614c51818460208701614f3b565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015614c9c5783516001600160a01b031683529284019291840191600101614c77565b50909695505050505050565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b82811015614cfc57603f19888603018452614cea858351614be2565b94509285019290850190600101614cce565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b83811015614dab57888303603f19018552815180516001600160a01b03168452870151878401879052805187850181905290880190899060608601905b80831015614d965783516001600160e01b0319168252928a019260019290920191908a0190614d6c565b50968901969450505090860190600101614d2f565b509098975050505050505050565b604081526000614de360408301600a8152690808080808081319599d60b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b604081526000614e2760408301600a8152690808080808081319599d60b21b602082015260400190565b8281036020840152614e398185614be2565b949350505050565b604081526000614e6b60408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b604081526000614de360408301600a8152690808080808149a59da1d60b21b602082015260400190565b604081526000614e2760408301600a8152690808080808149a59da1d60b21b602082015260400190565b604081526000614e6b60408301600a8152690808080808149a59da1d60b21b602082015260400190565b60008219821115614f1657634e487b7160e01b81526011600452602481fd5b500190565b600082614f3657634e487b7160e01b81526012600452602481fd5b500490565b60005b83811015614f56578181015183820152602001614f3e565b83811115610c8a5750506000910152565b600181811c90821680614f7b57607f821691505b60208210811415614f9c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfe608060405234801561001057600080fd5b50610f80806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80634cd88b76116100975780639dc29fac116100665780639dc29fac1461020c578063a457c2d71461021f578063a9059cbb14610232578063dd62ed3e1461024557600080fd5b80634cd88b76146101b557806370a08231146101c857806379cc6790146101f157806395d89b411461020457600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461017a57806340c10f191461018d57806342966c68146101a057600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d610258565b60405161011a9190610e16565b60405180910390f35b610136610131366004610d74565b6102ea565b604051901515815260200161011a565b6035545b60405190815260200161011a565b610136610166366004610d39565b610304565b6040516012815260200161011a565b610136610188366004610d74565b610328565b61013661019b366004610d74565b61034a565b6101b36101ae366004610dfe565b610356565b005b6101b36101c3366004610d9d565b610363565b61014a6101d6366004610ce6565b6001600160a01b031660009081526033602052604090205490565b6101b36101ff366004610d74565b610485565b61010d61049e565b61013661021a366004610d74565b6104ad565b61013661022d366004610d74565b6104b9565b610136610240366004610d74565b610534565b61014a610253366004610d07565b610542565b60606036805461026790610ee3565b80601f016020809104026020016040519081016040528092919081815260200182805461029390610ee3565b80156102e05780601f106102b5576101008083540402835291602001916102e0565b820191906000526020600020905b8154815290600101906020018083116102c357829003601f168201915b5050505050905090565b6000336102f881858561056d565b60019150505b92915050565b600033610312858285610691565b61031d85858561070b565b506001949350505050565b6000336102f881858561033b8383610542565b6103459190610eb4565b61056d565b60006102fe83836108d9565b61036033826109b8565b50565b600054610100900460ff16158080156103835750600054600160ff909116105b8061039d5750303b15801561039d575060005460ff166001145b6104055760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610428576000805461ff0019166101001790555b6104328383610b06565b61043a610b37565b8015610480576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b610490823383610691565b61049a82826109b8565b5050565b60606037805461026790610ee3565b60006102fe83836109b8565b600033816104c78286610542565b9050838110156105275760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103fc565b61031d828686840361056d565b6000336102f881858561070b565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166105cf5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103fc565b6001600160a01b0382166106305760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103fc565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061069d8484610542565b9050600019811461070557818110156106f85760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103fc565b610705848484840361056d565b50505050565b6001600160a01b03831661076f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103fc565b6001600160a01b0382166107d15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103fc565b6001600160a01b038316600090815260336020526040902054818110156108495760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103fc565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610880908490610eb4565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108cc91815260200190565b60405180910390a3610705565b6001600160a01b03821661092f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103fc565b80603560008282546109419190610eb4565b90915550506001600160a01b0382166000908152603360205260408120805483929061096e908490610eb4565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610a185760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103fc565b6001600160a01b03821660009081526033602052604090205481811015610a8c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103fc565b6001600160a01b0383166000908152603360205260408120838303905560358054849290610abb908490610ecc565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600054610100900460ff16610b2d5760405162461bcd60e51b81526004016103fc90610e69565b61049a8282610b60565b600054610100900460ff16610b5e5760405162461bcd60e51b81526004016103fc90610e69565b565b600054610100900460ff16610b875760405162461bcd60e51b81526004016103fc90610e69565b8151610b9a906036906020850190610baa565b5080516104809060379060208401905b828054610bb690610ee3565b90600052602060002090601f016020900481019282610bd85760008555610c1e565b82601f10610bf157805160ff1916838001178555610c1e565b82800160010185558215610c1e579182015b82811115610c1e578251825591602001919060010190610c03565b50610c2a929150610c2e565b5090565b5b80821115610c2a5760008155600101610c2f565b80356001600160a01b0381168114610c5a57600080fd5b919050565b600082601f830112610c6f578081fd5b813567ffffffffffffffff80821115610c8a57610c8a610f34565b604051601f8301601f19908116603f01168101908282118183101715610cb257610cb2610f34565b81604052838152866020858801011115610cca578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215610cf7578081fd5b610d0082610c43565b9392505050565b60008060408385031215610d19578081fd5b610d2283610c43565b9150610d3060208401610c43565b90509250929050565b600080600060608486031215610d4d578081fd5b610d5684610c43565b9250610d6460208501610c43565b9150604084013590509250925092565b60008060408385031215610d86578182fd5b610d8f83610c43565b946020939093013593505050565b60008060408385031215610daf578182fd5b823567ffffffffffffffff80821115610dc6578384fd5b610dd286838701610c5f565b93506020850135915080821115610de7578283fd5b50610df485828601610c5f565b9150509250929050565b600060208284031215610e0f578081fd5b5035919050565b6000602080835283518082850152825b81811015610e4257858101830151858201604001528201610e26565b81811115610e535783604083870101525b50601f01601f1916929092016040019392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008219821115610ec757610ec7610f1e565b500190565b600082821015610ede57610ede610f1e565b500390565b600181811c90821680610ef757607f821691505b60208210811415610f1857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220467c6e0948b2481181cbd1662854f5d1eafacfb09d144fadd91847eab32c502c64736f6c63430008040033608060405234801561001057600080fd5b5042600455610714806100246000396000f3fe6080604052600436106100e85760003560e01c8063a25b7e491161008a578063d4e9329211610059578063d4e932921461021a578063d7e5274514610230578063db62b20114610246578063e608d80b1461025a57600080fd5b8063a25b7e49146101b8578063a6bbfe2e146101ce578063b77a2c1c146101e4578063c7841dd2146101fa57600080fd5b806378e97925116100c657806378e97925146101565780638640ce5f1461016c5780638b0e9f3f14610182578063a0b9d8be1461019857600080fd5b80630789bd8f146100ed57806352b73e411461012c57806377a0fe0214610141575b600080fd5b3480156100f957600080fd5b5061011a610108366004610661565b60086020526000908152604090205481565b60405190815260200160405180910390f35b61013f61013a366004610620565b61026f565b005b34801561014d57600080fd5b5061013f610296565b34801561016257600080fd5b5061011a60045481565b34801561017857600080fd5b5061011a60015481565b34801561018e57600080fd5b5061011a60005481565b3480156101a457600080fd5b5061013f6101b33660046105ff565b6103ac565b3480156101c457600080fd5b5061011a60055481565b3480156101da57600080fd5b5061011a60025481565b3480156101f057600080fd5b5061011a60075481565b34801561020657600080fd5b5061013f610215366004610620565b610479565b34801561022657600080fd5b5061011a60035481565b34801561023c57600080fd5b5061011a60065481565b34801561025257600080fd5b50600a61011a565b34801561026657600080fd5b5061011a6105b5565b806001600160801b03166000808282546102899190610679565b9091555050426007555050565b6006546102dd5760405162461bcd60e51b815260206004820152601060248201526f0556e7374616b6554696d65203d3d20360841b60448201526064015b60405180910390fd5b620d2f00600654426102ef91906106b1565b10156103495760405162461bcd60e51b815260206004820152602360248201527f556e626f6e64696e6720706572696f6420686173206e6f7420706173736564206044820152621e595d60ea1b60648201526084016102d4565b60055460405160009133918381818185875af1925050503d806000811461038c576040519150601f19603f3d011682016040523d82523d6000602084013e610391565b606091505b505090508061039f57600080fd5b5060006005819055600655565b600a6002546103bb90436106b1565b116104085760405162461bcd60e51b815260206004820152601860248201527f756e626f6e64696e6720706572696f64206e6f7420656e64000000000000000060448201526064016102d4565b600654806104135750425b600754600090339061042590846106b1565b604051600081818185875af1925050503d8060008114610461576040519150601f19603f3d011682016040523d82523d6000602084013e610466565b606091505b505090508061047457600080fd5b505050565b60006104836105b5565b9050816001600160801b031660005410156104ee5760405162461bcd60e51b815260206004820152602560248201527f4d6f636b44617070735374616b696e673a20616d6f756e74203e20746f74616c6044820152645374616b6560d81b60648201526084016102d4565b816001600160801b031660008082825461050891906106b1565b92505081905550816001600160801b03166005600082825461052a9190610679565b9091555050600081815260086020526040812080546001929061054e908490610679565b9091555050426006556000818152600860205260409020546005116104745760405162461bcd60e51b815260206004820181905260248201527f546f206d75636820756e7374616b657320666f722063757272656e742065726160448201526064016102d4565b600062015180600454426105c991906106b1565b6105d39190610691565b6105de906001610679565b905090565b80356001600160a01b03811681146105fa57600080fd5b919050565b600060208284031215610610578081fd5b610619826105e3565b9392505050565b60008060408385031215610632578081fd5b61063b836105e3565b915060208301356001600160801b0381168114610656578182fd5b809150509250929050565b600060208284031215610672578081fd5b5035919050565b6000821982111561068c5761068c6106c8565b500190565b6000826106ac57634e487b7160e01b81526012600452602481fd5b500490565b6000828210156106c3576106c36106c8565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220105270eb0298172f4314d5cd4879f55ecac05a4cb905635d3a01d44e6f25035364736f6c63430008040033608060405234801561001057600080fd5b50612469806100206000396000f3fe6080604052600436106101e75760003560e01c806395f0010811610102578063db4bea0011610095578063ea1bb3d511610064578063ea1bb3d5146105dc578063f9079b37146105fc578063f95b8b551461061c578063fc0c546a1461063257600080fd5b8063db4bea001461054f578063dddecb2c1461056f578063e5c1f2111461059c578063e5fe4dff146105bc57600080fd5b8063b8900aa7116100d1578063b8900aa7146104cf578063c4365374146104ef578063c4d66de81461050f578063d547741f1461052f57600080fd5b806395f0010814610442578063a217fddf14610478578063a8d088bb1461048d578063b4733443146104af57600080fd5b80633d39c2601161017a57806364fd474d1161014957806364fd474d146103c05780637e913dc6146103ed57806390be10cc1461040d57806391d148541461042257600080fd5b80633d39c2601461031b578063471121d114610353578063624332361461038057806363f44968146103a057600080fd5b80632d06177a116101b65780632d06177a146102995780632f2ff15d146102bb57806336568abe146102db578063377e32e6146102fb57600080fd5b806301ffc9a7146101f357806313083617146102285780631b2df85014610247578063248a9ca31461026957600080fd5b366101ee57005b600080fd5b3480156101ff57600080fd5b5061021361020e366004612093565b610652565b60405190151581526020015b60405180910390f35b34801561023457600080fd5b5060cf545b60405190815260200161021f565b34801561025357600080fd5b5061023960008051602061241483398151915281565b34801561027557600080fd5b5061023961028436600461202b565b60009081526065602052604090206001015490565b3480156102a557600080fd5b506102b96102b4366004611f60565b610689565b005b3480156102c757600080fd5b506102b96102d6366004612043565b6107fb565b3480156102e757600080fd5b506102b96102f6366004612043565b610825565b34801561030757600080fd5b506102b9610316366004611f60565b6108a3565b34801561032757600080fd5b5061033b61033636600461202b565b610b2d565b6040516001600160a01b03909116815260200161021f565b34801561035f57600080fd5b5061023961036e366004611f60565b60cd6020526000908152604090205481565b34801561038c57600080fd5b5061023961039b366004611f60565b610b57565b3480156103ac57600080fd5b506102b96103bb366004612072565b610b7b565b3480156103cc57600080fd5b506103e06103db366004611f7c565b610e9b565b60405161021f9190612266565b3480156103f957600080fd5b506103e0610408366004611f60565b610eb7565b34801561041957600080fd5b50610239610f8f565b34801561042e57600080fd5b5061021361043d366004612043565b61101e565b34801561044e57600080fd5b5061023961045d366004611f60565b6001600160a01b0316600090815260cd602052604090205490565b34801561048457600080fd5b50610239600081565b34801561049957600080fd5b506104a2611049565b60405161021f91906121e6565b3480156104bb57600080fd5b506102396104ca3660046120bb565b6110ab565b3480156104db57600080fd5b506102b96104ea36600461202b565b61117c565b3480156104fb57600080fd5b506102b961050a366004611fa7565b611353565b34801561051b57600080fd5b506102b961052a366004611f60565b611733565b34801561053b57600080fd5b506102b961054a366004612043565b61186f565b34801561055b57600080fd5b506103e061056a36600461202b565b611894565b34801561057b57600080fd5b5061023961058a366004611f60565b60cb6020526000908152604090205481565b3480156105a857600080fd5b506102b96105b7366004611f7c565b611938565b3480156105c857600080fd5b506102396105d7366004611f7c565b6119dc565b3480156105e857600080fd5b506102396105f736600461202b565b611a23565b34801561060857600080fd5b5061023961061736600461202b565b611b0d565b34801561062857600080fd5b5061023960ca5481565b34801561063e57600080fd5b5060c95461033b906001600160a01b031681565b60006001600160e01b03198216637965db0b60e01b148061068357506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000805160206124148339815191526106a181611ba3565b6106b96000805160206124148339815191528361101e565b156106fe5760405162461bcd60e51b815260206004820152601060248201526f20b6363932b0b23c9036b0b730b3b2b960811b60448201526064015b60405180910390fd5b6001600160a01b03821661074d5760405162461bcd60e51b815260206004820152601660248201527543616e6e6f74206265207a65726f206164647265737360501b60448201526064016106f5565b60ce80546001600160a01b038416600081815260cb60205260408120839055600183018455929092527fd36cd1c74ef8d7326d8021b776c18fb5a5724b7f7bc93c2f42e43e10ef27d12a0180546001600160a01b03191690911790556107c160008051602061241483398151915283611bb0565b6040516001600160a01b0383169033907f80dc3d87a7a642c46b6272b119f53d4db8aef58e5984b633f1055308b77dce6d90600090a35050565b60008281526065602052604090206001015461081681611ba3565b6108208383611bb0565b505050565b6001600160a01b03811633146108955760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016106f5565b61089f8282611c36565b5050565b6000805160206124148339815191526108bb81611ba3565b6108d36000805160206124148339815191528361101e565b6109125760405162461bcd60e51b815260206004820152601060248201526f24b9903737ba10309036b0b730b3b2b960811b60448201526064016106f5565b336001600160a01b03831614156109755760405162461bcd60e51b815260206004820152602160248201527f43616e2774207265766f6b65206120726f6c652066726f6d20796f757273656c6044820152603360f91b60648201526084016106f5565b6001600160a01b038216600090815260cb602052604090205460ce805461099e90600190612380565b815481106109bc57634e487b7160e01b600052603260045260246000fd5b60009182526020909120015460ce80546001600160a01b0390921691839081106109f657634e487b7160e01b600052603260045260246000fd5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508060cb600060ce600160ce80549050610a3d9190612380565b81548110610a5b57634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b0316835282019290925260400190205560ce805480610a9f57634e487b7160e01b600052603160045260246000fd5b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b038516825260cb90526040812055610af260008051602061241483398151915284611c36565b6040516001600160a01b0384169033907f142c2a791096690a19ea18712757698bee1e23180c084e221726a4a96e027a7b90600090a3505050565b60ce8181548110610b3d57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b038116600090815260cd60205260408120546106839083906119dc565b60026097541415610bce5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106f5565b6002609755600082815260cc6020526040902054829060ff161515600114610bf557600080fd5b600081815260cc602052604090206008015460ff1615610c1457600080fd5b600083815260cc60205260409020805461010090046001600160a01b0316331480610c525750610c526000805160206124148339815191523361101e565b610cbd5760405162461bcd60e51b815260206004820152603660248201527f4f6e6c792062656e656669636961727920616e64206d616e616765722063616e6044820152752072656c656173652076657374656420746f6b656e7360501b60648201526084016106f5565b6040805161014081018252825460ff808216151583526001600160a01b03610100928390041660208401526001850154938301939093526002840154606083015260038401546080830152600484015460a083015260058401548316151560c0830152600684015460e083015260078401549082015260088301549091161515610120820152600090610d4f906110ab565b905083811015610da15760405162461bcd60e51b815260206004820152601860248201527f4e6f7420656e6f7567682076657374656420746f6b656e73000000000000000060448201526064016106f5565b83826007016000828254610db59190612329565b925050819055508360ca6000828254610dce9190612380565b909155505060c954825460405163a9059cbb60e01b81526001600160a01b03610100909204821660048201526024810187905291169063a9059cbb90604401602060405180830381600087803b158015610e2757600080fd5b505af1158015610e3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5f919061200f565b506040518490869033907f33e1e4350f7b57099d5489c172fc55e9e32d4d3906a6e36710fae5ed9f5eef0f90600090a450506001609755505050565b610ea3611ee3565b610eb061056a84846119dc565b9392505050565b610ebf611ee3565b6001600160a01b038216600090815260cd602052604081205460cc9190610eee9085906105d790600190612380565b81526020808201929092526040908101600020815161014081018352815460ff808216151583526001600160a01b036101009283900416958301959095526001830154938201939093526002820154606082015260038201546080820152600482015460a082015260058201548416151560c0820152600682015460e082015260078201549281019290925260080154909116151561012082015292915050565b60ca5460c9546040516370a0823160e01b8152306004820152600092916001600160a01b0316906370a082319060240160206040518083038186803b158015610fd757600080fd5b505afa158015610feb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100f9190612159565b6110199190612380565b905090565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b606060ce8054806020026020016040519081016040528092919081815260200182805480156110a157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611083575b5050505050905090565b604081015160009042908110806110c9575061012083015115156001145b156110d75750600092915050565b826080015183606001516110eb9190612329565b8110611106578261010001518360e00151610eb09190612380565b60008360600151826111189190612380565b60a0850151909150600061112c8284612341565b9050600061113a8383612361565b905060008760800151828960e001516111539190612361565b61115d9190612341565b9050876101000151816111709190612380565b98975050505050505050565b60008051602061241483398151915261119481611ba3565b600082815260cc6020526040902054829060ff1615156001146111b657600080fd5b600081815260cc602052604090206008015460ff16156111d557600080fd5b600083815260cc60205260409020600581015460ff16151560011461123c5760405162461bcd60e51b815260206004820152601860248201527f56657374696e67206973206e6f74207265766f6361626c65000000000000000060448201526064016106f5565b6040805161014081018252825460ff808216151583526001600160a01b03610100928390041660208401526001850154938301939093526002840154606083015260038401546080830152600484015460a083015260058401548316151560c0830152600684015460e0830152600784015490820152600883015490911615156101208201526000906112ce906110ab565b905080156112e0576112e08582610b7b565b6000826007015483600601546112f69190612380565b90508060ca600082825461130a9190612380565b909155505060088301805460ff19166001179055604051869033907fdea492e4514cb12de4bc884f5c6f632e1d8e24155594a7fd84caf1100e2469b090600090a3505050505050565b60008051602061241483398151915261136b81611ba3565b81611374610f8f565b10156113e85760405162461bcd60e51b815260206004820152603c60248201527f43616e6e6f74206372656174652076657374696e67207363686564756c65206260448201527f656361757365206e6f742073756666696369656e7420746f6b656e730000000060648201526084016106f5565b6000851161142f5760405162461bcd60e51b815260206004820152601460248201527304475726174696f6e206d757374206265203e20360641b60448201526064016106f5565b600082116114745760405162461bcd60e51b81526020600482015260126024820152710416d6f756e74206d757374206265203e20360741b60448201526064016106f5565b6001600160a01b0388166114d65760405162461bcd60e51b8152602060048201526024808201527f42656e6566696369617279206d757374206265206e6f6e2d7a65726f206164646044820152637265737360e01b60648201526084016106f5565b600084116115265760405162461bcd60e51b815260206004820152601860248201527f536c69636520706572696f64206d757374206265203e2030000000000000000060448201526064016106f5565b600061153189610b57565b9050600061153f8989612329565b90506040518061014001604052806001151581526020018b6001600160a01b031681526020018281526020018981526020018881526020018781526020018615158152602001858152602001600081526020016000151581525060cc600084815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010155606082015181600201556080820151816003015560a0820151816004015560c08201518160050160006101000a81548160ff02191690831515021790555060e0820151816006015561010082015181600701556101208201518160080160006101000a81548160ff0219169083151502179055509050508360ca600082825461168c9190612329565b909155505060cf805460018181019092557facb8d954e2cfef495862221e91bd7523613cf8808827cb33edfe4904cc51bf29018390556001600160a01b038b16600090815260cd6020526040812080549091906116ea908490612329565b909155505060405182906001600160a01b038c169033907f70d8e04551c4f5483ed4ed73fa0873c897bfa11c9bcc05b1435dbc1bd851681190600090a450505050505050505050565b600054610100900460ff16158080156117535750600054600160ff909116105b8061176d5750303b15801561176d575060005460ff166001145b6117d05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106f5565b6000805460ff1916600117905580156117f3576000805461ff0019166101001790555b61180b60008051602061241483398151915233611bb0565b60c980546001600160a01b0319166001600160a01b038416179055801561089f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b60008281526065602052604090206001015461188a81611ba3565b6108208383611c36565b61189c611ee3565b50600090815260cc6020908152604091829020825161014081018452815460ff808216151583526001600160a01b036101009283900416948301949094526001830154948201949094526002820154606082015260038201546080820152600482015460a082015260058201548316151560c0820152600682015460e08201526007820154938101939093526008015416151561012082015290565b60008051602061241483398151915261195081611ba3565b60c95460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529091169063a9059cbb90604401602060405180830381600087803b15801561199e57600080fd5b505af11580156119b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119d6919061200f565b50505050565b6040516bffffffffffffffffffffffff19606084901b1660208201526034810182905260009060540160405160208183030381529060405280519060200120905092915050565b600081815260cc6020526040812054829060ff161515600114611a4557600080fd5b600081815260cc602052604090206008015460ff1615611a6457600080fd5b600083815260cc6020908152604091829020825161014081018452815460ff808216151583526001600160a01b036101009283900416948301949094526001830154948201949094526002820154606082015260038201546080820152600482015460a082015260058201548316151560c0820152600682015460e082015260078201549381019390935260080154161515610120820152611b05816110ab565b949350505050565b6000611b1860cf5490565b8210611b705760405162461bcd60e51b815260206004820152602160248201527f546f6b656e56657374696e673a20696e646578206f7574206f6620626f756e646044820152607360f81b60648201526084016106f5565b60cf8281548110611b9157634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b611bad8133611c9d565b50565b611bba828261101e565b61089f5760008281526065602090815260408083206001600160a01b03851684529091529020805460ff19166001179055611bf23390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b611c40828261101e565b1561089f5760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b611ca7828261101e565b61089f57611cbf816001600160a01b03166014611d01565b611cca836020611d01565b604051602001611cdb929190612171565b60408051601f198184030181529082905262461bcd60e51b82526106f591600401612233565b60606000611d10836002612361565b611d1b906002612329565b67ffffffffffffffff811115611d4157634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611d6b576020820181803683370190505b509050600360fc1b81600081518110611d9457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611dd157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000611df5846002612361565b611e00906001612329565b90505b6001811115611e94576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611e4257634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110611e6657634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93611e8d816123c3565b9050611e03565b508315610eb05760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016106f5565b60405180610140016040528060001515815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160001515815260200160008152602001600081526020016000151581525090565b8035611f50816123f0565b919050565b8035611f5081612405565b600060208284031215611f71578081fd5b8135610eb0816123f0565b60008060408385031215611f8e578081fd5b8235611f99816123f0565b946020939093013593505050565b600080600080600080600060e0888a031215611fc1578283fd5b8735611fcc816123f0565b96506020880135955060408801359450606088013593506080880135925060a0880135611ff881612405565b8092505060c0880135905092959891949750929550565b600060208284031215612020578081fd5b8151610eb081612405565b60006020828403121561203c578081fd5b5035919050565b60008060408385031215612055578182fd5b823591506020830135612067816123f0565b809150509250929050565b60008060408385031215612084578182fd5b50508035926020909101359150565b6000602082840312156120a4578081fd5b81356001600160e01b031981168114610eb0578182fd5b600061014082840312156120cd578081fd5b6120d56122f1565b6120de83611f55565b81526120ec60208401611f45565b602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015261212560c08401611f55565b60c082015260e083013560e082015261010080840135818301525061012061214e818501611f55565b908201529392505050565b60006020828403121561216a578081fd5b5051919050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516121a9816017850160208801612397565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516121da816028840160208801612397565b01602801949350505050565b6020808252825182820181905260009190848201906040850190845b818110156122275783516001600160a01b031683529284019291840191600101612202565b50909695505050505050565b6020815260008251806020840152612252816040850160208701612397565b601f01601f19169190910160400192915050565b8151151581526101408101602083015161228b60208401826001600160a01b03169052565b5060408301516040830152606083015160608301526080830151608083015260a083015160a083015260c08301516122c760c084018215159052565b5060e083810151908301526101008084015190830152610120928301511515929091019190915290565b604051610140810167ffffffffffffffff8111828210171561232357634e487b7160e01b600052604160045260246000fd5b60405290565b6000821982111561233c5761233c6123da565b500190565b60008261235c57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561237b5761237b6123da565b500290565b600082821015612392576123926123da565b500390565b60005b838110156123b257818101518382015260200161239a565b838111156119d65750506000910152565b6000816123d2576123d26123da565b506000190190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114611bad57600080fd5b8015158114611bad57600080fdfeaf290d8680820aad922855f39b306097b20e28774d6c1ad35a20325630c3a02ca26469706673582212204886efb9bba1f6d86167566d1ef154d928858ae2b538fa658a7cb03c239a08b364736f6c63430008040033608060405234801561001057600080fd5b50613164806100206000396000f3fe6080604052600436106102c85760003560e01c806377734a6611610175578063c4b02908116100dc578063e3e969ab11610095578063f2fde38b1161006f578063f2fde38b14610874578063f6a3f3cf14610894578063f8293403146108b4578063fd5e6dd1146108d457600080fd5b8063e3e969ab1461082a578063ea87e3ff1461084a578063eef097401461085f57600080fd5b8063c4b0290814610760578063c71367b5146107ae578063d31dbab6146107c4578063d40dc870146107d9578063d77355c4146107f8578063ddbcb5fa1461080d57600080fd5b8063973628f61161012e578063973628f6146106b25780639db29340146106c75780639fdb8c93146106e7578063a25b7e4914610714578063a6d953b71461072a578063bfb9ba0c1461074a57600080fd5b806377734a661461061d5780638037ecd31461063d57806380bb74e814610653578063817b1cd2146106685780638da5cb5b1461067e57806393ef357a1461069c57600080fd5b8063422b1077116102345780635495ec81116101ed57806368b0216e116101c757806368b0216e146105ae5780636adb930c146105c35780636f1e8533146105d8578063715018a61461060857600080fd5b80635495ec8114610537578063597e1fb51461054d578063620cc15c1461057e57600080fd5b8063422b10771461047257806342debbab146104ad57806343352d61146104cd57806344c63eec146104ef57806346f45b8d1461050f57806353d64ee01461052257600080fd5b80632e1a7d4d116102865780632e1a7d4d1461038f5780632e415702146103af57806334294447146103e7578063372500ab146104145780633a4b66f1146104295780633d8ab5b11461043157600080fd5b8062179fbd146102cd5780631459457a146102f657806316934fc41461031857806324025b19146103455780632941bc291461035b5780632def66201461037a575b600080fd5b3480156102d957600080fd5b506102e360a05481565b6040519081526020015b60405180910390f35b34801561030257600080fd5b50610316610311366004612c64565b6108f4565b005b34801561032457600080fd5b506102e3610333366004612be5565b60a76020526000908152604090205481565b34801561035157600080fd5b506102e3609b5481565b34801561036757600080fd5b506102e36a021165458500521280000081565b34801561038657600080fd5b50610316610bb7565b34801561039b57600080fd5b506103166103aa366004612d7e565b610fd5565b3480156103bb57600080fd5b5060a3546103cf906001600160a01b031681565b6040516001600160a01b0390911681526020016102ed565b3480156103f357600080fd5b50610407610402366004612be5565b6111d1565b6040516102ed9190612eff565b34801561042057600080fd5b5061031661126b565b61031661148a565b34801561043d57600080fd5b506103cf61044c366004612cd4565b805160208183018101805160ab825292820191909301209152546001600160a01b031681565b34801561047e57600080fd5b5061049261048d366004612c01565b6114ce565b604080519384526020840192909252908201526060016102ed565b3480156104b957600080fd5b506103166104c8366004612d7e565b611510565b3480156104d957600080fd5b506104e261154d565b6040516102ed9190612e8a565b3480156104fb57600080fd5b506097546103cf906001600160a01b031681565b61031661051d366004612cd4565b6115af565b34801561052e57600080fd5b506103166119c4565b34801561054357600080fd5b506102e3609c5481565b34801561055957600080fd5b5060975461056e90600160a01b900460ff1681565b60405190151581526020016102ed565b34801561058a57600080fd5b5061056e610599366004612be5565b60aa6020526000908152604090205460ff1681565b3480156105ba57600080fd5b50610316611a17565b3480156105cf57600080fd5b50610316611b1e565b3480156105e457600080fd5b5061056e6105f3366004612be5565b60a66020526000908152604090205460ff1681565b34801561061457600080fd5b50610316611c23565b34801561062957600080fd5b5060a2546103cf906001600160a01b031681565b34801561064957600080fd5b506102e3609f5481565b34801561065f57600080fd5b50610407611c35565b34801561067457600080fd5b506102e360995481565b34801561068a57600080fd5b506033546001600160a01b03166103cf565b3480156106a857600080fd5b506102e360a15481565b3480156106be57600080fd5b506102e3611dca565b3480156106d357600080fd5b506102e36106e2366004612be5565b611e4c565b3480156106f357600080fd5b506102e3610702366004612be5565b60a86020526000908152604090205481565b34801561072057600080fd5b506102e3609d5481565b34801561073657600080fd5b506098546103cf906001600160a01b031681565b34801561075657600080fd5b506102e3609a5481565b34801561076c57600080fd5b5060ae5460af5460b05460b15460b25460b35460b45461079b966001600160a01b0316959493929160ff169087565b6040516102ed9796959493929190612e4d565b3480156107ba57600080fd5b506102e3609e5481565b3480156107d057600080fd5b506102e3611f07565b3480156107e557600080fd5b506102e36a52b7d2dcc80cd2e400000081565b34801561080457600080fd5b50610316611fbf565b34801561081957600080fd5b506102e368056bc75e2d6310000081565b34801561083657600080fd5b50610407610845366004612be5565b612057565b34801561085657600080fd5b50610316612070565b34801561086b57600080fd5b506102e36122ae565b34801561088057600080fd5b5061031661088f366004612be5565b612300565b3480156108a057600080fd5b506102e36108af366004612be5565b612379565b3480156108c057600080fd5b5060a4546103cf906001600160a01b031681565b3480156108e057600080fd5b506103cf6108ef366004612d7e565b6123ba565b600054610100900460ff16158080156109145750600054600160ff909116105b8061092e5750303b15801561092e575060005460ff166001145b6109965760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156109b9576000805461ff0019166101001790555b6109c16123e4565b60a280546001600160a01b03199081166001600160a01b038781169190911790925560a38054821686841617905560a480548216858416179055609780548216898416179055609880549091169187169190911790556040805160e08101825230815262093a806020820152429181019190915260608101610a4762278d006006613009565b815262093a8060208083019190915260016040808401919091526a0211654585005212800000606093840152835160ae80546001600160a01b0319166001600160a01b039283161790558483015160af558482015160b0559284015160b155608084015160b25560a084015160b3805460ff191691151591909117905560c09093015160b45560a454835163db62b20160e01b8152935192169263db62b2019260048083019392829003018186803b158015610b0257600080fd5b505afa158015610b16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3a9190612c4c565b609b556001610b47611dca565b610b519190613056565b609c55610b5c611dca565b609f55610b696005611510565b8015610baf576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b60a2546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015610bfb57600080fd5b505afa158015610c0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c339190612c4c565b905060008111610c7d5760405162461bcd60e51b81526020600482015260156024820152742ab9b2b9103430b99037379030b73c9030a0a9aa2960591b604482015260640161098d565b609a54610cc35760405162461bcd60e51b815260206004820152601460248201527321b937bbb23637b0b71039ba34b6361037b832b760611b604482015260640161098d565b60b154609a544291610cd491612fa7565b1115610d2c5760405162461bcd60e51b815260206004820152602160248201527f4c6f636b696e6720706572696f6420686173206e6f74207965742070617373656044820152601960fa1b606482015260840161098d565b6000610d36611dca565b905081609d6000828254610d4a9190612fa7565b925050819055508160996000828254610d639190613056565b909155505060a2546040516370a0823160e01b815233600482015283916001600160a01b0316906370a082319060240160206040518083038186803b158015610dab57600080fd5b505afa158015610dbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de39190612c4c565b1015610e315760405162461bcd60e51b815260206004820152601960248201527f4e6f7420656e6f75676820746f6b656e7320746f206275726e00000000000000604482015260640161098d565b60a254604051632770a7eb60e21b8152336004820152602481018490526001600160a01b0390911690639dc29fac90604401602060405180830381600087803b158015610e7d57600080fd5b505af1158015610e91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb59190612c2c565b506000610ec382600a613009565b6004609b54600a610ed49190613009565b610ede9190612fe9565b609c54610eec90600a613009565b610ef69190612fa7565b1115610f4757610f0782600a613009565b6004609b54600a610f189190613009565b610f229190612fe9565b609c54610f3090600a613009565b610f3a9190612fa7565b610f449190613056565b90505b33600090815260a96020908152604080832081516060810183528781528084018781529281018681528254600181810185559387529490952090516003909402019283559051908201559051600290910155610fa1612413565b6040518290849033907ff960dbf9e5d0682f7a298ed974e33a28b4464914b7a2bfac12ae419a9afeb28090600090a4505050565b610fe5610fe0611dca565b6125d1565b33600090815260a96020526040812080548390811061101457634e487b7160e01b600052603260045260246000fd5b60009182526020909120600390910201805460018201549192509061107b5760405162461bcd60e51b815260206004820152601a60248201527f5769746864726177616c20616c726561647920636c61696d6564000000000000604482015260640161098d565b6002820154609b5461108e90600a613009565b6110989190612fa7565b60018301546110a890600a613009565b6110b0611dca565b6110bb90600a613009565b6110c59190613056565b10156111135760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f75676820657261732070617373656421000000000000000000604482015260640161098d565b80609e54101561116f5760405162461bcd60e51b815260206004820152602160248201527f4e6f7420656e6f7567682066756e647320696e20756e626f6e64656420706f6f6044820152601b60fa1b606482015260840161098d565b80609e60008282546111819190613056565b9091555050600060018301556111973382612729565b60405181815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a2505050565b60ac60205260009081526040902080546111ea9061309d565b80601f01602080910402602001604051908101604052809291908181526020018280546112169061309d565b80156112635780601f1061123857610100808354040283529160200191611263565b820191906000526020600020905b81548152906001019060200180831161124657829003601f168201915b505050505081565b600260655414156112be5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161098d565b600260655560006112ce33611e4c565b9050600081116113205760405162461bcd60e51b815260206004820152601760248201527f5573657220686173206e6f20616e792072657761726473000000000000000000604482015260640161098d565b600061132a6122ae565b905080156113a5576097546001600160a01b03166363f4496861134b612847565b836040518363ffffffff1660e01b8152600401611372929190918252602082015260400190565b600060405180830381600087803b15801561138c57600080fd5b505af11580156113a0573d6000803e3d6000fd5b505050505b6113ad611f07565b33600081815260a86020526040908190209290925560a354915163a9059cbb60e01b81526004810191909152602481018490526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561140f57600080fd5b505af1158015611423573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114479190612c2c565b5060408051338152602081018390527f1f89f96333d3133000ee447473151fa9606543368f02271c9d95ae14f13bcc67910160405180910390a150506001606555565b609754600160a01b900460ff16156114b45760405162461bcd60e51b815260040161098d90612f32565b6114cc604051806020016040528060008152506115af565b565b60a960205281600052604060002081815481106114ea57600080fd5b600091825260209091206003909102018054600182015460029092015490935090915083565b61151861295b565b60a0819055604051819033907f2858686d6b174bd2ec20e66464df68f4228dafa488e5a0b587356271ce26c50190600090a350565b606060a58054806020026020016040519081016040528092919081815260200182805480156115a557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611587575b5050505050905090565b609754600160a01b900460ff16156115d95760405162461bcd60e51b815260040161098d90612f32565b343368056bc75e2d631000008210156116255760405162461bcd60e51b815260206004820152600e60248201526d2732b2b21036b7b9329020a9aa2960911b604482015260640161098d565b6a52b7d2dcc80cd2e40000008260995461163f9190612fa7565b11156116815760405162461bcd60e51b8152602060048201526011602482015270151bdbc81b185c99d94819195c1bdcda5d607a1b604482015260640161098d565b33600090815260aa602052604090205460ff16156116f75760405162461bcd60e51b815260206004820152602d60248201527f526566657272616c20636f646573206861766520616c7265616479206265656e60448201526c103ab9b2b210313c903ab9b2b960991b606482015260840161098d565b604080516000815260208101808352815190209161171791869101612d96565b60405160208183030381529060405280519060200120146117665733600090815260aa60209081526040808320805460ff1916600117905560ac8252909120845161176492860190612b4c565b505b6001600160a01b038116600090815260a760205260408120805484929061178e908490612fa7565b9250508190555081609960008282546117a79190612fa7565b909155505060a4546098546040516352b73e4160e01b81526001600160a01b0391821660048201526001600160801b03851660248201529116906352b73e4190604401600060405180830381600087803b15801561180457600080fd5b505af1158015611818573d6000803e3d6000fd5b505050506001600160a01b038116600090815260a6602052604090205460ff166118a2576001600160a01b038116600081815260a660205260408120805460ff1916600190811790915560a5805491820181559091527fb29a2b3b6f2ff1b765777a231725941da5072cc4fcc30ac4a2ce09706e8ddeff0180546001600160a01b03191690911790555b60a2546040516340c10f1960e01b81526001600160a01b03838116600483015260248201859052909116906340c10f1990604401602060405180830381600087803b1580156118f057600080fd5b505af1158015611904573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119289190612c2c565b6119745760405162461bcd60e51b815260206004820152601760248201527f4572726f7220647572696e67206d696e74206141535452000000000000000000604482015260640161098d565b826040516119829190612d96565b6040519081900381203482529033907f72d0050d8f1a0f19ace5b1f50e8b5333308c60902442b7444a65cfffbad884e7906020015b60405180910390a3505050565b6119cc61295b565b60a1805460009091556119df3382612729565b60405181815233907fc5a3601bc424984ab8d0e98bd79347fa6ef2a340c30dde7340d02f923e6820ed9060200160405180910390a250565b611a1f61295b565b6000609d5411611a635760405162461bcd60e51b815260206004820152600f60248201526e4e6f20616e7920756e7374616b657360881b604482015260640161098d565b6004609b54600a611a749190613009565b611a7e9190612fe9565b609c54611a8c90600a613009565b611a969190612fa7565b611a9e611dca565b611aa990600a613009565b1015611b165760405162461bcd60e51b815260206004820152603660248201527f54686572652077617320616c726561647920676c6f62616c556e7374616b6520604482015275696e207468697320706572696f64206f662074696d6560501b606482015260840161098d565b6114cc612413565b609754600160a01b900460ff1615611b485760405162461bcd60e51b815260040161098d90612f32565b611b5061295b565b60978054600160a01b60ff60a01b1982161790915542609a81905560af5460b15460b25460b35460b45460405163310d94dd60e21b81526001600160a01b039097169663c436537496611bb6963096909591949093919260ff9091169190600401612e4d565b600060405180830381600087803b158015611bd057600080fd5b505af1158015611be4573d6000803e3d6000fd5b505050507f0624eb1de4b105b5373ba37db99731cb09d761de5b9373015805d8c47e7a6f1242604051611c1991815260200190565b60405180910390a1565b611c2b61295b565b6114cc60006129b5565b33600081815260ad60209081526040918290209151606093927fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47092611c7a9201612db2565b6040516020818303038152906040528051906020012014611cdd5760405162461bcd60e51b815260206004820152601a60248201527f5573657220697320616c72656164792061207265666572726572000000000000604482015260640161098d565b604080516001600160a01b0383166020808301919091524282840152825180830384018152606090920190925280519101206000611d246001600160e81b03198316612a07565b90508260ab82604051611d379190612d96565b908152604080516020928190038301902080546001600160a01b0319166001600160a01b03949094169390931790925533600090815260ad8252919091208251611d8392840190612b4c565b5080604051611d929190612d96565b6040519081900381209033907ffdd01b27191e72d589718f76e5754f96633f8f2c5fcdd018f05c88181032f0cf90600090a350505090565b60a4546040805163e608d80b60e01b815290516000926001600160a01b03169163e608d80b916004808301926020929190829003018186803b158015611e0f57600080fd5b505afa158015611e23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e479190612c4c565b905090565b6001600160a01b038116600090815260a86020526040812054611e6d611f07565b11611e7a57506000919050565b6001600160a01b038216600090815260a86020526040812054611e9b611f07565b611ea59190613056565b60b15460b2549192509082670de0b6b3a76400006a0211654585005212800000611ece88612ae0565b611ed89190613009565b611ee29190612fe9565b611eec9190613009565b611ef69190613009565b611f009190612fe9565b9392505050565b6000609a54600014158015611f1e5750609a544210155b611f755760405162461bcd60e51b815260206004820152602260248201527f56657374696e6720706572696f6420686173206e6f7420737461727465642079604482015261195d60f21b606482015260840161098d565b60b254609a5460009190611f899042613056565b611f939190612fe9565b60b25460b154919250600091611fa99190612fe9565b905080821115611fb95792915050565b50919050565b611fc761295b565b60a45460405163258d874360e11b81526001600160a01b0390911690634b1b0e8690611ff890600090600401612ed7565b600060405180830381600087803b15801561201257600080fd5b505af1158015612026573d6000803e3d6000fd5b50506040513392507f071887c03bab9c32311d166ea6fb805439a8a3765b0de8cb1f611799e84edf899150600090a2565b60ad60205260009081526040902080546111ea9061309d565b61207861295b565b6000612082611dca565b905080609f5414156120d65760405162461bcd60e51b815260206004820152601b60248201527f416c6c207265776172647320616c726561647920636c61696d65640000000000604482015260640161098d565b6000609f54826120e69190613056565b905060a0548111156120f7575060a0545b4760005b828110156122485760a45460985460405163505cec5f60e11b81526001600160a01b03918216600482015291169063a0b9d8be90602401600060405180830381600087803b15801561214c57600080fd5b505af192505050801561215d575060015b6121e5573d80801561218b576040519150601f19603f3d011682016040523d82523d6000602084013e612190565b606091505b508060405161219f9190612d96565b6040518091039020609f5460016121b69190612fa7565b6040517ffa856c428399288a6034f9c96d90c67dc025124c025cd92e228f9b795cd2ec8490600090a350612236565b6001609f60008282546121f89190612fa7565b9091555050609f5460405190815284907fe3ad3e6ae6e2f00623af1899e05e142e09f8af5b7f4e9b765d94646d6bb9b8929060200160405180910390a25b80612240816130d2565b9150506120fb565b50476122548282613056565b60a160008282546122659190612fa7565b909155508490507f1d37f71bdeb9f37b8aef735e93b33154911a15cae0fc0a473057a898be05c4a36122978484613056565b60405190815260200160405180910390a250505050565b6097546000906001600160a01b031663ea1bb3d56122ca612847565b6040518263ffffffff1660e01b81526004016122e891815260200190565b60206040518083038186803b158015611e0f57600080fd5b61230861295b565b6001600160a01b03811661236d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161098d565b612376816129b5565b50565b6001600160a01b038116600090815260a760205260408120546099546123aa906a0211654585005212800000612fe9565b6123b49190613009565b92915050565b60a581815481106123ca57600080fd5b6000918252602090912001546001600160a01b0316905081565b600054610100900460ff1661240b5760405162461bcd60e51b815260040161098d90612f5c565b6114cc612b1c565b600061241d611dca565b90506004609b54600a6124309190613009565b61243a9190612fe9565b609c5461244890600a613009565b6124529190612fa7565b61245d82600a613009565b10156124665750565b609d541561259e5760a454609d546040516363c20ee960e11b81523060048201526001600160801b0390911660248201526001600160a01b039091169063c7841dd290604401600060405180830381600087803b1580156124c657600080fd5b505af19250505080156124d7575060015b612557573d808015612505576040519150601f19603f3d011682016040523d82523d6000602084013e61250a565b606091505b50806040516125199190612d96565b604051809103902082609d547f832c31b2d0ce0c03d09e4e17ccd7312693af36ddd41c197ed1ed6c6dd58cb2ed60405160405180910390a45061259e565b807fd112be63e7fceb2dddc1fcf8ae6159d873af98be4505daee865e08f2aeae802d609d5460405161258b91815260200190565b60405180910390a26000609d55609c8190555b609d54604051829033907f69eadfdf59619a336dc106a730fa0ccf616ee1d058e409cd39f65f2a5ccdecae90600090a450565b60a45460408051633bd07f0160e11b8152905147926001600160a01b0316916377a0fe0291600480830192600092919082900301818387803b15801561261657600080fd5b505af1925050508015612627575060015b6126a1573d808015612655576040519150601f19603f3d011682016040523d82523d6000602084013e61265a565b606091505b50806040516126699190612d96565b6040519081900381209084907ff031b94d40b16f5c2b8213e25ea0f640687fa24e99f6a0ef56cdd46762434a2f90600090a3506126cc565b60405182907e973a60d81248412b3530a2ff12c475667dc3c0ece650fb361c044aa240565b90600090a25b476126d78282613056565b609e60008282546126e89190612fa7565b90915550839050337f7ae76c7ba85137a574da9e7ef1f16fcd73e8290df91265541d72f81c331862e061271b8585613056565b6040519081526020016119b7565b804710156127795760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161098d565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146127c6576040519150601f19603f3d011682016040523d82523d6000602084013e6127cb565b606091505b50509050806128425760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161098d565b505050565b60975460405163471121d160e01b815230600482015260009182916001916001600160a01b03169063471121d19060240160206040518083038186803b15801561289057600080fd5b505afa1580156128a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128c89190612c4c565b6128d29190613056565b60975460405163e5fe4dff60e01b8152306004820152602481018390529192506001600160a01b03169063e5fe4dff9060440160206040518083038186803b15801561291d57600080fd5b505afa158015612931573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129559190612c4c565b91505090565b6033546001600160a01b031633146114cc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161098d565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6060630f00000f60dc1b600f60dc1b600c84901c908116600f60f41b85161760081c60ff60e01b919091166001600160f81b031985161717600481811c92909216650f000f0f000f60d41b919091161780821c9190612a6f9060d41c65060606060606612fbf565b65ffffffffffff16901c650f0f0f0f0f0f166007612a8d9190613028565b612aa160d083901c65303030303030612fbf565b612aab9190612fbf565b60405160d09190911b6001600160d01b0319811660208301529150602601604051602081830303815290604052915050919050565b6099546001600160a01b038216600090815260a76020526040812054909190612b1290670de0b6b3a764000090613009565b6123b49190612fe9565b600054610100900460ff16612b435760405162461bcd60e51b815260040161098d90612f5c565b6114cc336129b5565b828054612b589061309d565b90600052602060002090601f016020900481019282612b7a5760008555612bc0565b82601f10612b9357805160ff1916838001178555612bc0565b82800160010185558215612bc0579182015b82811115612bc0578251825591602001919060010190612ba5565b50612bcc929150612bd0565b5090565b5b80821115612bcc5760008155600101612bd1565b600060208284031215612bf6578081fd5b8135611f0081613119565b60008060408385031215612c13578081fd5b8235612c1e81613119565b946020939093013593505050565b600060208284031215612c3d578081fd5b81518015158114611f00578182fd5b600060208284031215612c5d578081fd5b5051919050565b600080600080600060a08688031215612c7b578081fd5b8535612c8681613119565b94506020860135612c9681613119565b93506040860135612ca681613119565b92506060860135612cb681613119565b91506080860135612cc681613119565b809150509295509295909350565b600060208284031215612ce5578081fd5b813567ffffffffffffffff80821115612cfc578283fd5b818401915084601f830112612d0f578283fd5b813581811115612d2157612d21613103565b604051601f8201601f19908116603f01168101908382118183101715612d4957612d49613103565b81604052828152876020848701011115612d61578586fd5b826020860160208301379182016020019490945295945050505050565b600060208284031215612d8f578081fd5b5035919050565b60008251612da881846020870161306d565b9190910192915050565b600080835482600182811c915080831680612dce57607f831692505b6020808410821415612dee57634e487b7160e01b87526022600452602487fd5b818015612e025760018114612e1357612e3f565b60ff19861689528489019650612e3f565b60008a815260209020885b86811015612e375781548b820152908501908301612e1e565b505084890196505b509498975050505050505050565b6001600160a01b039790971687526020870195909552604086019390935260608501919091526080840152151560a083015260c082015260e00190565b6020808252825182820181905260009190848201906040850190845b81811015612ecb5783516001600160a01b031683529284019291840191600101612ea6565b50909695505050505050565b6020810160028310612ef957634e487b7160e01b600052602160045260246000fd5b91905290565b6020815260008251806020840152612f1e81604085016020870161306d565b601f01601f19169190910160400192915050565b60208082526010908201526f10dc9bddd91b1bd85b8818db1bdcd95960821b604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008219821115612fba57612fba6130ed565b500190565b600065ffffffffffff808316818516808303821115612fe057612fe06130ed565b01949350505050565b60008261300457634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615613023576130236130ed565b500290565b600065ffffffffffff8083168185168183048111821515161561304d5761304d6130ed565b02949350505050565b600082821015613068576130686130ed565b500390565b60005b83811015613088578181015183820152602001613070565b83811115613097576000848401525b50505050565b600181811c908216806130b157607f821691505b60208210811415611fb957634e487b7160e01b600052602260045260246000fd5b60006000198214156130e6576130e66130ed565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461237657600080fdfea2646970667358221220c1784352e17e7f2f8a303e1fa6e77f123e909f81047754ff472a548c72446ffe64736f6c634300080400330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220a49c88f6e5ac74a285b634e63f5c994a7b300c4ff721371774168cf3f7a44e6d64736f6c63430008040033",
    "sourceMap": "352:6514:68:-:0;;;1572:26:20;;;1594:4;-1:-1:-1;;1572:26:20;;;;;;;;3161:44:23;;;;;;;;;;;352:6514:68;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "352:6514:68:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;682:963;;;:::i;:::-;;2161:134:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;643:32:68;;;;;-1:-1:-1;;;;;643:32:68;;;;;;-1:-1:-1;;;;;3841:32:80;;;3823:51;;3811:2;3796:18;643:32:68;3778:102:80;1651:409:68;;;:::i;2930:133:26:-;;;:::i;2631:141::-;;;:::i;530:26:68:-;;;;;-1:-1:-1;;;;;530:26:68;;;395:19;;;;;-1:-1:-1;;;;;395:19:68;;;2427:863;;;:::i;2447:178:26:-;;;:::i;:::-;;;;;;;:::i;446:20:68:-;;;;;-1:-1:-1;;;;;446:20:68;;;604:33;;;;;-1:-1:-1;;;;;604:33:68;;;6237:314;;;:::i;5402:829::-;;;:::i;2301:140:26:-;;;:::i;:::-;;;;;;;:::i;2066:355:68:-;;;:::i;472:20::-;;;;;-1:-1:-1;;;;;472:20:68;;;2778:146:26;;;:::i;6557:307:68:-;;;:::i;3296:731::-;;;:::i;1866:141:26:-;;;:::i;420:20:68:-;;;;;-1:-1:-1;;;;;420:20:68;;;1819:584:20;;;:::i;:::-;;;8660:14:80;;8653:22;8635:41;;8623:2;8608:18;1819:584:20;8590:92:80;4033:605:68;;;:::i;2013:142:26:-;;;:::i;4644:752:68:-;;;:::i;562:36::-;;;;;-1:-1:-1;;;;;562:36:68;;;1572:26:20;;;;;;;;;499:25:68;;;;;-1:-1:-1;;;;;499:25:68;;;682:963;723:10;;-1:-1:-1;;;;;;723:10:68;;731:1;723:10;;;10358:25:80;-1:-1:-1;;;;;;;;;;;723:7:68;;;10331:18:80;;723:10:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;716:4;:17;;-1:-1:-1;;;;;;716:17:68;-1:-1:-1;;;;;716:17:68;;;;;;;;;;751:10;;-1:-1:-1;;;;;;751:10:68;;759:1;751:10;;;10358:25:80;-1:-1:-1;;;;;;;;;;;751:7:68;;;10331:18:80;;751:10:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;743:5;:18;;-1:-1:-1;;;;;;743:18:68;-1:-1:-1;;;;;743:18:68;;;;;;;;;;779:10;;-1:-1:-1;;;;;;779:10:68;;787:1;779:10;;;10358:25:80;-1:-1:-1;;;;;;;;;;;779:7:68;;;10331:18:80;;779:10:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;771:5;:18;;-1:-1:-1;;;;;;771:18:68;-1:-1:-1;;;;;771:18:68;;;;;;;;;;807:10;;-1:-1:-1;;;;;;807:10:68;;815:1;807:10;;;10358:25:80;-1:-1:-1;;;;;;;;;;;807:7:68;;;10331:18:80;;807:10:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;799:5;:18;;-1:-1:-1;;;;;;799:18:68;-1:-1:-1;;;;;799:18:68;;;;;;;;;828:20;;-1:-1:-1;;;828:20:68;;;;;3823:51:80;;;;-1:-1:-1;;;;;;;;;;;828:13:68;;;3796:18:80;;828:20:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;866:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;859:4:68;:33;;-1:-1:-1;;;;;859:33:68;;;;-1:-1:-1;;;;;;859:33:68;;;;;;;902:38;;-1:-1:-1;;;902:38:68;;:15;;:38;;;;13719:2:80;13701:21;;;13758:2;13738:18;;;13731:30;-1:-1:-1;;;13792:2:80;13777:18;;13770:41;13849:3;13842:4;13827:20;;13820:33;;;13890:1;13869:19;;;13862:30;-1:-1:-1;;;13923:3:80;13908:19;;13901:35;13968:3;13953:19;;13691:287;902:38:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;959:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;951:5:68;:34;;-1:-1:-1;;;;;;951:34:68;-1:-1:-1;;;;;951:34:68;;;;;;;;;995:40;;;-1:-1:-1;;;995:40:68;;;;;20771:21:80;;;;20828:2;20808:18;;;20801:30;-1:-1:-1;;;20847:18:80;;;20840:41;20919:3;20897:20;;;20890:33;20960:1;20939:19;;;20932:30;-1:-1:-1;;;20978:19:80;;;20971:36;995:16:68;;21024:19:80;;995:40:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1061:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1046:12:68;:37;;-1:-1:-1;;;;;;1046:37:68;-1:-1:-1;;;;;1046:37:68;;;;;;;;;;1104:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1094:7:68;:27;;-1:-1:-1;;;;;;1094:27:68;-1:-1:-1;;;;;1094:27:68;;;;;;;;;1150:4;;1131:24;;-1:-1:-1;;;1131:24:68;;1150:4;;1131:24;;;3823:51:80;1094:27:68;1131:18;;3796::80;;1131:24:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1171:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1166:2:68;:26;;-1:-1:-1;;;;;;1166:26:68;-1:-1:-1;;;;;1166:26:68;;;;;;;;;1229:7;;1282:5;;1310:4;;1337:12;;1202:158;;-1:-1:-1;;;1202:158:68;;1229:7;;;1202:158;;;9246:34:80;-1:-1:-1;9296:18:80;;;9289:43;1282:5:68;;;9348:18:80;;;9341:43;1310:4:68;;9400:18:80;;;9393:43;1337:12:68;;;9452:19:80;;;9445:44;1166:26:68;1202:13;;9180:19:80;;1202:158:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1371:4:68;;1389:7;;1371:33;;-1:-1:-1;;;1371:33:68;;-1:-1:-1;;;;;1389:7:68;;;1371:33;;;4059:51:80;1399:4:68;4126:18:80;;;4119:34;1371:4:68;;;-1:-1:-1;1371:9:68;;-1:-1:-1;4032:18:80;;1371:33:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1415:7:68;;1442:2;;1415:31;;-1:-1:-1;;;1415:31:68;;-1:-1:-1;;;;;1442:2:68;;;1415:31;;;3823:51:80;1415:7:68;;;:18;;3796::80;;1415:31:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;309:37:21;;-1:-1:-1;;;;;1457:12:68;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1490:4:68;;1482:25;;-1:-1:-1;;;1482:25:68;;-1:-1:-1;;;;;1490:4:68;;;1482:25;;;4059:51:80;-1:-1:-1;;;4126:18:80;;;4119:34;-1:-1:-1;;;;;;;;;;;1482:7:68;-1:-1:-1;1482:7:68;;-1:-1:-1;4032:18:80;;1482:25:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1546:5:68;;1538:26;;-1:-1:-1;;;1538:26:68;;-1:-1:-1;;;;;1546:5:68;;;1538:26;;;4059:51:80;-1:-1:-1;;;4126:18:80;;;4119:34;-1:-1:-1;;;;;;;;;;;1538:7:68;-1:-1:-1;1538:7:68;;-1:-1:-1;4032:18:80;;1538:26:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1612:12:68;;1596:42;;-1:-1:-1;;;1596:42:68;;-1:-1:-1;;;;;1612:12:68;;;1596:42;;;4059:51:80;1627:10:68;4126:18:80;;;4119:34;-1:-1:-1;;;;;;;;;;;1596:7:68;-1:-1:-1;1596:7:68;;-1:-1:-1;4032:18:80;;1596:42:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;682:963::o;2161:134:26:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:26;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;1651:409:68:-;1703:4;;1689:19;;-1:-1:-1;;;1689:19:68;;-1:-1:-1;;;;;1703:4:68;;;1689:19;;;3823:51:80;-1:-1:-1;;;;;;;;;;;1689:13:68;;;3796:18:80;;1689:19:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:2;;;;;;;;;-1:-1:-1;;;;;1718:2:68;-1:-1:-1;;;;;1718:8:68;;1734:10;1718:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1758:33:68;;-1:-1:-1;;;1758:33:68;;14587:2:80;1758:33:68;;;14569:21:80;14626:2;14606:18;;;14599:30;-1:-1:-1;;;14645:18:80;;;14638:44;-1:-1:-1;;;;;;;;;;;1758:15:68;-1:-1:-1;1758:15:68;;-1:-1:-1;14699:18:80;;;-1:-1:-1;1758:33:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1801:2;;;;;;;;;-1:-1:-1;;;;;1801:2:68;-1:-1:-1;;;;;1801:8:68;;1817:7;1801:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1838:36:68;;-1:-1:-1;;;1838:36:68;;21255:2:80;1838:36:68;;;21237:21:80;21294:2;21274:18;;;21267:30;-1:-1:-1;;;21313:18:80;;;21306:47;-1:-1:-1;;;;;;;;;;;1838:15:68;-1:-1:-1;1838:15:68;;-1:-1:-1;21370:18:80;;;-1:-1:-1;1838:36:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1884:2;;;;;;;;;-1:-1:-1;;;;;1884:2:68;-1:-1:-1;;;;;1884:8:68;;1900:17;1884:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;309:37:21;;-1:-1:-1;;;;;1930:12:68;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1964:5:68;;1955:15;;-1:-1:-1;;;1955:15:68;;-1:-1:-1;;;;;1964:5:68;;;1955:15;;;3823:51:80;-1:-1:-1;;;;;;;;;;;1955:8:68;-1:-1:-1;1955:8:68;;-1:-1:-1;3796:18:80;;1955:15:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1980:2;;;;;;;;;-1:-1:-1;;;;;1980:2:68;-1:-1:-1;;;;;1980:17:68;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2019:5:68;;2035:4;;2019:21;;-1:-1:-1;;;2019:21:68;;-1:-1:-1;;;;;2035:4:68;;;2019:21;;;3823:51:80;2010:43:68;;-1:-1:-1;2019:5:68;;;-1:-1:-1;2019:15:68;;3796:18:80;;2019:21:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2042:10;2010:8;:43::i;:::-;1651:409::o;2930:133:26:-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:26;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:26;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;2427:863:68:-;2481:4;;2472:14;;-1:-1:-1;;;2472:14:68;;-1:-1:-1;;;;;2481:4:68;;;2472:14;;;3823:51:80;-1:-1:-1;;;;;;;;;;;2472:8:68;;;3796:18:80;;2472:14:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2496:2;;;;;;;;;-1:-1:-1;;;;;2496:2:68;-1:-1:-1;;;;;2496:8:68;;2512:10;2496:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2587:5:68;;2578:15;;-1:-1:-1;;;2578:15:68;;-1:-1:-1;;;;;2587:5:68;;;2578:15;;;3823:51:80;-1:-1:-1;;;;;;;;;;;2578:8:68;-1:-1:-1;2578:8:68;;-1:-1:-1;3796:18:80;;;-1:-1:-1;2578:15:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2603:2;;;;;;;;;-1:-1:-1;;;;;2603:2:68;-1:-1:-1;;;;;2603:8:68;;2619:10;2603:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2652:5:68;;2643:15;;-1:-1:-1;;;2643:15:68;;-1:-1:-1;;;;;2652:5:68;;;2643:15;;;3823:51:80;-1:-1:-1;;;;;;;;;;;2643:8:68;-1:-1:-1;2643:8:68;;-1:-1:-1;3796:18:80;;;-1:-1:-1;2643:15:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2668:2;;;;;;;;;-1:-1:-1;;;;;2668:2:68;-1:-1:-1;;;;;2668:17:68;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2737:4:68;;2723:19;;-1:-1:-1;;;2723:19:68;;-1:-1:-1;;;;;2737:4:68;;;2723:19;;;3823:51:80;-1:-1:-1;;;;;;;;;;;2723:13:68;-1:-1:-1;2723:13:68;;-1:-1:-1;3796:18:80;;2723:19:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2761:20:68;;-1:-1:-1;;;2761:20:68;;2769:11;2761:20;;;10358:25:80;-1:-1:-1;;;;;;;;;;;2761:7:68;-1:-1:-1;2761:7:68;;-1:-1:-1;10331:18:80;;2761:20:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2836:2:68;;2863:4;;2836:32;;-1:-1:-1;;;2836:32:68;;-1:-1:-1;;;;;2863:4:68;;;2836:32;;;3823:51:80;2809:24:68;;-1:-1:-1;2836:2:68;;;-1:-1:-1;2836:26:68;;3796:18:80;;2836:32:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2809:59;;2878:2;;;;;;;;;-1:-1:-1;;;;;2878:2:68;-1:-1:-1;;;;;2878:15:68;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2905:13;2952:1;2948;2921:2;;;;;;;;;-1:-1:-1;;;;;2921:2:68;-1:-1:-1;;;;;2921:22:68;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:28;;;;:::i;:::-;:32;;;;:::i;:::-;2905:48;;2963:33;2972:5;2979:16;2963:8;:33::i;:::-;3015:4;;3030;;3015:20;;-1:-1:-1;;;3015:20:68;;-1:-1:-1;;;;;3030:4:68;;;3015:20;;;3823:51:80;3006:37:68;;3015:4;;;;;:14;;3796:18:80;;3015:20:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3037:5;3006:8;:37::i;:::-;3054:24;;-1:-1:-1;;;3054:24:68;;3062:15;3054:24;;;10358:25:80;-1:-1:-1;;;;;;;;;;;3054:7:68;;;10331:18:80;;3054:24:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3160:2;;;;;;;;;-1:-1:-1;;;;;3160:2:68;-1:-1:-1;;;;;3160:15:68;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3188:13;3231:1;3204:2;;;;;;;;;-1:-1:-1;;;;;3204:2:68;-1:-1:-1;;;;;3204:22:68;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:28;;;;:::i;:::-;3251:4;;3266;;3251:20;;-1:-1:-1;;;3251:20:68;;-1:-1:-1;;;;;3266:4:68;;;3251:20;;;3823:51:80;3188:44:68;;-1:-1:-1;3242:41:68;;3251:4;;;:14;;3796:18:80;;3251:20:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:24;;3274:1;3251:24;:::i;3242:41::-;2427:863;;;:::o;2447:178:26:-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;6237:314:68:-;6289:4;;6280:14;;-1:-1:-1;;;6280:14:68;;-1:-1:-1;;;;;6289:4:68;;;6280:14;;;3823:51:80;-1:-1:-1;;;;;;;;;;;6280:8:68;;;3796:18:80;;6280:14:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6304:2;;;;;;;;;-1:-1:-1;;;;;6304:2:68;-1:-1:-1;;;;;6304:8:68;;6320:10;6304:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6353:5:68;;6344:15;;-1:-1:-1;;;6344:15:68;;-1:-1:-1;;;;;6353:5:68;;;6344:15;;;3823:51:80;-1:-1:-1;;;;;;;;;;;6344:8:68;-1:-1:-1;6344:8:68;;-1:-1:-1;3796:18:80;;;-1:-1:-1;6344:15:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6369:2;;;;;;;;;-1:-1:-1;;;;;6369:2:68;-1:-1:-1;;;;;6369:8:68;;6385:10;6369:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6409:20:68;;-1:-1:-1;6446:1:68;;-1:-1:-1;6432:16:68;;-1:-1:-1;;6432:16:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6432:16:68;;6409:39;;6464:2;;;;;;;;;-1:-1:-1;;;;;6464:2:68;-1:-1:-1;;;;;6464:13:68;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6464:15:68;;;;;;;;;;;;:::i;:::-;6458:21;;6489:22;6498:3;6502:1;6498:6;;;;;;-1:-1:-1;;;6498:6:68;;;;;;;;;;;;;;;;;;;6506:4;;-1:-1:-1;;;;;6506:4:68;6489:8;:22::i;:::-;6521:23;6530:3;6534:1;6530:6;;;;;;-1:-1:-1;;;6530:6:68;;;;;;;;;;;;;;;;;;;6538:5;;-1:-1:-1;;;;;6538:5:68;6521:8;:23::i;:::-;6237:314;:::o;5402:829::-;5453:34;;-1:-1:-1;;;5453:34:68;;13274:2:80;5453:34:68;;;13256:21:80;13313:2;13293:18;;;13286:30;-1:-1:-1;;;13332:18:80;;;13325:45;-1:-1:-1;;;;;;;;;;;5453:15:68;;;13387:18:80;;5453:34:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5506:5:68;;5497:15;;-1:-1:-1;;;5497:15:68;;-1:-1:-1;;;;;5506:5:68;;;5497:15;;;3823:51:80;-1:-1:-1;;;;;;;;;;;5497:8:68;-1:-1:-1;5497:8:68;;-1:-1:-1;3796:18:80;;5497:15:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5522:2;;;;;;;;;-1:-1:-1;;;;;5522:2:68;-1:-1:-1;;;;;5522:21:68;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5565:4:68;;5556:14;;-1:-1:-1;;;5556:14:68;;-1:-1:-1;;;;;5565:4:68;;;5556:14;;;3823:51:80;-1:-1:-1;;;;;;;;;;;5556:8:68;-1:-1:-1;5556:8:68;;-1:-1:-1;3796:18:80;;5556:14:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5580:2;;;;;;;;;-1:-1:-1;;;;;5580:2:68;-1:-1:-1;;;;;5580:8:68;;5596:10;5580:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5629:5:68;;5620:15;;-1:-1:-1;;;5620:15:68;;-1:-1:-1;;;;;5629:5:68;;;5620:15;;;3823:51:80;-1:-1:-1;;;;;;;;;;;5620:8:68;-1:-1:-1;5620:8:68;;-1:-1:-1;3796:18:80;;;-1:-1:-1;5620:15:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5645:2;;;;;;;;;-1:-1:-1;;;;;5645:2:68;-1:-1:-1;;;;;5645:8:68;;5661:10;5645:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5694:5:68;;5685:15;;-1:-1:-1;;;5685:15:68;;-1:-1:-1;;;;;5694:5:68;;;5685:15;;;3823:51:80;-1:-1:-1;;;;;;;;;;;5685:8:68;-1:-1:-1;5685:8:68;;-1:-1:-1;3796:18:80;;;-1:-1:-1;5685:15:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5710:2;;;;;;;;;-1:-1:-1;;;;;5710:2:68;-1:-1:-1;;;;;5710:17:68;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5748:24:68;;-1:-1:-1;;;5748:24:68;;5756:15;5748:24;;;10358:25:80;-1:-1:-1;;;;;;;;;;;5748:7:68;-1:-1:-1;5748:7:68;;-1:-1:-1;10331:18:80;;5748:24:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5792:4:68;;5783:14;;-1:-1:-1;;;5783:14:68;;-1:-1:-1;;;;;5792:4:68;;;5783:14;;;3823:51:80;-1:-1:-1;;;;;;;;;;;5783:8:68;-1:-1:-1;5783:8:68;;-1:-1:-1;3796:18:80;;5783:14:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5807:2;;;;;;;;;-1:-1:-1;;;;;5807:2:68;-1:-1:-1;;;;;5807:10:68;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5839:5:68;;5830:15;;-1:-1:-1;;;5830:15:68;;-1:-1:-1;;;;;5839:5:68;;;5830:15;;;3823:51:80;-1:-1:-1;;;;;;;;;;;5830:8:68;-1:-1:-1;5830:8:68;;-1:-1:-1;3796:18:80;;5830:15:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5855:34:68;;-1:-1:-1;;;5855:34:68;;13274:2:80;5855:34:68;;;13256:21:80;13313:2;13293:18;;;13286:30;-1:-1:-1;;;13332:18:80;;;13325:45;-1:-1:-1;;;;;;;;;;;5855:15:68;-1:-1:-1;5855:15:68;;-1:-1:-1;13387:18:80;;5855:34:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5899:2;;;;;;;;;-1:-1:-1;;;;;5899:2:68;-1:-1:-1;;;;;5899:21:68;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5950:5:68;;5941:15;;-1:-1:-1;;;5941:15:68;;-1:-1:-1;;;;;5950:5:68;;;5941:15;;;3823:51:80;-1:-1:-1;;;;;;;;;;;5941:8:68;-1:-1:-1;5941:8:68;;-1:-1:-1;3796:18:80;;5941:15:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5966:2;;;;;;;;;-1:-1:-1;;;;;5966:2:68;-1:-1:-1;;;;;5966:10:68;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6002:5:68;;5993:15;;-1:-1:-1;;;5993:15:68;;-1:-1:-1;;;;;6002:5:68;;;5993:15;;;3823:51:80;-1:-1:-1;;;;;;;;;;;5993:8:68;-1:-1:-1;5993:8:68;;-1:-1:-1;3796:18:80;;5993:15:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6018:73:68;;-1:-1:-1;;;6018:73:68;;19088:2:80;6018:73:68;;;19070:21:80;19127:2;19107:18;;;19100:30;19166:34;19146:18;;;19139:62;-1:-1:-1;;;19217:18:80;;;19210:52;-1:-1:-1;;;;;;;;;;;6018:15:68;-1:-1:-1;6018:15:68;;-1:-1:-1;19279:19:80;;6018:73:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6101:2;;;;;;;;;-1:-1:-1;;;;;6101:2:68;-1:-1:-1;;;;;6101:21:68;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6135:30:68;;-1:-1:-1;;;6135:30:68;;6143:21;6135:30;;;10358:25:80;-1:-1:-1;;;;;;;;;;;6135:7:68;-1:-1:-1;6135:7:68;;-1:-1:-1;10331:18:80;;6135:30:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6185:5:68;;6176:15;;-1:-1:-1;;;6176:15:68;;-1:-1:-1;;;;;6185:5:68;;;6176:15;;;3823:51:80;-1:-1:-1;;;;;;;;;;;6176:8:68;-1:-1:-1;6176:8:68;;-1:-1:-1;3796:18:80;;6176:15:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6201:2;;;;;;;;;-1:-1:-1;;;;;6201:2:68;-1:-1:-1;;;;;6201:21:68;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2301:140:26;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2066:355:68;2122:4;;2113:14;;-1:-1:-1;;;2113:14:68;;-1:-1:-1;;;;;2122:4:68;;;2113:14;;;3823:51:80;-1:-1:-1;;;;;;;;;;;2113:8:68;;;3796:18:80;;2113:14:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2137:51:68;;-1:-1:-1;;;2137:51:68;;16441:2:80;2137:51:68;;;16423:21:80;;;16460:18;;;16453:30;16519:34;16499:18;;;16492:62;-1:-1:-1;;;;;;;;;;;2137:15:68;-1:-1:-1;2137:15:68;;-1:-1:-1;16571:18:80;;2137:51:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2198:2;;;;;;;;;-1:-1:-1;;;;;2198:2:68;-1:-1:-1;;;;;2198:17:68;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2242:5:68;;2228:20;;-1:-1:-1;;;2228:20:68;;-1:-1:-1;;;;;2242:5:68;;;2228:20;;;3823:51:80;-1:-1:-1;;;;;;;;;;;2228:13:68;-1:-1:-1;2228:13:68;;-1:-1:-1;3796:18:80;;2228:20:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2258:2;;;;;;;;;-1:-1:-1;;;;;2258:2:68;-1:-1:-1;;;;;2258:17:68;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2287:27;2296:2;;;;;;;;;-1:-1:-1;;;;;2296:2:68;-1:-1:-1;;;;;2296:9:68;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2309:4;2287:8;:27::i;:::-;2325:35;;-1:-1:-1;;;2325:35:68;;14929:2:80;2325:35:68;;;14911:21:80;14968:2;14948:18;;;14941:30;-1:-1:-1;;;14987:18:80;;;14980:46;-1:-1:-1;;;;;;;;;;;2325:15:68;;;15043:18:80;;2325:35:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2370:2;;;;;;;;;-1:-1:-1;;;;;2370:2:68;-1:-1:-1;;;;;2370:17:68;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;309:37:21;;-1:-1:-1;;;;;2400:12:68;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146:26;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6557:307:68;6609:4;;6600:14;;-1:-1:-1;;;6600:14:68;;-1:-1:-1;;;;;6609:4:68;;;6600:14;;;3823:51:80;-1:-1:-1;;;;;;;;;;;6600:8:68;;;3796:18:80;;6600:14:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6624:65:68;;-1:-1:-1;;;6624:65:68;;15624:2:80;6624:65:68;;;15606:21:80;15663:2;15643:18;;;15636:30;15702:34;15682:18;;;15675:62;-1:-1:-1;;;15753:18:80;;;15746:44;-1:-1:-1;;;;;;;;;;;6624:15:68;-1:-1:-1;6624:15:68;;-1:-1:-1;15807:19:80;;6624:65:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6699:2:68;;6726:7;;6779:5;;6807:4;;6834:12;;6699:158;;-1:-1:-1;;;6699:158:68;;-1:-1:-1;;;;;6726:7:68;;;6699:158;;;9246:34:80;6699:2:68;9296:18:80;;;9289:43;6779:5:68;;;9348:18:80;;;9341:43;6807:4:68;;;9400:18:80;;;9393:43;6834:12:68;;9452:19:80;;;9445:44;6699:2:68;;;-1:-1:-1;6699:13:68;;-1:-1:-1;9180:19:80;;6699:158:68;9162:333:80;3296:731:68;3350:4;;3336:19;;-1:-1:-1;;;3336:19:68;;-1:-1:-1;;;;;3350:4:68;;;3336:19;;;3823:51:80;-1:-1:-1;;;;;;;;;;;3336:13:68;;;3796:18:80;;3336:19:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3365:2;;;;;;;;;-1:-1:-1;;;;;3365:2:68;-1:-1:-1;;;;;3365:8:68;;3381:10;3365:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3405:39:68;;-1:-1:-1;;;3405:39:68;;12525:2:80;3405:39:68;;;12507:21:80;12564:2;12544:18;;;12537:30;-1:-1:-1;;;12583:18:80;;;12576:50;-1:-1:-1;;;;;;;;;;;3405:15:68;-1:-1:-1;3405:15:68;;-1:-1:-1;12643:18:80;;;-1:-1:-1;3405:39:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3454:2;;;;;;;;;-1:-1:-1;;;;;3454:2:68;-1:-1:-1;;;;;3454:10:68;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;309:37:21;;-1:-1:-1;;;;;3476:12:68;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3510:5:68;;3501:15;;-1:-1:-1;;;3501:15:68;;-1:-1:-1;;;;;3510:5:68;;;3501:15;;;3823:51:80;-1:-1:-1;;;;;;;;;;;3501:8:68;-1:-1:-1;3501:8:68;;-1:-1:-1;3796:18:80;;3501:15:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3526:2;;;;;;;;;-1:-1:-1;;;;;3526:2:68;-1:-1:-1;;;;;3526:17:68;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3565:4:68;;3556:14;;-1:-1:-1;;;3556:14:68;;-1:-1:-1;;;;;3565:4:68;;;3556:14;;;3823:51:80;-1:-1:-1;;;;;;;;;;;3556:8:68;-1:-1:-1;3556:8:68;;-1:-1:-1;3796:18:80;;3556:14:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3580:52:68;;-1:-1:-1;;;3580:52:68;;12873:2:80;3580:52:68;;;12855:21:80;12912:2;12892:18;;;12885:30;12951:34;12931:18;;;12924:62;-1:-1:-1;;;13002:18:80;;;12995:31;-1:-1:-1;;;;;;;;;;;3580:15:68;-1:-1:-1;3580:15:68;;-1:-1:-1;13043:19:80;;3580:52:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3642:2;;;;;;;;;-1:-1:-1;;;;;3642:2:68;-1:-1:-1;;;;;3642:10:68;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3665:20:68;;-1:-1:-1;;;3665:20:68;;3673:11;3665:20;;;10358:25:80;-1:-1:-1;;;;;;;;;;;3665:7:68;-1:-1:-1;3665:7:68;;-1:-1:-1;10331:18:80;;3665:20:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3705:5:68;;3696:15;;-1:-1:-1;;;3696:15:68;;-1:-1:-1;;;;;3705:5:68;;;3696:15;;;3823:51:80;-1:-1:-1;;;;;;;;;;;3696:8:68;-1:-1:-1;3696:8:68;;-1:-1:-1;3796:18:80;;3696:15:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3721:40:68;;-1:-1:-1;;;3721:40:68;;18739:2:80;3721:40:68;;;18721:21:80;18778:2;18758:18;;;18751:30;-1:-1:-1;;;18797:18:80;;;18790:51;-1:-1:-1;;;;;;;;;;;3721:15:68;-1:-1:-1;3721:15:68;;-1:-1:-1;18858:18:80;;3721:40:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3771:2;;;;;;;;;-1:-1:-1;;;;;3771:2:68;-1:-1:-1;;;;;3771:10:68;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3808:4:68;;3794:19;;-1:-1:-1;;;3794:19:68;;-1:-1:-1;;;;;3808:4:68;;;3794:19;;;3823:51:80;-1:-1:-1;;;;;;;;;;;3794:13:68;-1:-1:-1;3794:13:68;;-1:-1:-1;3796:18:80;;3794:19:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3823:2;;;;;;;;;-1:-1:-1;;;;;3823:2:68;-1:-1:-1;;;;;3823:15:68;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3850:2;;;;;;;;;-1:-1:-1;;;;;3850:2:68;-1:-1:-1;;;;;3850:10:68;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;309:37:21;;-1:-1:-1;;;;;3872:12:68;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3906:5:68;;3922:4;;3906:21;;-1:-1:-1;;;3906:21:68;;-1:-1:-1;;;;;3922:4:68;;;3906:21;;;3823:51:80;3897:34:68;;-1:-1:-1;3906:5:68;;;-1:-1:-1;3906:15:68;;3796:18:80;;3906:21:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3929:1;3897:8;:34::i;:::-;3962:2;;3977:4;;3962:23;;-1:-1:-1;;;3962:23:68;;-1:-1:-1;;;;;3977:4:68;;;3962:23;;;4059:51:80;3943:11:68;4126:18:80;;;4119:34;;;3943:11:68;3962:2;;;;;:14;;4032:18:80;;3962:23:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3942:43;;;;3995:25;4004:3;4009:10;3995:8;:25::i;1866:141:26:-;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:20;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:20;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2985:55:20;3066:16;1980:374;;2196:43;;;-1:-1:-1;;;;;;;;;;;2196:43:20;;;4059:51:80;;;-1:-1:-1;;;4126:18:80;;;4119:34;2196:43:20;;;;;;;;;4032:18:80;;;2196:43:20;;;-1:-1:-1;;1671:64:20;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:20;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;1980:374;;2374:12;1819:584;-1:-1:-1;1819:584:20:o;4033:605:68:-;4106:4;;4097:14;;-1:-1:-1;;;4097:14:68;;-1:-1:-1;;;;;4106:4:68;;;4097:14;;;3823:51:80;4074:12:68;;-1:-1:-1;;;;;;;;;;;4097:8:68;;;3796:18:80;;4097:14:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4121:2;;;;;;;;;-1:-1:-1;;;;;4121:2:68;-1:-1:-1;;;;;4121:8:68;;4137:10;4121:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4176:2:68;;4160:23;;-1:-1:-1;;;4160:23:68;;-1:-1:-1;;;;;4176:2:68;;;4160:23;;;4059:51:80;309:37:21;4126:18:80;;;4119:34;-1:-1:-1;;;;;;;;;;;4160:7:68;-1:-1:-1;4160:7:68;;-1:-1:-1;4032:18:80;;;-1:-1:-1;4160:23:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4245:5:68;;4236:15;;-1:-1:-1;;;4236:15:68;;-1:-1:-1;;;;;4245:5:68;;;4236:15;;;3823:51:80;-1:-1:-1;;;;;;;;;;;4236:8:68;-1:-1:-1;4236:8:68;;-1:-1:-1;3796:18:80;;4236:15:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4261:2;;;;;;;;;-1:-1:-1;;;;;4261:2:68;-1:-1:-1;;;;;4261:17:68;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4331:13:68;;-1:-1:-1;;;4331:13:68;;4306:15;4331:13;;;10358:25:80;;;4306:15:68;-1:-1:-1;;;;;;;;;;;;4331:7:68;-1:-1:-1;4331:7:68;;-1:-1:-1;10331:18:80;;4331:13:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4369:4:68;;4355:19;;-1:-1:-1;;;4355:19:68;;-1:-1:-1;;;;;4369:4:68;;;4355:19;;;3823:51:80;-1:-1:-1;;;;;;;;;;;4355:13:68;-1:-1:-1;4355:13:68;;-1:-1:-1;3796:18:80;;4355:19:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4384:2;;;;;;;;;-1:-1:-1;;;;;4384:2:68;-1:-1:-1;;;;;4384:10:68;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4407:42:68;;-1:-1:-1;;;4407:42:68;;15273:2:80;4407:42:68;;;15255:21:80;15312:2;15292:18;;;15285:30;15351:25;15331:18;;;15324:53;-1:-1:-1;;;;;;;;;;;4407:15:68;-1:-1:-1;4407:15:68;;-1:-1:-1;15394:18:80;;4407:42:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4459:2:68;;:14;;-1:-1:-1;;;4459:14:68;;:2;:14;;;10358:25:80;-1:-1:-1;;;;;4459:2:68;;;;-1:-1:-1;4459:11:68;;-1:-1:-1;10331:18:80;;4459:14:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;4484:7:68;-1:-1:-1;4484:7:68;;-1:-1:-1;4492:14:68;;-1:-1:-1;4492:4:68;4499:7;4492:14;:::i;:::-;4484:23;;;;;;;;;;;;;10358:25:80;;10346:2;10331:18;;10313:76;4484:23:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4538:4:68;;4561:2;;:14;;-1:-1:-1;;;4561:14:68;;4518:17;4561:14;;;10358:25:80;-1:-1:-1;;;;;4538:4:68;;;:12;;-1:-1:-1;4561:2:68;;;-1:-1:-1;4561:11:68;;10331:18:80;;4561:14:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4594:4:68;;4585:46;;-1:-1:-1;;;;;;4594:4:68;:12;;-1:-1:-1;4608:22:68;:9;4620:10;4608:22;:::i;:::-;4585:8;:46::i;:::-;4033:605;;:::o;2013:142:26:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:26;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;4644:752:68:-;4732:4;;4723:14;;-1:-1:-1;;;4723:14:68;;-1:-1:-1;;;;;4732:4:68;;;4723:14;;;3823:51:80;4700:12:68;;-1:-1:-1;;;;;;;;;;;4723:8:68;;;3796:18:80;;4723:14:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4747:2;;;;;;;;;-1:-1:-1;;;;;4747:2:68;-1:-1:-1;;;;;4747:8:68;;4763:10;4747:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4802:2:68;;4786:23;;-1:-1:-1;;;4786:23:68;;-1:-1:-1;;;;;4802:2:68;;;4786:23;;;4059:51:80;309:37:21;4126:18:80;;;4119:34;-1:-1:-1;;;;;;;;;;;4786:7:68;-1:-1:-1;4786:7:68;;-1:-1:-1;4032:18:80;;;-1:-1:-1;4786:23:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4871:5:68;;4862:15;;-1:-1:-1;;;4862:15:68;;-1:-1:-1;;;;;4871:5:68;;;4862:15;;;3823:51:80;-1:-1:-1;;;;;;;;;;;4862:8:68;-1:-1:-1;4862:8:68;;-1:-1:-1;3796:18:80;;4862:15:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4887:2;;;;;;;;;-1:-1:-1;;;;;4887:2:68;-1:-1:-1;;;;;4887:17:68;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4957:13:68;;-1:-1:-1;;;4957:13:68;;4932:15;4957:13;;;10358:25:80;;;4932:15:68;-1:-1:-1;;;;;;;;;;;;4957:7:68;-1:-1:-1;4957:7:68;;-1:-1:-1;10331:18:80;;4957:13:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4980:11:68;;-1:-1:-1;;;4980:11:68;;4988:2;4980:11;;;10358:25:80;-1:-1:-1;;;;;;;;;;;4980:7:68;-1:-1:-1;4980:7:68;;-1:-1:-1;10331:18:80;;4980:11:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5016:5:68;;5002:20;;-1:-1:-1;;;5002:20:68;;-1:-1:-1;;;;;5016:5:68;;;5002:20;;;3823:51:80;-1:-1:-1;;;;;;;;;;;5002:13:68;-1:-1:-1;5002:13:68;;-1:-1:-1;3796:18:80;;5002:20:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5032:2;;;;;;;;;-1:-1:-1;;;;;5032:2:68;-1:-1:-1;;;;;5032:26:68;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5071:2:68;;:26;;-1:-1:-1;;;5071:26:68;;5093:3;5071:26;;;10358:25:80;-1:-1:-1;;;;;5071:2:68;;;;-1:-1:-1;5071:21:68;;-1:-1:-1;10331:18:80;;5071:26:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5107:2;;;;;;;;;-1:-1:-1;;;;;5107:2:68;-1:-1:-1;;;;;5107:26:68;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5146:46:68;;-1:-1:-1;;;5146:46:68;;18384:2:80;5146:46:68;;;18366:21:80;18423:2;18403:18;;;18396:30;18462:29;18442:18;;;18435:57;-1:-1:-1;;;;;;;;;;;5146:15:68;-1:-1:-1;5146:15:68;;-1:-1:-1;18509:18:80;;5146:46:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5202:2;;;;;;;;;-1:-1:-1;;;;;5202:2:68;-1:-1:-1;;;;;5202:26:68;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5241:14;5258:2;;;;;;;;;-1:-1:-1;;;;;5258:2:68;-1:-1:-1;;;;;5258:22:68;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5241:41;;5292:2;;;;;;;;;-1:-1:-1;;;;;5292:2:68;-1:-1:-1;;;;;5292:30:68;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5343:5:68;;5334:31;;-1:-1:-1;;;;;;5343:5:68;:13;;-1:-1:-1;5358:6:68;5334:8;:31::i;:::-;-1:-1:-1;;;;;;;;;;;309:37:21;;-1:-1:-1;;;;;5375:12:68;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4644:752;;:::o;5209:262:20:-;5271:1;5266;:6;5262:203;;5293:41;;;;;14185:2:80;14167:21;;;14224:2;14204:18;;;14197:30;14263:34;14258:2;14243:18;;14236:62;-1:-1:-1;;;14329:2:80;14314:18;;14307:32;14371:3;14356:19;;14157:224;5293:41:20;;;;;;;;5353:31;5382:1;5353:31;;;;;;:::i;:::-;;;;;;;;5403;5432:1;5403:31;;;;;;:::i;:::-;;;;;;;;5448:6;:4;:6::i;3622:277::-;3690:1;-1:-1:-1;;;;;3685:6:20;:1;-1:-1:-1;;;;;3685:6:20;;3681:212;;3712:44;;;;;16802:2:80;16784:21;;;16841:2;16821:18;;;16814:30;16880:34;16875:2;16860:18;;16853:62;-1:-1:-1;;;16946:2:80;16931:18;;16924:35;16991:3;16976:19;;16774:227;3712:44:20;;;;;;;;3775:34;3807:1;3775:34;;;;;;:::i;:::-;;;;;;;;3828;3860:1;3828:34;;;;;;:::i;789:312:22:-;859:1;854:6;;:1;:6;;;850:245;;881:41;;;;;16039:2:80;16021:21;;;16078:2;16058:18;;;16051:30;16117:34;16112:2;16097:18;;16090:62;-1:-1:-1;;;16183:2:80;16168:18;;16161:32;16225:3;16210:19;;16011:224;881:41:22;;;;;;;;941:52;972:1;:20;;;;;;;;;;;;;;;-1:-1:-1;;;972:20:22;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;972:20:22;;;;941:52;;;;;;:::i;:::-;;;;;;;;1012;1043:1;:20;;;;;;;;;;;;;;;-1:-1:-1;;;1043:20:22;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1043:20:22;;;;1012:52;;;;;;:::i;2409:432:20:-;-1:-1:-1;;;;;;;;;;;2985:55:20;3066:16;2452:359;;2652:67;;;-1:-1:-1;;;;;;;;;;;2652:67:20;;;4366:51:80;;;-1:-1:-1;;;4433:18:80;;;4426:34;;;;2712:4:20;4476:18:80;;;4469:34;2489:11:20;;1671:64;2586:43;;4339:18:80;;2652:67:20;;;-1:-1:-1;;2652:67:20;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:20;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:20;2820:7;:14;;-1:-1:-1;;2820:14:20;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:177:80:-;93:13;;-1:-1:-1;;;;;135:31:80;;125:42;;115:2;;181:1;178;171:12;196:218;266:6;319:2;307:9;298:7;294:23;290:32;287:2;;;340:6;332;325:22;287:2;368:40;398:9;368:40;:::i;:::-;358:50;277:137;-1:-1:-1;;;277:137:80:o;419:1185::-;514:6;545:2;588;576:9;567:7;563:23;559:32;556:2;;;609:6;601;594:22;556:2;647:9;641:16;676:18;717:2;709:6;706:14;703:2;;;738:6;730;723:22;703:2;781:6;770:9;766:22;756:32;;826:7;819:4;815:2;811:13;807:27;797:2;;853:6;845;838:22;797:2;887;881:9;909:2;905;902:10;899:2;;;915:18;;:::i;:::-;961:2;958:1;954:10;993:2;987:9;1056:2;1052:7;1047:2;1043;1039:11;1035:25;1027:6;1023:38;1111:6;1099:10;1096:22;1091:2;1079:10;1076:18;1073:46;1070:2;;;1122:18;;:::i;:::-;1158:2;1151:22;1208:18;;;1242:15;;;;-1:-1:-1;1277:11:80;;;1307;;;1303:20;;1300:33;-1:-1:-1;1297:2:80;;;1351:6;1343;1336:22;1297:2;1378:6;1369:15;;1393:180;1407:2;1404:1;1401:9;1393:180;;;1464:34;1494:3;1464:34;:::i;:::-;1452:47;;1425:1;1418:9;;;;;1519:12;;;;1551;;1393:180;;;-1:-1:-1;1592:6:80;525:1079;-1:-1:-1;;;;;;;;525:1079:80:o;1609:297::-;1676:6;1729:2;1717:9;1708:7;1704:23;1700:32;1697:2;;;1750:6;1742;1735:22;1697:2;1787:9;1781:16;1840:5;1833:13;1826:21;1819:5;1816:32;1806:2;;1867:6;1859;1852:22;1911:194;1981:6;2034:2;2022:9;2013:7;2009:23;2005:32;2002:2;;;2055:6;2047;2040:22;2002:2;-1:-1:-1;2083:16:80;;1992:113;-1:-1:-1;1992:113:80:o;2110:316::-;2198:6;2206;2214;2267:2;2255:9;2246:7;2242:23;2238:32;2235:2;;;2288:6;2280;2273:22;2235:2;2322:9;2316:16;2306:26;;2372:2;2361:9;2357:18;2351:25;2341:35;;2416:2;2405:9;2401:18;2395:25;2385:35;;2225:201;;;;;:::o;2431:258::-;2473:3;2511:5;2505:12;2538:6;2533:3;2526:19;2554:63;2610:6;2603:4;2598:3;2594:14;2587:4;2580:5;2576:16;2554:63;:::i;:::-;2671:2;2650:15;-1:-1:-1;;2646:29:80;2637:39;;;;2678:4;2633:50;;2481:208;-1:-1:-1;;2481:208:80:o;3022:371::-;-1:-1:-1;;;;;;3207:33:80;;3195:46;;3264:13;;3177:3;;3286:61;3264:13;3336:1;3327:11;;3320:4;3308:17;;3286:61;:::i;:::-;3367:16;;;;3385:1;3363:24;;3185:208;-1:-1:-1;;;3185:208:80:o;3398:274::-;3527:3;3565:6;3559:13;3581:53;3627:6;3622:3;3615:4;3607:6;3603:17;3581:53;:::i;:::-;3650:16;;;;;3535:137;-1:-1:-1;;3535:137:80:o;5465:661::-;5636:2;5688:21;;;5758:13;;5661:18;;;5780:22;;;5607:4;;5636:2;5859:15;;;;5833:2;5818:18;;;5607:4;5905:195;5919:6;5916:1;5913:13;5905:195;;;5984:13;;-1:-1:-1;;;;;5980:39:80;5968:52;;6075:15;;;;6040:12;;;;6016:1;5934:9;5905:195;;;-1:-1:-1;6117:3:80;;5616:510;-1:-1:-1;;;;;;5616:510:80:o;6131:806::-;6293:4;6322:2;6362;6351:9;6347:18;6392:2;6381:9;6374:21;6415:6;6450;6444:13;6481:6;6473;6466:22;6519:2;6508:9;6504:18;6497:25;;6581:2;6571:6;6568:1;6564:14;6553:9;6549:30;6545:39;6531:53;;6619:2;6611:6;6607:15;6640:4;6653:255;6667:6;6664:1;6661:13;6653:255;;;6760:2;6756:7;6744:9;6736:6;6732:22;6728:36;6723:3;6716:49;6788:40;6821:6;6812;6806:13;6788:40;:::i;:::-;6778:50;-1:-1:-1;6886:12:80;;;;6851:15;;;;6689:1;6682:9;6653:255;;;-1:-1:-1;6925:6:80;;6302:635;-1:-1:-1;;;;;;;6302:635:80:o;6942:1548::-;7146:4;7175:2;7215;7204:9;7200:18;7245:2;7234:9;7227:21;7268:6;7303;7297:13;7334:6;7326;7319:22;7360:2;7350:12;;7393:2;7382:9;7378:18;7371:25;;7455:2;7445:6;7442:1;7438:14;7427:9;7423:30;7419:39;7493:2;7485:6;7481:15;7514:4;7527:934;7541:6;7538:1;7535:13;7527:934;;;7606:22;;;-1:-1:-1;;7602:36:80;7590:49;;7662:13;;7749:9;;-1:-1:-1;;;;;7745:35:80;7730:51;;7820:11;;7814:18;7852:15;;;7845:27;;;7933:19;;7702:15;;;7965:24;;;8055:21;;;;8100:4;;8023:2;8011:15;;;8117:236;8133:8;8128:3;8125:17;8117:236;;;8214:15;;-1:-1:-1;;;;;;8210:42:80;8196:57;;8322:17;;;;8161:1;8152:11;;;;;8279:14;;;;8117:236;;;-1:-1:-1;8439:12:80;;;;8376:5;-1:-1:-1;;;8404:15:80;;;;7563:1;7556:9;7527:934;;;-1:-1:-1;8478:6:80;;7155:1335;-1:-1:-1;;;;;;;;7155:1335:80:o;17006:374::-;17236:2;17225:9;17218:21;17199:4;17256:49;17301:2;17290:9;17286:18;2771:2;2759:15;;-1:-1:-1;;;2799:4:80;2790:14;;2783:36;2844:2;2835:12;;2749:104;17256:49;-1:-1:-1;;;;;17341:32:80;;;;17336:2;17321:18;;;;17314:60;;;;-1:-1:-1;17248:57:80;17208:172::o;17385:440::-;17635:2;17624:9;17617:21;17598:4;17661:49;17706:2;17695:9;17691:18;2771:2;2759:15;;-1:-1:-1;;;2799:4:80;2790:14;;2783:36;2844:2;2835:12;;2749:104;17661:49;17758:9;17750:6;17746:22;17741:2;17730:9;17726:18;17719:50;17786:33;17812:6;17804;17786:33;:::i;:::-;17778:41;17607:218;-1:-1:-1;;;;17607:218:80:o;17830:348::-;18060:2;18049:9;18042:21;18023:4;18080:49;18125:2;18114:9;18110:18;2771:2;2759:15;;-1:-1:-1;;;2799:4:80;2790:14;;2783:36;2844:2;2835:12;;2749:104;18080:49;18072:57;;18165:6;18160:2;18149:9;18145:18;18138:34;18032:146;;;;:::o;19309:374::-;19539:2;19528:9;19521:21;19502:4;19559:49;19604:2;19593:9;19589:18;2935:2;2923:15;;-1:-1:-1;;;2963:4:80;2954:14;;2947:36;3008:2;2999:12;;2913:104;19688:440;19938:2;19927:9;19920:21;19901:4;19964:49;20009:2;19998:9;19994:18;2935:2;2923:15;;-1:-1:-1;;;2963:4:80;2954:14;;2947:36;3008:2;2999:12;;2913:104;20133:348;20363:2;20352:9;20345:21;20326:4;20383:49;20428:2;20417:9;20413:18;2935:2;2923:15;;-1:-1:-1;;;2963:4:80;2954:14;;2947:36;3008:2;2999:12;;2913:104;21581:229;21621:3;21652:1;21648:6;21645:1;21642:13;21639:2;;;-1:-1:-1;;;21678:33:80;;21734:4;21731:1;21724:15;21764:4;21685:3;21752:17;21639:2;-1:-1:-1;21795:9:80;;21629:181::o;21815:217::-;21855:1;21881;21871:2;;-1:-1:-1;;;21906:31:80;;21960:4;21957:1;21950:15;21988:4;21913:1;21978:15;21871:2;-1:-1:-1;22017:9:80;;21861:171::o;22037:258::-;22109:1;22119:113;22133:6;22130:1;22127:13;22119:113;;;22209:11;;;22203:18;22190:11;;;22183:39;22155:2;22148:10;22119:113;;;22250:6;22247:1;22244:13;22241:2;;;-1:-1:-1;;22285:1:80;22267:16;;22260:27;22090:205::o;22300:380::-;22379:1;22375:12;;;;22422;;;22443:2;;22497:4;22489:6;22485:17;22475:27;;22443:2;22550;22542:6;22539:14;22519:18;22516:38;22513:2;;;22596:10;22591:3;22587:20;22584:1;22577:31;22631:4;22628:1;22621:15;22659:4;22656:1;22649:15;22513:2;;22355:325;;;:::o;22685:127::-;22746:10;22741:3;22737:20;22734:1;22727:31;22777:4;22774:1;22767:15;22801:4;22798:1;22791:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "aastr()": "77734a66",
    "algm()": "2e415702",
    "cl()": "fcd163d5",
    "dappsStaking()": "f8293403",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "owner()": "8da5cb5b",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testClaimDappStakingRewards()": "e3ee1d54",
    "testClaimRewards()": "58b4d79e",
    "testCloseCrowdloan()": "85f8f753",
    "testGetStakers()": "7e805c43",
    "testGlobalUnstakeAdmin()": "810fa039",
    "testInitialize()": "993831b6",
    "testStake()": "3a1143da",
    "testUnstake()": "afe571a5",
    "testWithdraw()": "d509b16c",
    "user()": "4f8632ba",
    "user2()": "b9edb1af",
    "user3()": "703ce4af",
    "vesting()": "44c63eec"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aastr\",\"outputs\":[{\"internalType\":\"contract MockERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"algm\",\"outputs\":[{\"internalType\":\"contract MockERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cl\",\"outputs\":[{\"internalType\":\"contract LiquidCrowdloan\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dappsStaking\",\"outputs\":[{\"internalType\":\"contract MockDappsStaking\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testClaimDappStakingRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testClaimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCloseCrowdloan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testGetStakers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testGlobalUnstakeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testInitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testUnstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"user\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"user2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"user3\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vesting\",\"outputs\":[{\"internalType\":\"contract ALGMVesting\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/LiquidCrowdloan.t.sol\":\"LiquidCrowdloanTest\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/ALGMVesting.sol\":{\"keccak256\":\"0x30b897a1eafb3564f674755b5dac226051e87ff61260ade060dca6213b8064b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a657993289260522953ea68861a06c2a9631868de7f7fa47434c2613b600d7a\",\"dweb:/ipfs/QmRKajAhDBcHCva8LBxC8dA1G5bERpfFaTTxXfzEvemEtz\"]},\"contracts/LiquidCrowdloan.sol\":{\"keccak256\":\"0x87d5112ccc3bd8235d20a257b2ff081fc90d0371acad5674ce7d93a2c24ea7a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebfbc2508a0cd24a1352e8ccca3ad73e5ea7e38a86a8de378d39abf24f41b327\",\"dweb:/ipfs/QmceEy7p1zWi2rxdjjMhBFCSuef5w2NUQPKrzeryG4ytdR\"]},\"contracts/interfaces/DappsStaking.sol\":{\"keccak256\":\"0xf8298be9e94a553de178c483d0d8efd2d5d0aafc8e8106b65aa30068d89e05b1\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://631e3d2c7272f26c37e85c67c9d43726f3897fa111c01ce04f57785d2fc2ee24\",\"dweb:/ipfs/QmRyVLS9dqR28Gb1qWnUHGqdvhCjfSQNFnWUdSKkMScRkr\"]},\"contracts/interfaces/IERC20Plus.sol\":{\"keccak256\":\"0xdcfa9af168944a1fe07e0bcf843565d3f43c747b87c5f2c9717b35789106667e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabb283ea9d86a4ca9aff4c1bebbd82872c299b13f99155eeea6b8b1003f1941\",\"dweb:/ipfs/QmYkca6ZqBeWQZ8ibYtavwbs7K24X2H7r1g5vdY2d1t8Am\"]},\"contracts/libraries/ByteConversion.sol\":{\"keccak256\":\"0x3730f4c6176e48ed23f59af0acaeb49a85cba07df43a19fa82b63c0bb3089f1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f78b153e110ccd482d415f3d80fbd4b0ec2eb3c8be33b14caa475fdfd2ad9360\",\"dweb:/ipfs/QmYeLvPj53rqq9bRskzptEpyAhbe91SgjGFrvswd4J1T2w\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7\",\"dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5\",\"dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d\",\"dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2\",\"dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x2ea9f206854c98b67dd228f8cad22bfe90ba7b1c2295315672f2e1e244623fc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4a7ef6774a9acbbb01583a9fc4656ee9b3dae4b8d5099f480625bfc0af68a02\",\"dweb:/ipfs/QmeXZcdZ7FELTc21GSgjRHXFCj4ohxrsZUaNzA5cMemAbE\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d\",\"dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39\",\"dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"test/foundry/LiquidCrowdloan.t.sol\":{\"keccak256\":\"0x497f2fb66375dd2887cf2814d2f1fd043eff8cde3a10af32766943da57f875f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce82dc6f6962c53244cba2050ff9b23533f1c112fbce700cec1b535ec4e4ed00\",\"dweb:/ipfs/QmQgUu9ZbUWmiFJYMQoNNCw3weYbxsm5XioqQ1VPR1w6Bf\"]},\"test/foundry/mocs/MockDappsStaking.sol\":{\"keccak256\":\"0xf3dacaf6999c97342702a54352ad772efc54ea384bcc168de60d9354c5d6a978\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a27fb5382cd0dadfa5f54be3368a8d8e284a6618dd2db160dc63836d44d64ef\",\"dweb:/ipfs/QmQxEmgJDJurMa3GwQhpyv8YzeNcUpaGn9SCW4yRZA2pHZ\"]},\"test/foundry/mocs/MockERC20Upgradeable.sol\":{\"keccak256\":\"0xfb06c37156f1bb088eb3cfb47ccf7cba1b65f65111c32371010d5c7e0f6967f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b71f6d94992883add29ebf40cbb7e8f1bff7bbea9ab4d416c6f7ae3990179464\",\"dweb:/ipfs/QmQ5riP9V6nCC5BuCtVZF9yGZtWJcYUdYpyJ25GU8M9PUy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.4+commit.c7e474f2"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "aastr",
          "outputs": [
            {
              "internalType": "contract MockERC20Upgradeable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "algm",
          "outputs": [
            {
              "internalType": "contract MockERC20Upgradeable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cl",
          "outputs": [
            {
              "internalType": "contract LiquidCrowdloan",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "dappsStaking",
          "outputs": [
            {
              "internalType": "contract MockDappsStaking",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testClaimDappStakingRewards"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testClaimRewards"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCloseCrowdloan"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testGetStakers"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testGlobalUnstakeAdmin"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testInitialize"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testStake"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testUnstake"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testWithdraw"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "user",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "user2",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "user3",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vesting",
          "outputs": [
            {
              "internalType": "contract ALGMVesting",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/LiquidCrowdloan.t.sol": "LiquidCrowdloanTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/ALGMVesting.sol": {
        "keccak256": "0x30b897a1eafb3564f674755b5dac226051e87ff61260ade060dca6213b8064b1",
        "urls": [
          "bzz-raw://0a657993289260522953ea68861a06c2a9631868de7f7fa47434c2613b600d7a",
          "dweb:/ipfs/QmRKajAhDBcHCva8LBxC8dA1G5bERpfFaTTxXfzEvemEtz"
        ],
        "license": "MIT"
      },
      "contracts/LiquidCrowdloan.sol": {
        "keccak256": "0x87d5112ccc3bd8235d20a257b2ff081fc90d0371acad5674ce7d93a2c24ea7a5",
        "urls": [
          "bzz-raw://ebfbc2508a0cd24a1352e8ccca3ad73e5ea7e38a86a8de378d39abf24f41b327",
          "dweb:/ipfs/QmceEy7p1zWi2rxdjjMhBFCSuef5w2NUQPKrzeryG4ytdR"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/DappsStaking.sol": {
        "keccak256": "0xf8298be9e94a553de178c483d0d8efd2d5d0aafc8e8106b65aa30068d89e05b1",
        "urls": [
          "bzz-raw://631e3d2c7272f26c37e85c67c9d43726f3897fa111c01ce04f57785d2fc2ee24",
          "dweb:/ipfs/QmRyVLS9dqR28Gb1qWnUHGqdvhCjfSQNFnWUdSKkMScRkr"
        ],
        "license": "BSD-3-Clause"
      },
      "contracts/interfaces/IERC20Plus.sol": {
        "keccak256": "0xdcfa9af168944a1fe07e0bcf843565d3f43c747b87c5f2c9717b35789106667e",
        "urls": [
          "bzz-raw://fabb283ea9d86a4ca9aff4c1bebbd82872c299b13f99155eeea6b8b1003f1941",
          "dweb:/ipfs/QmYkca6ZqBeWQZ8ibYtavwbs7K24X2H7r1g5vdY2d1t8Am"
        ],
        "license": "MIT"
      },
      "contracts/libraries/ByteConversion.sol": {
        "keccak256": "0x3730f4c6176e48ed23f59af0acaeb49a85cba07df43a19fa82b63c0bb3089f1e",
        "urls": [
          "bzz-raw://f78b153e110ccd482d415f3d80fbd4b0ec2eb3c8be33b14caa475fdfd2ad9360",
          "dweb:/ipfs/QmYeLvPj53rqq9bRskzptEpyAhbe91SgjGFrvswd4J1T2w"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315",
        "urls": [
          "bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7",
          "dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf",
        "urls": [
          "bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5",
          "dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86",
        "urls": [
          "bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d",
          "dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a",
        "urls": [
          "bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2",
          "dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
        "keccak256": "0x2ea9f206854c98b67dd228f8cad22bfe90ba7b1c2295315672f2e1e244623fc3",
        "urls": [
          "bzz-raw://b4a7ef6774a9acbbb01583a9fc4656ee9b3dae4b8d5099f480625bfc0af68a02",
          "dweb:/ipfs/QmeXZcdZ7FELTc21GSgjRHXFCj4ohxrsZUaNzA5cMemAbE"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
        "keccak256": "0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa",
        "urls": [
          "bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c",
          "dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167",
        "urls": [
          "bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11",
          "dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c",
        "urls": [
          "bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d",
          "dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol": {
        "keccak256": "0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2",
        "urls": [
          "bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39",
          "dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "test/foundry/LiquidCrowdloan.t.sol": {
        "keccak256": "0x497f2fb66375dd2887cf2814d2f1fd043eff8cde3a10af32766943da57f875f7",
        "urls": [
          "bzz-raw://ce82dc6f6962c53244cba2050ff9b23533f1c112fbce700cec1b535ec4e4ed00",
          "dweb:/ipfs/QmQgUu9ZbUWmiFJYMQoNNCw3weYbxsm5XioqQ1VPR1w6Bf"
        ],
        "license": "MIT"
      },
      "test/foundry/mocs/MockDappsStaking.sol": {
        "keccak256": "0xf3dacaf6999c97342702a54352ad772efc54ea384bcc168de60d9354c5d6a978",
        "urls": [
          "bzz-raw://9a27fb5382cd0dadfa5f54be3368a8d8e284a6618dd2db160dc63836d44d64ef",
          "dweb:/ipfs/QmQxEmgJDJurMa3GwQhpyv8YzeNcUpaGn9SCW4yRZA2pHZ"
        ],
        "license": "MIT"
      },
      "test/foundry/mocs/MockERC20Upgradeable.sol": {
        "keccak256": "0xfb06c37156f1bb088eb3cfb47ccf7cba1b65f65111c32371010d5c7e0f6967f1",
        "urls": [
          "bzz-raw://b71f6d94992883add29ebf40cbb7e8f1bff7bbea9ab4d416c6f7ae3990179464",
          "dweb:/ipfs/QmQ5riP9V6nCC5BuCtVZF9yGZtWJcYUdYpyJ25GU8M9PUy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/LiquidCrowdloan.t.sol",
    "id": 46231,
    "exportedSymbols": {
      "ALGMVesting": [
        799
      ],
      "AccessControlUpgradeable": [
        40612
      ],
      "AddressUpgradeable": [
        42365
      ],
      "ByteConversion": [
        9410
      ],
      "ContextUpgradeable": [
        42407
      ],
      "DSTest": [
        13234
      ],
      "DappsStaking": [
        7368
      ],
      "ERC165Upgradeable": [
        42677
      ],
      "ERC20BurnableUpgradeable": [
        41780
      ],
      "ERC20Upgradeable": [
        41638
      ],
      "IAccessControlUpgradeable": [
        40685
      ],
      "IERC165Upgradeable": [
        42689
      ],
      "IERC20MetadataUpgradeable": [
        41805
      ],
      "IERC20Plus": [
        7460
      ],
      "IERC20Upgradeable": [
        41716
      ],
      "Initializable": [
        40968
      ],
      "LiquidCrowdloan": [
        2439
      ],
      "LiquidCrowdloanTest": [
        46230
      ],
      "MockDappsStaking": [
        49216
      ],
      "MockERC20Upgradeable": [
        49350
      ],
      "OwnableUpgradeable": [
        40817
      ],
      "ReentrancyGuardUpgradeable": [
        41027
      ],
      "StdAssertions": [
        14727
      ],
      "StdChains": [
        15421
      ],
      "StdCheats": [
        17833
      ],
      "StdInvariant": [
        18123
      ],
      "StdStorage": [
        18873
      ],
      "StdStyle": [
        21517
      ],
      "StdUtils": [
        22365
      ],
      "StringsUpgradeable": [
        42633
      ],
      "Test": [
        22414
      ],
      "TestBase": [
        13300
      ],
      "Vm": [
        23920
      ],
      "console": [
        31984
      ],
      "console2": [
        40109
      ],
      "stdError": [
        17899
      ],
      "stdJson": [
        18699
      ],
      "stdMath": [
        18841
      ],
      "stdStorage": [
        20306
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:6834:68",
    "nodes": [
      {
        "id": 45197,
        "nodeType": "PragmaDirective",
        "src": "32:22:68",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 45198,
        "nodeType": "ImportDirective",
        "src": "56:28:68",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46231,
        "sourceUnit": 22415,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45199,
        "nodeType": "ImportDirective",
        "src": "85:41:68",
        "nodes": [],
        "absolutePath": "test/foundry/mocs/MockERC20Upgradeable.sol",
        "file": "./mocs/MockERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46231,
        "sourceUnit": 49351,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45200,
        "nodeType": "ImportDirective",
        "src": "127:37:68",
        "nodes": [],
        "absolutePath": "test/foundry/mocs/MockDappsStaking.sol",
        "file": "./mocs/MockDappsStaking.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46231,
        "sourceUnit": 49217,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45201,
        "nodeType": "ImportDirective",
        "src": "165:41:68",
        "nodes": [],
        "absolutePath": "contracts/ALGMVesting.sol",
        "file": "../../contracts/ALGMVesting.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46231,
        "sourceUnit": 800,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45202,
        "nodeType": "ImportDirective",
        "src": "207:45:68",
        "nodes": [],
        "absolutePath": "contracts/LiquidCrowdloan.sol",
        "file": "../../contracts/LiquidCrowdloan.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46231,
        "sourceUnit": 2440,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 45203,
        "nodeType": "ImportDirective",
        "src": "253:97:68",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46231,
        "sourceUnit": 41781,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46230,
        "nodeType": "ContractDefinition",
        "src": "352:6514:68",
        "nodes": [
          {
            "id": 45207,
            "nodeType": "VariableDeclaration",
            "src": "395:19:68",
            "nodes": [],
            "constant": false,
            "functionSelector": "4f8632ba",
            "mutability": "mutable",
            "name": "user",
            "nameLocation": "410:4:68",
            "scope": 46230,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45206,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "395:7:68",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45209,
            "nodeType": "VariableDeclaration",
            "src": "420:20:68",
            "nodes": [],
            "constant": false,
            "functionSelector": "b9edb1af",
            "mutability": "mutable",
            "name": "user2",
            "nameLocation": "435:5:68",
            "scope": 46230,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45208,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "420:7:68",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45211,
            "nodeType": "VariableDeclaration",
            "src": "446:20:68",
            "nodes": [],
            "constant": false,
            "functionSelector": "703ce4af",
            "mutability": "mutable",
            "name": "user3",
            "nameLocation": "461:5:68",
            "scope": 46230,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45210,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "446:7:68",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45213,
            "nodeType": "VariableDeclaration",
            "src": "472:20:68",
            "nodes": [],
            "constant": false,
            "functionSelector": "8da5cb5b",
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "487:5:68",
            "scope": 46230,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 45212,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "472:7:68",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45216,
            "nodeType": "VariableDeclaration",
            "src": "499:25:68",
            "nodes": [],
            "constant": false,
            "functionSelector": "fcd163d5",
            "mutability": "mutable",
            "name": "cl",
            "nameLocation": "522:2:68",
            "scope": 46230,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
              "typeString": "contract LiquidCrowdloan"
            },
            "typeName": {
              "id": 45215,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45214,
                "name": "LiquidCrowdloan",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2439,
                "src": "499:15:68"
              },
              "referencedDeclaration": 2439,
              "src": "499:15:68",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                "typeString": "contract LiquidCrowdloan"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45219,
            "nodeType": "VariableDeclaration",
            "src": "530:26:68",
            "nodes": [],
            "constant": false,
            "functionSelector": "44c63eec",
            "mutability": "mutable",
            "name": "vesting",
            "nameLocation": "549:7:68",
            "scope": 46230,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ALGMVesting_$799",
              "typeString": "contract ALGMVesting"
            },
            "typeName": {
              "id": 45218,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45217,
                "name": "ALGMVesting",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 799,
                "src": "530:11:68"
              },
              "referencedDeclaration": 799,
              "src": "530:11:68",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ALGMVesting_$799",
                "typeString": "contract ALGMVesting"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45222,
            "nodeType": "VariableDeclaration",
            "src": "562:36:68",
            "nodes": [],
            "constant": false,
            "functionSelector": "f8293403",
            "mutability": "mutable",
            "name": "dappsStaking",
            "nameLocation": "586:12:68",
            "scope": 46230,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockDappsStaking_$49216",
              "typeString": "contract MockDappsStaking"
            },
            "typeName": {
              "id": 45221,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45220,
                "name": "MockDappsStaking",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49216,
                "src": "562:16:68"
              },
              "referencedDeclaration": 49216,
              "src": "562:16:68",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockDappsStaking_$49216",
                "typeString": "contract MockDappsStaking"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45225,
            "nodeType": "VariableDeclaration",
            "src": "604:33:68",
            "nodes": [],
            "constant": false,
            "functionSelector": "77734a66",
            "mutability": "mutable",
            "name": "aastr",
            "nameLocation": "632:5:68",
            "scope": 46230,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
              "typeString": "contract MockERC20Upgradeable"
            },
            "typeName": {
              "id": 45224,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45223,
                "name": "MockERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49350,
                "src": "604:20:68"
              },
              "referencedDeclaration": 49350,
              "src": "604:20:68",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
                "typeString": "contract MockERC20Upgradeable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45228,
            "nodeType": "VariableDeclaration",
            "src": "643:32:68",
            "nodes": [],
            "constant": false,
            "functionSelector": "2e415702",
            "mutability": "mutable",
            "name": "algm",
            "nameLocation": "671:4:68",
            "scope": 46230,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
              "typeString": "contract MockERC20Upgradeable"
            },
            "typeName": {
              "id": 45227,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 45226,
                "name": "MockERC20Upgradeable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49350,
                "src": "643:20:68"
              },
              "referencedDeclaration": 49350,
              "src": "643:20:68",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
                "typeString": "contract MockERC20Upgradeable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 45391,
            "nodeType": "FunctionDefinition",
            "src": "682:963:68",
            "nodes": [],
            "body": {
              "id": 45390,
              "nodeType": "Block",
              "src": "706:939:68",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 45236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45231,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45207,
                      "src": "716:4:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 45234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "731:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 45232,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13293,
                          "src": "723:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$23920",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 45233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22485,
                        "src": "723:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) pure external returns (address)"
                        }
                      },
                      "id": 45235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "723:10:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "716:17:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45237,
                  "nodeType": "ExpressionStatement",
                  "src": "716:17:68"
                },
                {
                  "expression": {
                    "id": 45243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45238,
                      "name": "user2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45209,
                      "src": "743:5:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 45241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "759:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "expression": {
                          "id": 45239,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13293,
                          "src": "751:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$23920",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 45240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22485,
                        "src": "751:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) pure external returns (address)"
                        }
                      },
                      "id": 45242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "751:10:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "743:18:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45244,
                  "nodeType": "ExpressionStatement",
                  "src": "743:18:68"
                },
                {
                  "expression": {
                    "id": 45250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45245,
                      "name": "user3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45211,
                      "src": "771:5:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "34",
                          "id": 45248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "787:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          }
                        ],
                        "expression": {
                          "id": 45246,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13293,
                          "src": "779:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$23920",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 45247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22485,
                        "src": "779:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) pure external returns (address)"
                        }
                      },
                      "id": 45249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "779:10:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "771:18:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45251,
                  "nodeType": "ExpressionStatement",
                  "src": "771:18:68"
                },
                {
                  "expression": {
                    "id": 45257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45252,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45213,
                      "src": "799:5:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "33",
                          "id": 45255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "815:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          }
                        ],
                        "expression": {
                          "id": 45253,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13293,
                          "src": "807:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$23920",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 45254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22485,
                        "src": "807:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) pure external returns (address)"
                        }
                      },
                      "id": 45256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "807:10:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "799:18:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45258,
                  "nodeType": "ExpressionStatement",
                  "src": "799:18:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45262,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45213,
                        "src": "842:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45259,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "828:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23538,
                      "src": "828:13:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "828:20:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45264,
                  "nodeType": "ExpressionStatement",
                  "src": "828:20:68"
                },
                {
                  "expression": {
                    "id": 45270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45265,
                      "name": "algm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45228,
                      "src": "859:4:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
                        "typeString": "contract MockERC20Upgradeable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 45268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "866:24:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockERC20Upgradeable_$49350_$",
                          "typeString": "function () returns (contract MockERC20Upgradeable)"
                        },
                        "typeName": {
                          "id": 45267,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45266,
                            "name": "MockERC20Upgradeable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 49350,
                            "src": "870:20:68"
                          },
                          "referencedDeclaration": 49350,
                          "src": "870:20:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
                            "typeString": "contract MockERC20Upgradeable"
                          }
                        }
                      },
                      "id": 45269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "866:26:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
                        "typeString": "contract MockERC20Upgradeable"
                      }
                    },
                    "src": "859:33:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
                      "typeString": "contract MockERC20Upgradeable"
                    }
                  },
                  "id": 45271,
                  "nodeType": "ExpressionStatement",
                  "src": "859:33:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "416c67656d20746f6b656e",
                        "id": 45275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "918:13:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c3084fd3ffb50714cec9af6ca46374706c0b257de58b6f90d5b1b970f657a79",
                          "typeString": "literal_string \"Algem token\""
                        },
                        "value": "Algem token"
                      },
                      {
                        "hexValue": "414c474d",
                        "id": 45276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "933:6:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f45ee92ea72635e5b4d31f41c931948c2076b264223a645abd82de45fb9baa18",
                          "typeString": "literal_string \"ALGM\""
                        },
                        "value": "ALGM"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2c3084fd3ffb50714cec9af6ca46374706c0b257de58b6f90d5b1b970f657a79",
                          "typeString": "literal_string \"Algem token\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f45ee92ea72635e5b4d31f41c931948c2076b264223a645abd82de45fb9baa18",
                          "typeString": "literal_string \"ALGM\""
                        }
                      ],
                      "expression": {
                        "id": 45272,
                        "name": "algm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45228,
                        "src": "902:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
                          "typeString": "contract MockERC20Upgradeable"
                        }
                      },
                      "id": 45274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49319,
                      "src": "902:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory) external"
                      }
                    },
                    "id": 45277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "902:38:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45278,
                  "nodeType": "ExpressionStatement",
                  "src": "902:38:68"
                },
                {
                  "expression": {
                    "id": 45284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45279,
                      "name": "aastr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45225,
                      "src": "951:5:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
                        "typeString": "contract MockERC20Upgradeable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 45282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "959:24:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockERC20Upgradeable_$49350_$",
                          "typeString": "function () returns (contract MockERC20Upgradeable)"
                        },
                        "typeName": {
                          "id": 45281,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45280,
                            "name": "MockERC20Upgradeable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 49350,
                            "src": "963:20:68"
                          },
                          "referencedDeclaration": 49350,
                          "src": "963:20:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
                            "typeString": "contract MockERC20Upgradeable"
                          }
                        }
                      },
                      "id": 45283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "959:26:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
                        "typeString": "contract MockERC20Upgradeable"
                      }
                    },
                    "src": "951:34:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
                      "typeString": "contract MockERC20Upgradeable"
                    }
                  },
                  "id": 45285,
                  "nodeType": "ExpressionStatement",
                  "src": "951:34:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "614153545220746f6b656e",
                        "id": 45289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1012:13:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6b6d0f5a3dfee4dcf96c3ba624bdbe6fe72714a45918ec07a063d9e82bfb4b4",
                          "typeString": "literal_string \"aASTR token\""
                        },
                        "value": "aASTR token"
                      },
                      {
                        "hexValue": "6141535452",
                        "id": 45290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1027:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51125f8ca4cd0ca75ae39856f042e0ed52a698514481423986e9193c848e83a6",
                          "typeString": "literal_string \"aASTR\""
                        },
                        "value": "aASTR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f6b6d0f5a3dfee4dcf96c3ba624bdbe6fe72714a45918ec07a063d9e82bfb4b4",
                          "typeString": "literal_string \"aASTR token\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51125f8ca4cd0ca75ae39856f042e0ed52a698514481423986e9193c848e83a6",
                          "typeString": "literal_string \"aASTR\""
                        }
                      ],
                      "expression": {
                        "id": 45286,
                        "name": "aastr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45225,
                        "src": "995:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
                          "typeString": "contract MockERC20Upgradeable"
                        }
                      },
                      "id": 45288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49319,
                      "src": "995:16:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory) external"
                      }
                    },
                    "id": 45291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "995:40:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45292,
                  "nodeType": "ExpressionStatement",
                  "src": "995:40:68"
                },
                {
                  "expression": {
                    "id": 45298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45293,
                      "name": "dappsStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45222,
                      "src": "1046:12:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockDappsStaking_$49216",
                        "typeString": "contract MockDappsStaking"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 45296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1061:20:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockDappsStaking_$49216_$",
                          "typeString": "function () returns (contract MockDappsStaking)"
                        },
                        "typeName": {
                          "id": 45295,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45294,
                            "name": "MockDappsStaking",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 49216,
                            "src": "1065:16:68"
                          },
                          "referencedDeclaration": 49216,
                          "src": "1065:16:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockDappsStaking_$49216",
                            "typeString": "contract MockDappsStaking"
                          }
                        }
                      },
                      "id": 45297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1061:22:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockDappsStaking_$49216",
                        "typeString": "contract MockDappsStaking"
                      }
                    },
                    "src": "1046:37:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockDappsStaking_$49216",
                      "typeString": "contract MockDappsStaking"
                    }
                  },
                  "id": 45299,
                  "nodeType": "ExpressionStatement",
                  "src": "1046:37:68"
                },
                {
                  "expression": {
                    "id": 45305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45300,
                      "name": "vesting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45219,
                      "src": "1094:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ALGMVesting_$799",
                        "typeString": "contract ALGMVesting"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 45303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1104:15:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ALGMVesting_$799_$",
                          "typeString": "function () returns (contract ALGMVesting)"
                        },
                        "typeName": {
                          "id": 45302,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45301,
                            "name": "ALGMVesting",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 799,
                            "src": "1108:11:68"
                          },
                          "referencedDeclaration": 799,
                          "src": "1108:11:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ALGMVesting_$799",
                            "typeString": "contract ALGMVesting"
                          }
                        }
                      },
                      "id": 45304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1104:17:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ALGMVesting_$799",
                        "typeString": "contract ALGMVesting"
                      }
                    },
                    "src": "1094:27:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ALGMVesting_$799",
                      "typeString": "contract ALGMVesting"
                    }
                  },
                  "id": 45306,
                  "nodeType": "ExpressionStatement",
                  "src": "1094:27:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45310,
                        "name": "algm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45228,
                        "src": "1150:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
                          "typeString": "contract MockERC20Upgradeable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
                          "typeString": "contract MockERC20Upgradeable"
                        }
                      ],
                      "expression": {
                        "id": 45307,
                        "name": "vesting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45219,
                        "src": "1131:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ALGMVesting_$799",
                          "typeString": "contract ALGMVesting"
                        }
                      },
                      "id": 45309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 113,
                      "src": "1131:18:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20Upgradeable_$41716_$returns$__$",
                        "typeString": "function (contract IERC20Upgradeable) external"
                      }
                    },
                    "id": 45311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1131:24:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45312,
                  "nodeType": "ExpressionStatement",
                  "src": "1131:24:68"
                },
                {
                  "expression": {
                    "id": 45318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45313,
                      "name": "cl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45216,
                      "src": "1166:2:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                        "typeString": "contract LiquidCrowdloan"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 45316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1171:19:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_LiquidCrowdloan_$2439_$",
                          "typeString": "function () returns (contract LiquidCrowdloan)"
                        },
                        "typeName": {
                          "id": 45315,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 45314,
                            "name": "LiquidCrowdloan",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2439,
                            "src": "1175:15:68"
                          },
                          "referencedDeclaration": 2439,
                          "src": "1175:15:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                            "typeString": "contract LiquidCrowdloan"
                          }
                        }
                      },
                      "id": 45317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1171:21:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                        "typeString": "contract LiquidCrowdloan"
                      }
                    },
                    "src": "1166:26:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                      "typeString": "contract LiquidCrowdloan"
                    }
                  },
                  "id": 45319,
                  "nodeType": "ExpressionStatement",
                  "src": "1166:26:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45323,
                        "name": "vesting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45219,
                        "src": "1229:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ALGMVesting_$799",
                          "typeString": "contract ALGMVesting"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 45326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1258:1:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 45325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1250:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45324,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1250:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1250:10:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45330,
                            "name": "aastr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45225,
                            "src": "1282:5:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
                              "typeString": "contract MockERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
                              "typeString": "contract MockERC20Upgradeable"
                            }
                          ],
                          "id": 45329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1274:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45328,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1274:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1274:14:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45334,
                            "name": "algm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45228,
                            "src": "1310:4:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
                              "typeString": "contract MockERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
                              "typeString": "contract MockERC20Upgradeable"
                            }
                          ],
                          "id": 45333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1302:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45332,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1302:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1302:13:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 45338,
                            "name": "dappsStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45222,
                            "src": "1337:12:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockDappsStaking_$49216",
                              "typeString": "contract MockDappsStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockDappsStaking_$49216",
                              "typeString": "contract MockDappsStaking"
                            }
                          ],
                          "id": 45337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1329:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45336,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1329:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1329:21:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ALGMVesting_$799",
                          "typeString": "contract ALGMVesting"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45320,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "1202:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 45322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1392,
                      "src": "1202:13:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ALGMVesting_$799_$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (contract ALGMVesting,address,address,address,address) external"
                      }
                    },
                    "id": 45340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1202:158:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45341,
                  "nodeType": "ExpressionStatement",
                  "src": "1202:158:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45347,
                            "name": "vesting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45219,
                            "src": "1389:7:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ALGMVesting_$799",
                              "typeString": "contract ALGMVesting"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ALGMVesting_$799",
                              "typeString": "contract ALGMVesting"
                            }
                          ],
                          "id": 45346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1381:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45345,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1381:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1381:16:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653336",
                        "id": 45349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1399:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        },
                        "value": "1e36"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        }
                      ],
                      "expression": {
                        "id": 45342,
                        "name": "algm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45228,
                        "src": "1371:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
                          "typeString": "contract MockERC20Upgradeable"
                        }
                      },
                      "id": 45344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49334,
                      "src": "1371:9:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 45350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1371:33:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 45351,
                  "nodeType": "ExpressionStatement",
                  "src": "1371:33:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45357,
                            "name": "cl",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45216,
                            "src": "1442:2:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                              "typeString": "contract LiquidCrowdloan"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                              "typeString": "contract LiquidCrowdloan"
                            }
                          ],
                          "id": 45356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1434:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45355,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1434:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1434:11:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45352,
                        "name": "vesting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45219,
                        "src": "1415:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ALGMVesting_$799",
                          "typeString": "contract ALGMVesting"
                        }
                      },
                      "id": 45354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addManager",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 193,
                      "src": "1415:18:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1415:31:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45360,
                  "nodeType": "ExpressionStatement",
                  "src": "1415:31:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45361,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "1457:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23555,
                      "src": "1457:12:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1457:14:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45365,
                  "nodeType": "ExpressionStatement",
                  "src": "1457:14:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45369,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45207,
                        "src": "1490:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653336",
                        "id": 45370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1496:10:68",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(47 digits omitted)...0000"
                        },
                        "value": "1e36"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(47 digits omitted)...0000"
                        }
                      ],
                      "expression": {
                        "id": 45366,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "1482:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23562,
                      "src": "1482:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1482:25:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45372,
                  "nodeType": "ExpressionStatement",
                  "src": "1482:25:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45376,
                        "name": "user2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45209,
                        "src": "1546:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653336",
                        "id": 45377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1553:10:68",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(47 digits omitted)...0000"
                        },
                        "value": "1e36"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(47 digits omitted)...0000"
                        }
                      ],
                      "expression": {
                        "id": 45373,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "1538:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23562,
                      "src": "1538:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1538:26:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45379,
                  "nodeType": "ExpressionStatement",
                  "src": "1538:26:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45385,
                            "name": "dappsStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45222,
                            "src": "1612:12:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockDappsStaking_$49216",
                              "typeString": "contract MockDappsStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockDappsStaking_$49216",
                              "typeString": "contract MockDappsStaking"
                            }
                          ],
                          "id": 45384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1604:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45383,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1604:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1604:21:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 45387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1627:10:68",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        }
                      ],
                      "expression": {
                        "id": 45380,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "1596:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23562,
                      "src": "1596:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1596:42:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45389,
                  "nodeType": "ExpressionStatement",
                  "src": "1596:42:68"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "691:5:68",
            "parameters": {
              "id": 45229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "696:2:68"
            },
            "returnParameters": {
              "id": 45230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "706:0:68"
            },
            "scope": 46230,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45458,
            "nodeType": "FunctionDefinition",
            "src": "1651:409:68",
            "nodes": [],
            "body": {
              "id": 45457,
              "nodeType": "Block",
              "src": "1679:381:68",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45397,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45207,
                        "src": "1703:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45394,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "1689:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23538,
                      "src": "1689:13:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1689:19:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45399,
                  "nodeType": "ExpressionStatement",
                  "src": "1689:19:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 45400,
                          "name": "cl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45216,
                          "src": "1718:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                            "typeString": "contract LiquidCrowdloan"
                          }
                        },
                        "id": 45402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1412,
                        "src": "1718:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 45404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31303030",
                          "id": 45403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1734:10:68",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "value": "1000"
                        }
                      ],
                      "src": "1718:27:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 45405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1718:29:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45406,
                  "nodeType": "ExpressionStatement",
                  "src": "1718:29:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4e656564206d6f72652041535452",
                        "id": 45410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1774:16:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_54d69c2488b029a86d020b5e3627e73003c88f179246899efd900ce3660d9b9c",
                          "typeString": "literal_string \"Need more ASTR\""
                        },
                        "value": "Need more ASTR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_54d69c2488b029a86d020b5e3627e73003c88f179246899efd900ce3660d9b9c",
                          "typeString": "literal_string \"Need more ASTR\""
                        }
                      ],
                      "expression": {
                        "id": 45407,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "1758:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23574,
                      "src": "1758:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 45411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1758:33:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45412,
                  "nodeType": "ExpressionStatement",
                  "src": "1758:33:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 45413,
                          "name": "cl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45216,
                          "src": "1801:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                            "typeString": "contract LiquidCrowdloan"
                          }
                        },
                        "id": 45415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1412,
                        "src": "1801:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 45417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 45416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1817:7:68",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "1801:24:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 45418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1801:26:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45419,
                  "nodeType": "ExpressionStatement",
                  "src": "1801:26:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "546f6f206c61726765206465706f736974",
                        "id": 45423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1854:19:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f92df9ce7e70721df48e8602aaef968c5a2c645cf458548dc1f616fdbdc420df",
                          "typeString": "literal_string \"Too large deposit\""
                        },
                        "value": "Too large deposit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f92df9ce7e70721df48e8602aaef968c5a2c645cf458548dc1f616fdbdc420df",
                          "typeString": "literal_string \"Too large deposit\""
                        }
                      ],
                      "expression": {
                        "id": 45420,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "1838:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23574,
                      "src": "1838:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 45424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1838:36:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45425,
                  "nodeType": "ExpressionStatement",
                  "src": "1838:36:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 45426,
                          "name": "cl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45216,
                          "src": "1884:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                            "typeString": "contract LiquidCrowdloan"
                          }
                        },
                        "id": 45428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1412,
                        "src": "1884:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 45430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3130305f3030305f303030",
                          "id": 45429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1900:17:68",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000000000"
                          },
                          "value": "100_000_000"
                        }
                      ],
                      "src": "1884:34:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 45431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1884:36:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45432,
                  "nodeType": "ExpressionStatement",
                  "src": "1884:36:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45433,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "1930:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23555,
                      "src": "1930:12:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1930:14:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45437,
                  "nodeType": "ExpressionStatement",
                  "src": "1930:14:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45441,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45213,
                        "src": "1964:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45438,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "1955:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23533,
                      "src": "1955:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1955:15:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45443,
                  "nodeType": "ExpressionStatement",
                  "src": "1955:15:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45444,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "1980:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 45446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "closeCrowdloan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2155,
                      "src": "1980:17:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1980:19:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45448,
                  "nodeType": "ExpressionStatement",
                  "src": "1980:19:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45452,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45207,
                            "src": "2035:4:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45450,
                            "name": "aastr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45225,
                            "src": "2019:5:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
                              "typeString": "contract MockERC20Upgradeable"
                            }
                          },
                          "id": 45451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41146,
                          "src": "2019:15:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2019:21:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 45454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2042:10:68",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "id": 45449,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13428,
                        13453,
                        13466,
                        13482,
                        13524,
                        13566,
                        13608,
                        13645,
                        13682,
                        13719,
                        11263,
                        11288,
                        11318,
                        11343,
                        11402,
                        11427,
                        11457,
                        11482,
                        12955,
                        12990
                      ],
                      "referencedDeclaration": 11457,
                      "src": "2010:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2010:43:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45456,
                  "nodeType": "ExpressionStatement",
                  "src": "2010:43:68"
                }
              ]
            },
            "functionSelector": "3a1143da",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testStake",
            "nameLocation": "1660:9:68",
            "parameters": {
              "id": 45392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1669:2:68"
            },
            "returnParameters": {
              "id": 45393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1679:0:68"
            },
            "scope": 46230,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45513,
            "nodeType": "FunctionDefinition",
            "src": "2066:355:68",
            "nodes": [],
            "body": {
              "id": 45512,
              "nodeType": "Block",
              "src": "2103:318:68",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45464,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45207,
                        "src": "2122:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45461,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "2113:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23533,
                      "src": "2113:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2113:14:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45466,
                  "nodeType": "ExpressionStatement",
                  "src": "2113:14:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 45470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2153:34:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        },
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        }
                      ],
                      "expression": {
                        "id": 45467,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "2137:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23574,
                      "src": "2137:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 45471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2137:51:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45472,
                  "nodeType": "ExpressionStatement",
                  "src": "2137:51:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45473,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "2198:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 45475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "closeCrowdloan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2155,
                      "src": "2198:17:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2198:19:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45477,
                  "nodeType": "ExpressionStatement",
                  "src": "2198:19:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45481,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45213,
                        "src": "2242:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45478,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "2228:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23538,
                      "src": "2228:13:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2228:20:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45483,
                  "nodeType": "ExpressionStatement",
                  "src": "2228:20:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45484,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "2258:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 45486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "closeCrowdloan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2155,
                      "src": "2258:17:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2258:19:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45488,
                  "nodeType": "ExpressionStatement",
                  "src": "2258:19:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 45490,
                            "name": "cl",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45216,
                            "src": "2296:2:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                              "typeString": "contract LiquidCrowdloan"
                            }
                          },
                          "id": 45491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "closed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1082,
                          "src": "2296:9:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 45492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2296:11:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 45493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2309:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 45489,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13428,
                        13453,
                        13466,
                        13482,
                        13524,
                        13566,
                        13608,
                        13645,
                        13682,
                        13719,
                        11263,
                        11288,
                        11318,
                        11343,
                        11402,
                        11427,
                        11457,
                        11482,
                        12955,
                        12990
                      ],
                      "referencedDeclaration": 13428,
                      "src": "2287:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 45494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2287:27:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45495,
                  "nodeType": "ExpressionStatement",
                  "src": "2287:27:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "43726f77646c6f616e20636c6f736564",
                        "id": 45499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2341:18:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56635d489b4ad847123132710ce6382e186aab73c2442e8efad67e1145a1e0d3",
                          "typeString": "literal_string \"Crowdloan closed\""
                        },
                        "value": "Crowdloan closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_56635d489b4ad847123132710ce6382e186aab73c2442e8efad67e1145a1e0d3",
                          "typeString": "literal_string \"Crowdloan closed\""
                        }
                      ],
                      "expression": {
                        "id": 45496,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "2325:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23574,
                      "src": "2325:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 45500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2325:35:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45501,
                  "nodeType": "ExpressionStatement",
                  "src": "2325:35:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45502,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "2370:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 45504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "closeCrowdloan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2155,
                      "src": "2370:17:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2370:19:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45506,
                  "nodeType": "ExpressionStatement",
                  "src": "2370:19:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45507,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "2400:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23555,
                      "src": "2400:12:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2400:14:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45511,
                  "nodeType": "ExpressionStatement",
                  "src": "2400:14:68"
                }
              ]
            },
            "functionSelector": "85f8f753",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCloseCrowdloan",
            "nameLocation": "2075:18:68",
            "parameters": {
              "id": 45459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2093:2:68"
            },
            "returnParameters": {
              "id": 45460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2103:0:68"
            },
            "scope": 46230,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45636,
            "nodeType": "FunctionDefinition",
            "src": "2427:863:68",
            "nodes": [],
            "body": {
              "id": 45635,
              "nodeType": "Block",
              "src": "2462:828:68",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45519,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45207,
                        "src": "2481:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45516,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "2472:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23533,
                      "src": "2472:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2472:14:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45521,
                  "nodeType": "ExpressionStatement",
                  "src": "2472:14:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 45522,
                          "name": "cl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45216,
                          "src": "2496:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                            "typeString": "contract LiquidCrowdloan"
                          }
                        },
                        "id": 45524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1412,
                        "src": "2496:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 45526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31303030",
                          "id": 45525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2512:10:68",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "value": "1000"
                        }
                      ],
                      "src": "2496:27:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 45527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2496:29:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45528,
                  "nodeType": "ExpressionStatement",
                  "src": "2496:29:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45532,
                        "name": "user2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45209,
                        "src": "2587:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45529,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "2578:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23533,
                      "src": "2578:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2578:15:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45534,
                  "nodeType": "ExpressionStatement",
                  "src": "2578:15:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 45535,
                          "name": "cl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45216,
                          "src": "2603:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                            "typeString": "contract LiquidCrowdloan"
                          }
                        },
                        "id": 45537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1412,
                        "src": "2603:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 45539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31303030",
                          "id": 45538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2619:10:68",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "value": "1000"
                        }
                      ],
                      "src": "2603:27:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 45540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2603:29:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45541,
                  "nodeType": "ExpressionStatement",
                  "src": "2603:29:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45545,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45213,
                        "src": "2652:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45542,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "2643:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23533,
                      "src": "2643:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2643:15:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45547,
                  "nodeType": "ExpressionStatement",
                  "src": "2643:15:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45548,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "2668:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 45550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "closeCrowdloan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2155,
                      "src": "2668:17:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2668:19:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45552,
                  "nodeType": "ExpressionStatement",
                  "src": "2668:19:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45556,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45207,
                        "src": "2737:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45553,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "2723:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23538,
                      "src": "2723:13:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2723:19:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45558,
                  "nodeType": "ExpressionStatement",
                  "src": "2723:19:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_2419201_by_1",
                          "typeString": "int_const 2419201"
                        },
                        "id": 45564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "34",
                          "id": 45562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2769:7:68",
                          "subdenomination": "weeks",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2419200_by_1",
                            "typeString": "int_const 2419200"
                          },
                          "value": "4"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 45563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2779:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2769:11:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2419201_by_1",
                          "typeString": "int_const 2419201"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2419201_by_1",
                          "typeString": "int_const 2419201"
                        }
                      ],
                      "expression": {
                        "id": 45559,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "2761:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23470,
                      "src": "2761:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 45565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2761:20:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45566,
                  "nodeType": "ExpressionStatement",
                  "src": "2761:20:68"
                },
                {
                  "assignments": [
                    45568
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45568,
                      "mutability": "mutable",
                      "name": "availableRewards",
                      "nameLocation": "2817:16:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 45635,
                      "src": "2809:24:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45567,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2809:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45573,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 45571,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45207,
                        "src": "2863:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45569,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "2836:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 45570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getUserAvailableRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2313,
                      "src": "2836:26:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 45572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2836:32:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2809:59:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45574,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "2878:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 45576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1812,
                      "src": "2878:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2878:17:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45578,
                  "nodeType": "ExpressionStatement",
                  "src": "2878:17:68"
                },
                {
                  "assignments": [
                    45580
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45580,
                      "mutability": "mutable",
                      "name": "part1",
                      "nameLocation": "2913:5:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 45635,
                      "src": "2905:13:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45579,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2905:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45588,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 45585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 45581,
                            "name": "cl",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45216,
                            "src": "2921:2:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                              "typeString": "contract LiquidCrowdloan"
                            }
                          },
                          "id": 45582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ALGM_REWARDS_AMOUNT",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1103,
                          "src": "2921:22:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 45583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2921:24:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "36",
                        "id": 45584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2948:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "src": "2921:28:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 45586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2952:1:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "2921:32:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2905:48:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45590,
                        "name": "part1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45580,
                        "src": "2972:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 45591,
                        "name": "availableRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45568,
                        "src": "2979:16:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45589,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13428,
                        13453,
                        13466,
                        13482,
                        13524,
                        13566,
                        13608,
                        13645,
                        13682,
                        13719,
                        11263,
                        11288,
                        11318,
                        11343,
                        11402,
                        11427,
                        11457,
                        11482,
                        12955,
                        12990
                      ],
                      "referencedDeclaration": 11457,
                      "src": "2963:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2963:33:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45593,
                  "nodeType": "ExpressionStatement",
                  "src": "2963:33:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45597,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45207,
                            "src": "3030:4:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45595,
                            "name": "algm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45228,
                            "src": "3015:4:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
                              "typeString": "contract MockERC20Upgradeable"
                            }
                          },
                          "id": 45596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41146,
                          "src": "3015:14:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3015:20:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 45599,
                        "name": "part1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45580,
                        "src": "3037:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45594,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13428,
                        13453,
                        13466,
                        13482,
                        13524,
                        13566,
                        13608,
                        13645,
                        13682,
                        13719,
                        11263,
                        11288,
                        11318,
                        11343,
                        11402,
                        11427,
                        11457,
                        11482,
                        12955,
                        12990
                      ],
                      "referencedDeclaration": 11457,
                      "src": "3006:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3006:37:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45601,
                  "nodeType": "ExpressionStatement",
                  "src": "3006:37:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_14515201_by_1",
                          "typeString": "int_const 14515201"
                        },
                        "id": 45609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_14515200_by_1",
                            "typeString": "int_const 14515200"
                          },
                          "id": 45607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "36",
                            "id": 45605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3062:1:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "34",
                            "id": 45606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3066:7:68",
                            "subdenomination": "weeks",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2419200_by_1",
                              "typeString": "int_const 2419200"
                            },
                            "value": "4"
                          },
                          "src": "3062:11:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_14515200_by_1",
                            "typeString": "int_const 14515200"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 45608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3076:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3062:15:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_14515201_by_1",
                          "typeString": "int_const 14515201"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_14515201_by_1",
                          "typeString": "int_const 14515201"
                        }
                      ],
                      "expression": {
                        "id": 45602,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "3054:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23470,
                      "src": "3054:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 45610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3054:24:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45611,
                  "nodeType": "ExpressionStatement",
                  "src": "3054:24:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45612,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "3160:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 45614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1812,
                      "src": "3160:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3160:17:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45616,
                  "nodeType": "ExpressionStatement",
                  "src": "3160:17:68"
                },
                {
                  "assignments": [
                    45618
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45618,
                      "mutability": "mutable",
                      "name": "part2",
                      "nameLocation": "3196:5:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 45635,
                      "src": "3188:13:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45617,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3188:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45624,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 45623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 45619,
                          "name": "cl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45216,
                          "src": "3204:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                            "typeString": "contract LiquidCrowdloan"
                          }
                        },
                        "id": 45620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ALGM_REWARDS_AMOUNT",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1103,
                        "src": "3204:22:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 45621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3204:24:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 45622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3231:1:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "3204:28:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3188:44:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 45631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 45628,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45207,
                              "src": "3266:4:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 45626,
                              "name": "algm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45228,
                              "src": "3251:4:68",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
                                "typeString": "contract MockERC20Upgradeable"
                              }
                            },
                            "id": 45627,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41146,
                            "src": "3251:14:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 45629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3251:20:68",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 45630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3274:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3251:24:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 45632,
                        "name": "part2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45618,
                        "src": "3277:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45625,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13428,
                        13453,
                        13466,
                        13482,
                        13524,
                        13566,
                        13608,
                        13645,
                        13682,
                        13719,
                        11263,
                        11288,
                        11318,
                        11343,
                        11402,
                        11427,
                        11457,
                        11482,
                        12955,
                        12990
                      ],
                      "referencedDeclaration": 11457,
                      "src": "3242:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3242:41:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45634,
                  "nodeType": "ExpressionStatement",
                  "src": "3242:41:68"
                }
              ]
            },
            "functionSelector": "58b4d79e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testClaimRewards",
            "nameLocation": "2436:16:68",
            "parameters": {
              "id": 45514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2452:2:68"
            },
            "returnParameters": {
              "id": 45515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2462:0:68"
            },
            "scope": 46230,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45764,
            "nodeType": "FunctionDefinition",
            "src": "3296:731:68",
            "nodes": [],
            "body": {
              "id": 45763,
              "nodeType": "Block",
              "src": "3326:701:68",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45642,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45207,
                        "src": "3350:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45639,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "3336:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23538,
                      "src": "3336:13:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3336:19:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45644,
                  "nodeType": "ExpressionStatement",
                  "src": "3336:19:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 45645,
                          "name": "cl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45216,
                          "src": "3365:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                            "typeString": "contract LiquidCrowdloan"
                          }
                        },
                        "id": 45647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1412,
                        "src": "3365:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 45649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31303030",
                          "id": 45648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3381:10:68",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "value": "1000"
                        }
                      ],
                      "src": "3365:27:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 45650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3365:29:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45651,
                  "nodeType": "ExpressionStatement",
                  "src": "3365:29:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "43726f77646c6f616e207374696c6c206f70656e",
                        "id": 45655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3421:22:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_01fb97fd8308342b62eabc658e9af8d18478e328b9e9db62393f68ebb6b56b01",
                          "typeString": "literal_string \"Crowdloan still open\""
                        },
                        "value": "Crowdloan still open"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_01fb97fd8308342b62eabc658e9af8d18478e328b9e9db62393f68ebb6b56b01",
                          "typeString": "literal_string \"Crowdloan still open\""
                        }
                      ],
                      "expression": {
                        "id": 45652,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "3405:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23574,
                      "src": "3405:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 45656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3405:39:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45657,
                  "nodeType": "ExpressionStatement",
                  "src": "3405:39:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45658,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "3454:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 45660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unstake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1666,
                      "src": "3454:10:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3454:12:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45662,
                  "nodeType": "ExpressionStatement",
                  "src": "3454:12:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45663,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "3476:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23555,
                      "src": "3476:12:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3476:14:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45667,
                  "nodeType": "ExpressionStatement",
                  "src": "3476:14:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45671,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45213,
                        "src": "3510:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45668,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "3501:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23533,
                      "src": "3501:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3501:15:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45673,
                  "nodeType": "ExpressionStatement",
                  "src": "3501:15:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45674,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "3526:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 45676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "closeCrowdloan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2155,
                      "src": "3526:17:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3526:19:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45678,
                  "nodeType": "ExpressionStatement",
                  "src": "3526:19:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45682,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45207,
                        "src": "3565:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45679,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "3556:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23533,
                      "src": "3556:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3556:14:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45684,
                  "nodeType": "ExpressionStatement",
                  "src": "3556:14:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4c6f636b696e6720706572696f6420686173206e6f742079657420706173736564",
                        "id": 45688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3596:35:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1050f4cc52f713137be7b691ae14fcc2886355fb1daca2768bcd20521fb7afc7",
                          "typeString": "literal_string \"Locking period has not yet passed\""
                        },
                        "value": "Locking period has not yet passed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1050f4cc52f713137be7b691ae14fcc2886355fb1daca2768bcd20521fb7afc7",
                          "typeString": "literal_string \"Locking period has not yet passed\""
                        }
                      ],
                      "expression": {
                        "id": 45685,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "3580:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23574,
                      "src": "3580:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 45689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3580:52:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45690,
                  "nodeType": "ExpressionStatement",
                  "src": "3580:52:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45691,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "3642:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 45693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unstake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1666,
                      "src": "3642:10:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3642:12:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45695,
                  "nodeType": "ExpressionStatement",
                  "src": "3642:12:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_16934400_by_1",
                          "typeString": "int_const 16934400"
                        },
                        "id": 45701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "37",
                          "id": 45699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3673:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_7_by_1",
                            "typeString": "int_const 7"
                          },
                          "value": "7"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 45700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3677:7:68",
                          "subdenomination": "weeks",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2419200_by_1",
                            "typeString": "int_const 2419200"
                          },
                          "value": "4"
                        },
                        "src": "3673:11:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_16934400_by_1",
                          "typeString": "int_const 16934400"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_16934400_by_1",
                          "typeString": "int_const 16934400"
                        }
                      ],
                      "expression": {
                        "id": 45696,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "3665:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23470,
                      "src": "3665:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 45702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3665:20:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45703,
                  "nodeType": "ExpressionStatement",
                  "src": "3665:20:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45707,
                        "name": "user3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45211,
                        "src": "3705:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45704,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "3696:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23533,
                      "src": "3696:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3696:15:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45709,
                  "nodeType": "ExpressionStatement",
                  "src": "3696:15:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5573657220686173206e6f20616e79206141535452",
                        "id": 45713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3737:23:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc5be17c0ae7bb8a80f2b5931437ccbae1f47a7be0484e82f7a31f235615fbac",
                          "typeString": "literal_string \"User has no any aASTR\""
                        },
                        "value": "User has no any aASTR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_dc5be17c0ae7bb8a80f2b5931437ccbae1f47a7be0484e82f7a31f235615fbac",
                          "typeString": "literal_string \"User has no any aASTR\""
                        }
                      ],
                      "expression": {
                        "id": 45710,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "3721:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23574,
                      "src": "3721:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 45714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3721:40:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45715,
                  "nodeType": "ExpressionStatement",
                  "src": "3721:40:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45716,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "3771:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 45718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unstake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1666,
                      "src": "3771:10:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3771:12:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45720,
                  "nodeType": "ExpressionStatement",
                  "src": "3771:12:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45724,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45207,
                        "src": "3808:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45721,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "3794:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23538,
                      "src": "3794:13:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3794:19:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45726,
                  "nodeType": "ExpressionStatement",
                  "src": "3794:19:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45727,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "3823:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 45729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1812,
                      "src": "3823:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3823:17:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45731,
                  "nodeType": "ExpressionStatement",
                  "src": "3823:17:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45732,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "3850:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 45734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unstake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1666,
                      "src": "3850:10:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3850:12:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45736,
                  "nodeType": "ExpressionStatement",
                  "src": "3850:12:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45737,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "3872:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23555,
                      "src": "3872:12:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3872:14:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45741,
                  "nodeType": "ExpressionStatement",
                  "src": "3872:14:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45745,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45207,
                            "src": "3922:4:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 45743,
                            "name": "aastr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45225,
                            "src": "3906:5:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
                              "typeString": "contract MockERC20Upgradeable"
                            }
                          },
                          "id": 45744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41146,
                          "src": "3906:15:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 45746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3906:21:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 45747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3929:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 45742,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13428,
                        13453,
                        13466,
                        13482,
                        13524,
                        13566,
                        13608,
                        13645,
                        13682,
                        13719,
                        11263,
                        11288,
                        11318,
                        11343,
                        11402,
                        11427,
                        11457,
                        11482,
                        12955,
                        12990
                      ],
                      "referencedDeclaration": 11457,
                      "src": "3897:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3897:34:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45749,
                  "nodeType": "ExpressionStatement",
                  "src": "3897:34:68"
                },
                {
                  "assignments": [
                    45751,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45751,
                      "mutability": "mutable",
                      "name": "val",
                      "nameLocation": "3951:3:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 45763,
                      "src": "3943:11:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45750,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3943:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 45757,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 45754,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45207,
                        "src": "3977:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 45755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3983:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 45752,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "3962:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 45753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1153,
                      "src": "3962:14:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 45756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3962:23:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3942:43:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45759,
                        "name": "val",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45751,
                        "src": "4004:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 45760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4009:10:68",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "id": 45758,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13428,
                        13453,
                        13466,
                        13482,
                        13524,
                        13566,
                        13608,
                        13645,
                        13682,
                        13719,
                        11263,
                        11288,
                        11318,
                        11343,
                        11402,
                        11427,
                        11457,
                        11482,
                        12955,
                        12990
                      ],
                      "referencedDeclaration": 11457,
                      "src": "3995:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3995:25:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45762,
                  "nodeType": "ExpressionStatement",
                  "src": "3995:25:68"
                }
              ]
            },
            "functionSelector": "afe571a5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testUnstake",
            "nameLocation": "3305:11:68",
            "parameters": {
              "id": 45637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3316:2:68"
            },
            "returnParameters": {
              "id": 45638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3326:0:68"
            },
            "scope": 46230,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45869,
            "nodeType": "FunctionDefinition",
            "src": "4033:605:68",
            "nodes": [],
            "body": {
              "id": 45868,
              "nodeType": "Block",
              "src": "4064:574:68",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    45768
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45768,
                      "mutability": "mutable",
                      "name": "time",
                      "nameLocation": "4082:4:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 45868,
                      "src": "4074:12:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45767,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4074:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45769,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4074:12:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45773,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45207,
                        "src": "4106:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45770,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "4097:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23533,
                      "src": "4097:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4097:14:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45775,
                  "nodeType": "ExpressionStatement",
                  "src": "4097:14:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 45776,
                          "name": "cl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45216,
                          "src": "4121:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                            "typeString": "contract LiquidCrowdloan"
                          }
                        },
                        "id": 45778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1412,
                        "src": "4121:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 45780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31303030",
                          "id": 45779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4137:10:68",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "value": "1000"
                        }
                      ],
                      "src": "4121:27:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 45781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4121:29:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45782,
                  "nodeType": "ExpressionStatement",
                  "src": "4121:29:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45788,
                            "name": "cl",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45216,
                            "src": "4176:2:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                              "typeString": "contract LiquidCrowdloan"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                              "typeString": "contract LiquidCrowdloan"
                            }
                          ],
                          "id": 45787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4168:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45786,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4168:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4168:11:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 45790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4181:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 45783,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "4160:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23562,
                      "src": "4160:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4160:23:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45792,
                  "nodeType": "ExpressionStatement",
                  "src": "4160:23:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45796,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45213,
                        "src": "4245:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45793,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "4236:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23533,
                      "src": "4236:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4236:15:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45798,
                  "nodeType": "ExpressionStatement",
                  "src": "4236:15:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45799,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "4261:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 45801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "closeCrowdloan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2155,
                      "src": "4261:17:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4261:19:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45803,
                  "nodeType": "ExpressionStatement",
                  "src": "4261:19:68"
                },
                {
                  "expression": {
                    "id": 45810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45804,
                      "name": "time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45768,
                      "src": "4299:4:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_rational_14515201_by_1",
                        "typeString": "int_const 14515201"
                      },
                      "id": 45809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_rational_14515200_by_1",
                          "typeString": "int_const 14515200"
                        },
                        "id": 45807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "36",
                          "id": 45805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4306:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 45806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4310:7:68",
                          "subdenomination": "weeks",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2419200_by_1",
                            "typeString": "int_const 2419200"
                          },
                          "value": "4"
                        },
                        "src": "4306:11:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_14515200_by_1",
                          "typeString": "int_const 14515200"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 45808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4320:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "4306:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_14515201_by_1",
                        "typeString": "int_const 14515201"
                      }
                    },
                    "src": "4299:22:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45811,
                  "nodeType": "ExpressionStatement",
                  "src": "4299:22:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45815,
                        "name": "time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45768,
                        "src": "4339:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45812,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "4331:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23470,
                      "src": "4331:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 45816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4331:13:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45817,
                  "nodeType": "ExpressionStatement",
                  "src": "4331:13:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45821,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45207,
                        "src": "4369:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45818,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "4355:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23538,
                      "src": "4355:13:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4355:19:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45823,
                  "nodeType": "ExpressionStatement",
                  "src": "4355:19:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45824,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "4384:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 45826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unstake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1666,
                      "src": "4384:10:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4384:12:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45828,
                  "nodeType": "ExpressionStatement",
                  "src": "4384:12:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4e6f7420656e6f75676820657261732070617373656421",
                        "id": 45832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4423:25:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b5139161df023808c46d541ac5fc413dc3c3cae1546ac7c3ce94e32fac605a9",
                          "typeString": "literal_string \"Not enough eras passed!\""
                        },
                        "value": "Not enough eras passed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5b5139161df023808c46d541ac5fc413dc3c3cae1546ac7c3ce94e32fac605a9",
                          "typeString": "literal_string \"Not enough eras passed!\""
                        }
                      ],
                      "expression": {
                        "id": 45829,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "4407:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23574,
                      "src": "4407:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 45833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4407:42:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45834,
                  "nodeType": "ExpressionStatement",
                  "src": "4407:42:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 45838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4471:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 45835,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "4459:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 45837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1752,
                      "src": "4459:11:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 45839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4459:14:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45840,
                  "nodeType": "ExpressionStatement",
                  "src": "4459:14:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 45846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 45844,
                          "name": "time",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45768,
                          "src": "4492:4:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3135",
                          "id": 45845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4499:7:68",
                          "subdenomination": "days",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1296000_by_1",
                            "typeString": "int_const 1296000"
                          },
                          "value": "15"
                        },
                        "src": "4492:14:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45841,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "4484:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23470,
                      "src": "4484:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 45847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4484:23:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45848,
                  "nodeType": "ExpressionStatement",
                  "src": "4484:23:68"
                },
                {
                  "assignments": [
                    45850
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45850,
                      "mutability": "mutable",
                      "name": "balBefore",
                      "nameLocation": "4526:9:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 45868,
                      "src": "4518:17:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45849,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4518:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45853,
                  "initialValue": {
                    "expression": {
                      "id": 45851,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45207,
                      "src": "4538:4:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 45852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "4538:12:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4518:32:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 45857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4573:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 45854,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "4561:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 45856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1752,
                      "src": "4561:11:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 45858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4561:14:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45859,
                  "nodeType": "ExpressionStatement",
                  "src": "4561:14:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 45861,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45207,
                          "src": "4594:4:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "4594:12:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 45865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 45863,
                          "name": "balBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45850,
                          "src": "4608:9:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 45864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4620:10:68",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "value": "1000"
                        },
                        "src": "4608:22:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45860,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13428,
                        13453,
                        13466,
                        13482,
                        13524,
                        13566,
                        13608,
                        13645,
                        13682,
                        13719,
                        11263,
                        11288,
                        11318,
                        11343,
                        11402,
                        11427,
                        11457,
                        11482,
                        12955,
                        12990
                      ],
                      "referencedDeclaration": 11457,
                      "src": "4585:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4585:46:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45867,
                  "nodeType": "ExpressionStatement",
                  "src": "4585:46:68"
                }
              ]
            },
            "functionSelector": "d509b16c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdraw",
            "nameLocation": "4042:12:68",
            "parameters": {
              "id": 45765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4054:2:68"
            },
            "returnParameters": {
              "id": 45766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4064:0:68"
            },
            "scope": 46230,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45985,
            "nodeType": "FunctionDefinition",
            "src": "4644:752:68",
            "nodes": [],
            "body": {
              "id": 45984,
              "nodeType": "Block",
              "src": "4690:706:68",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    45873
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45873,
                      "mutability": "mutable",
                      "name": "time",
                      "nameLocation": "4708:4:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 45984,
                      "src": "4700:12:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45872,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4700:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45874,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4700:12:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45878,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45207,
                        "src": "4732:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45875,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "4723:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23533,
                      "src": "4723:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4723:14:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45880,
                  "nodeType": "ExpressionStatement",
                  "src": "4723:14:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 45881,
                          "name": "cl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45216,
                          "src": "4747:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                            "typeString": "contract LiquidCrowdloan"
                          }
                        },
                        "id": 45883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1412,
                        "src": "4747:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 45885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31303030",
                          "id": 45884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4763:10:68",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "value": "1000"
                        }
                      ],
                      "src": "4747:27:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 45886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4747:29:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45887,
                  "nodeType": "ExpressionStatement",
                  "src": "4747:29:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45893,
                            "name": "cl",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45216,
                            "src": "4802:2:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                              "typeString": "contract LiquidCrowdloan"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                              "typeString": "contract LiquidCrowdloan"
                            }
                          ],
                          "id": 45892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4794:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45891,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4794:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4794:11:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 45895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4807:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 45888,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "4786:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23562,
                      "src": "4786:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 45896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4786:23:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45897,
                  "nodeType": "ExpressionStatement",
                  "src": "4786:23:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45901,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45213,
                        "src": "4871:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45898,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "4862:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23533,
                      "src": "4862:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4862:15:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45903,
                  "nodeType": "ExpressionStatement",
                  "src": "4862:15:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45904,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "4887:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 45906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "closeCrowdloan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2155,
                      "src": "4887:17:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4887:19:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45908,
                  "nodeType": "ExpressionStatement",
                  "src": "4887:19:68"
                },
                {
                  "expression": {
                    "id": 45915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45909,
                      "name": "time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45873,
                      "src": "4925:4:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_rational_14515201_by_1",
                        "typeString": "int_const 14515201"
                      },
                      "id": 45914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_rational_14515200_by_1",
                          "typeString": "int_const 14515200"
                        },
                        "id": 45912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "36",
                          "id": 45910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4932:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 45911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4936:7:68",
                          "subdenomination": "weeks",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2419200_by_1",
                            "typeString": "int_const 2419200"
                          },
                          "value": "4"
                        },
                        "src": "4932:11:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_14515200_by_1",
                          "typeString": "int_const 14515200"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 45913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4946:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "4932:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_14515201_by_1",
                        "typeString": "int_const 14515201"
                      }
                    },
                    "src": "4925:22:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45916,
                  "nodeType": "ExpressionStatement",
                  "src": "4925:22:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45920,
                        "name": "time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45873,
                        "src": "4965:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 45917,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "4957:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23470,
                      "src": "4957:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 45921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4957:13:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45922,
                  "nodeType": "ExpressionStatement",
                  "src": "4957:13:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3330",
                        "id": 45926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4988:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        },
                        "value": "30"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_30_by_1",
                          "typeString": "int_const 30"
                        }
                      ],
                      "expression": {
                        "id": 45923,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "4980:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "roll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23475,
                      "src": "4980:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 45927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4980:11:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45928,
                  "nodeType": "ExpressionStatement",
                  "src": "4980:11:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45932,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45213,
                        "src": "5016:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45929,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "5002:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23538,
                      "src": "5002:13:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5002:20:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45934,
                  "nodeType": "ExpressionStatement",
                  "src": "5002:20:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45935,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "5032:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 45937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimDappStakingRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2112,
                      "src": "5032:26:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5032:28:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45939,
                  "nodeType": "ExpressionStatement",
                  "src": "5032:28:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "323030",
                        "id": 45943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5093:3:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        },
                        "value": "200"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        }
                      ],
                      "expression": {
                        "id": 45940,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "5071:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 45942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setClaimingTxLimit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2237,
                      "src": "5071:21:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 45944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5071:26:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45945,
                  "nodeType": "ExpressionStatement",
                  "src": "5071:26:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45946,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "5107:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 45948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimDappStakingRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2112,
                      "src": "5107:26:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5107:28:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45950,
                  "nodeType": "ExpressionStatement",
                  "src": "5107:28:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "416c6c207265776172647320616c726561647920636c61696d6564",
                        "id": 45954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5162:29:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf8ae7aa18f9308687f7ddf3deecf77f110b94d02617a7d859a01c0ab92e0917",
                          "typeString": "literal_string \"All rewards already claimed\""
                        },
                        "value": "All rewards already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_bf8ae7aa18f9308687f7ddf3deecf77f110b94d02617a7d859a01c0ab92e0917",
                          "typeString": "literal_string \"All rewards already claimed\""
                        }
                      ],
                      "expression": {
                        "id": 45951,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "5146:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23574,
                      "src": "5146:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 45955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5146:46:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45956,
                  "nodeType": "ExpressionStatement",
                  "src": "5146:46:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45957,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "5202:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 45959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimDappStakingRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2112,
                      "src": "5202:26:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5202:28:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45961,
                  "nodeType": "ExpressionStatement",
                  "src": "5202:28:68"
                },
                {
                  "assignments": [
                    45963
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45963,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "5249:6:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 45984,
                      "src": "5241:14:68",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 45962,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5241:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45967,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45964,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "5258:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 45965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalStakingRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1123,
                      "src": "5258:22:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 45966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5258:24:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5241:41:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45968,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "5292:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 45970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawStakingRewardsAdmin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2184,
                      "src": "5292:30:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5292:32:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45972,
                  "nodeType": "ExpressionStatement",
                  "src": "5292:32:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 45974,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45213,
                          "src": "5343:5:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 45975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "5343:13:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 45976,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45963,
                        "src": "5358:6:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45973,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13428,
                        13453,
                        13466,
                        13482,
                        13524,
                        13566,
                        13608,
                        13645,
                        13682,
                        13719,
                        11263,
                        11288,
                        11318,
                        11343,
                        11402,
                        11427,
                        11457,
                        11482,
                        12955,
                        12990
                      ],
                      "referencedDeclaration": 11457,
                      "src": "5334:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 45977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5334:31:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45978,
                  "nodeType": "ExpressionStatement",
                  "src": "5334:31:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 45979,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "5375:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23555,
                      "src": "5375:12:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 45982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5375:14:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45983,
                  "nodeType": "ExpressionStatement",
                  "src": "5375:14:68"
                }
              ]
            },
            "functionSelector": "e3ee1d54",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testClaimDappStakingRewards",
            "nameLocation": "4653:27:68",
            "parameters": {
              "id": 45870,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4680:2:68"
            },
            "returnParameters": {
              "id": 45871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4690:0:68"
            },
            "scope": 46230,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46130,
            "nodeType": "FunctionDefinition",
            "src": "5402:829:68",
            "nodes": [],
            "body": {
              "id": 46129,
              "nodeType": "Block",
              "src": "5443:788:68",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4e6f20616e7920756e7374616b6573",
                        "id": 45991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5469:17:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1cba1eb3e12c24dad1254edef3ffb94bf37236baa9ef902c6c11e57d5ab1e738",
                          "typeString": "literal_string \"No any unstakes\""
                        },
                        "value": "No any unstakes"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1cba1eb3e12c24dad1254edef3ffb94bf37236baa9ef902c6c11e57d5ab1e738",
                          "typeString": "literal_string \"No any unstakes\""
                        }
                      ],
                      "expression": {
                        "id": 45988,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "5453:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23574,
                      "src": "5453:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 45992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5453:34:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45993,
                  "nodeType": "ExpressionStatement",
                  "src": "5453:34:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45997,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45213,
                        "src": "5506:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 45994,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "5497:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 45996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23533,
                      "src": "5497:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 45998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5497:15:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45999,
                  "nodeType": "ExpressionStatement",
                  "src": "5497:15:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 46000,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "5522:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 46002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "globalUnstakeAdmin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2219,
                      "src": "5522:21:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 46003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5522:23:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46004,
                  "nodeType": "ExpressionStatement",
                  "src": "5522:23:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46008,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45207,
                        "src": "5565:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46005,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "5556:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23533,
                      "src": "5556:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 46009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5556:14:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46010,
                  "nodeType": "ExpressionStatement",
                  "src": "5556:14:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 46011,
                          "name": "cl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45216,
                          "src": "5580:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                            "typeString": "contract LiquidCrowdloan"
                          }
                        },
                        "id": 46013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1412,
                        "src": "5580:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 46015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31303030",
                          "id": 46014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5596:10:68",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "value": "1000"
                        }
                      ],
                      "src": "5580:27:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 46016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5580:29:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46017,
                  "nodeType": "ExpressionStatement",
                  "src": "5580:29:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46021,
                        "name": "user2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45209,
                        "src": "5629:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46018,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "5620:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23533,
                      "src": "5620:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 46022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5620:15:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46023,
                  "nodeType": "ExpressionStatement",
                  "src": "5620:15:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 46024,
                          "name": "cl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45216,
                          "src": "5645:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                            "typeString": "contract LiquidCrowdloan"
                          }
                        },
                        "id": 46026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1412,
                        "src": "5645:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 46028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31303030",
                          "id": 46027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5661:10:68",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "value": "1000"
                        }
                      ],
                      "src": "5645:27:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 46029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5645:29:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46030,
                  "nodeType": "ExpressionStatement",
                  "src": "5645:29:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46034,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45213,
                        "src": "5694:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46031,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "5685:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23533,
                      "src": "5685:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 46035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5685:15:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46036,
                  "nodeType": "ExpressionStatement",
                  "src": "5685:15:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 46037,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "5710:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 46039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "closeCrowdloan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2155,
                      "src": "5710:17:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 46040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5710:19:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46041,
                  "nodeType": "ExpressionStatement",
                  "src": "5710:19:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_14515201_by_1",
                          "typeString": "int_const 14515201"
                        },
                        "id": 46049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_14515200_by_1",
                            "typeString": "int_const 14515200"
                          },
                          "id": 46047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "36",
                            "id": 46045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5756:1:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "34",
                            "id": 46046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5760:7:68",
                            "subdenomination": "weeks",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2419200_by_1",
                              "typeString": "int_const 2419200"
                            },
                            "value": "4"
                          },
                          "src": "5756:11:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_14515200_by_1",
                            "typeString": "int_const 14515200"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 46048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5770:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5756:15:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_14515201_by_1",
                          "typeString": "int_const 14515201"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_14515201_by_1",
                          "typeString": "int_const 14515201"
                        }
                      ],
                      "expression": {
                        "id": 46042,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "5748:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23470,
                      "src": "5748:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 46050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5748:24:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46051,
                  "nodeType": "ExpressionStatement",
                  "src": "5748:24:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46055,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45207,
                        "src": "5792:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46052,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "5783:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23533,
                      "src": "5783:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 46056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5783:14:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46057,
                  "nodeType": "ExpressionStatement",
                  "src": "5783:14:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 46058,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "5807:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 46060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unstake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1666,
                      "src": "5807:10:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 46061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5807:12:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46062,
                  "nodeType": "ExpressionStatement",
                  "src": "5807:12:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46066,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45213,
                        "src": "5839:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46063,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "5830:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23533,
                      "src": "5830:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 46067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5830:15:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46068,
                  "nodeType": "ExpressionStatement",
                  "src": "5830:15:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4e6f20616e7920756e7374616b6573",
                        "id": 46072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5871:17:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1cba1eb3e12c24dad1254edef3ffb94bf37236baa9ef902c6c11e57d5ab1e738",
                          "typeString": "literal_string \"No any unstakes\""
                        },
                        "value": "No any unstakes"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1cba1eb3e12c24dad1254edef3ffb94bf37236baa9ef902c6c11e57d5ab1e738",
                          "typeString": "literal_string \"No any unstakes\""
                        }
                      ],
                      "expression": {
                        "id": 46069,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "5855:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23574,
                      "src": "5855:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 46073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5855:34:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46074,
                  "nodeType": "ExpressionStatement",
                  "src": "5855:34:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 46075,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "5899:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 46077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "globalUnstakeAdmin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2219,
                      "src": "5899:21:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 46078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5899:23:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46079,
                  "nodeType": "ExpressionStatement",
                  "src": "5899:23:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46083,
                        "name": "user2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45209,
                        "src": "5950:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46080,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "5941:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23533,
                      "src": "5941:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 46084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5941:15:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46085,
                  "nodeType": "ExpressionStatement",
                  "src": "5941:15:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 46086,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "5966:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 46088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unstake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1666,
                      "src": "5966:10:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 46089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5966:12:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46090,
                  "nodeType": "ExpressionStatement",
                  "src": "5966:12:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46094,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45213,
                        "src": "6002:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46091,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "5993:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23533,
                      "src": "5993:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 46095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5993:15:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46096,
                  "nodeType": "ExpressionStatement",
                  "src": "5993:15:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "54686572652077617320616c726561647920676c6f62616c556e7374616b6520696e207468697320706572696f64206f662074696d65",
                        "id": 46100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6034:56:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de16b521fd7eec1ae0aae3456ffb798373ef7d09910e6aee912f33d8be256af6",
                          "typeString": "literal_string \"There was already globalUnstake in this period of time\""
                        },
                        "value": "There was already globalUnstake in this period of time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_de16b521fd7eec1ae0aae3456ffb798373ef7d09910e6aee912f33d8be256af6",
                          "typeString": "literal_string \"There was already globalUnstake in this period of time\""
                        }
                      ],
                      "expression": {
                        "id": 46097,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "6018:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23574,
                      "src": "6018:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 46101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6018:73:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46102,
                  "nodeType": "ExpressionStatement",
                  "src": "6018:73:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 46103,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "6101:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 46105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "globalUnstakeAdmin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2219,
                      "src": "6101:21:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 46106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6101:23:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46107,
                  "nodeType": "ExpressionStatement",
                  "src": "6101:23:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_15811200_by_1",
                          "typeString": "int_const 15811200"
                        },
                        "id": 46115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_14515200_by_1",
                            "typeString": "int_const 14515200"
                          },
                          "id": 46113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "36",
                            "id": 46111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6143:1:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "34",
                            "id": 46112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6147:7:68",
                            "subdenomination": "weeks",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2419200_by_1",
                              "typeString": "int_const 2419200"
                            },
                            "value": "4"
                          },
                          "src": "6143:11:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_14515200_by_1",
                            "typeString": "int_const 14515200"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3135",
                          "id": 46114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6157:7:68",
                          "subdenomination": "days",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1296000_by_1",
                            "typeString": "int_const 1296000"
                          },
                          "value": "15"
                        },
                        "src": "6143:21:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_15811200_by_1",
                          "typeString": "int_const 15811200"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_15811200_by_1",
                          "typeString": "int_const 15811200"
                        }
                      ],
                      "expression": {
                        "id": 46108,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "6135:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23470,
                      "src": "6135:7:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 46116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6135:30:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46117,
                  "nodeType": "ExpressionStatement",
                  "src": "6135:30:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46121,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45213,
                        "src": "6185:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46118,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "6176:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23533,
                      "src": "6176:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 46122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6176:15:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46123,
                  "nodeType": "ExpressionStatement",
                  "src": "6176:15:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 46124,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "6201:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 46126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "globalUnstakeAdmin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2219,
                      "src": "6201:21:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 46127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6201:23:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46128,
                  "nodeType": "ExpressionStatement",
                  "src": "6201:23:68"
                }
              ]
            },
            "functionSelector": "810fa039",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testGlobalUnstakeAdmin",
            "nameLocation": "5411:22:68",
            "parameters": {
              "id": 45986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5433:2:68"
            },
            "returnParameters": {
              "id": 45987,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5443:0:68"
            },
            "scope": 46230,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46191,
            "nodeType": "FunctionDefinition",
            "src": "6237:314:68",
            "nodes": [],
            "body": {
              "id": 46190,
              "nodeType": "Block",
              "src": "6270:281:68",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46136,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45207,
                        "src": "6289:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46133,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "6280:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23533,
                      "src": "6280:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 46137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6280:14:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46138,
                  "nodeType": "ExpressionStatement",
                  "src": "6280:14:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 46139,
                          "name": "cl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45216,
                          "src": "6304:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                            "typeString": "contract LiquidCrowdloan"
                          }
                        },
                        "id": 46141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1412,
                        "src": "6304:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 46143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31303030",
                          "id": 46142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6320:10:68",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "value": "1000"
                        }
                      ],
                      "src": "6304:27:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 46144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6304:29:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46145,
                  "nodeType": "ExpressionStatement",
                  "src": "6304:29:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46149,
                        "name": "user2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45209,
                        "src": "6353:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46146,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "6344:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23533,
                      "src": "6344:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 46150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6344:15:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46151,
                  "nodeType": "ExpressionStatement",
                  "src": "6344:15:68"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 46152,
                          "name": "cl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45216,
                          "src": "6369:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                            "typeString": "contract LiquidCrowdloan"
                          }
                        },
                        "id": 46154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1412,
                        "src": "6369:8:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 46156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31303030",
                          "id": 46155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6385:10:68",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "value": "1000"
                        }
                      ],
                      "src": "6369:27:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 46157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6369:29:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46158,
                  "nodeType": "ExpressionStatement",
                  "src": "6369:29:68"
                },
                {
                  "assignments": [
                    46163
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46163,
                      "mutability": "mutable",
                      "name": "arr",
                      "nameLocation": "6426:3:68",
                      "nodeType": "VariableDeclaration",
                      "scope": 46190,
                      "src": "6409:20:68",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 46161,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6409:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 46162,
                        "nodeType": "ArrayTypeName",
                        "src": "6409:9:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46169,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 46167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6446:1:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 46166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6432:13:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 46164,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6436:7:68",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 46165,
                        "nodeType": "ArrayTypeName",
                        "src": "6436:9:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 46168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6432:16:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6409:39:68"
                },
                {
                  "expression": {
                    "id": 46174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46170,
                      "name": "arr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46163,
                      "src": "6458:3:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 46171,
                          "name": "cl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45216,
                          "src": "6464:2:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                            "typeString": "contract LiquidCrowdloan"
                          }
                        },
                        "id": 46172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getStakers",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2367,
                        "src": "6464:13:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                          "typeString": "function () view external returns (address[] memory)"
                        }
                      },
                      "id": 46173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6464:15:68",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "6458:21:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 46175,
                  "nodeType": "ExpressionStatement",
                  "src": "6458:21:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 46177,
                          "name": "arr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46163,
                          "src": "6498:3:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 46179,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 46178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6502:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6498:6:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46180,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45207,
                        "src": "6506:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46176,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13428,
                        13453,
                        13466,
                        13482,
                        13524,
                        13566,
                        13608,
                        13645,
                        13682,
                        13719,
                        11263,
                        11288,
                        11318,
                        11343,
                        11402,
                        11427,
                        11457,
                        11482,
                        12955,
                        12990
                      ],
                      "referencedDeclaration": 11263,
                      "src": "6489:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 46181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6489:22:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46182,
                  "nodeType": "ExpressionStatement",
                  "src": "6489:22:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 46184,
                          "name": "arr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46163,
                          "src": "6530:3:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 46186,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 46185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6534:1:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6530:6:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46187,
                        "name": "user2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45209,
                        "src": "6538:5:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46183,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13428,
                        13453,
                        13466,
                        13482,
                        13524,
                        13566,
                        13608,
                        13645,
                        13682,
                        13719,
                        11263,
                        11288,
                        11318,
                        11343,
                        11402,
                        11427,
                        11457,
                        11482,
                        12955,
                        12990
                      ],
                      "referencedDeclaration": 11263,
                      "src": "6521:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 46188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6521:23:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46189,
                  "nodeType": "ExpressionStatement",
                  "src": "6521:23:68"
                }
              ]
            },
            "functionSelector": "7e805c43",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testGetStakers",
            "nameLocation": "6246:14:68",
            "parameters": {
              "id": 46131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6260:2:68"
            },
            "returnParameters": {
              "id": 46132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6270:0:68"
            },
            "scope": 46230,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46229,
            "nodeType": "FunctionDefinition",
            "src": "6557:307:68",
            "nodes": [],
            "body": {
              "id": 46228,
              "nodeType": "Block",
              "src": "6590:274:68",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46197,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45207,
                        "src": "6609:4:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46194,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "6600:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23533,
                      "src": "6600:8:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 46198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6600:14:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46199,
                  "nodeType": "ExpressionStatement",
                  "src": "6600:14:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
                        "id": 46203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6640:48:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
                          "typeString": "literal_string \"Initializable: contract is already initialized\""
                        },
                        "value": "Initializable: contract is already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
                          "typeString": "literal_string \"Initializable: contract is already initialized\""
                        }
                      ],
                      "expression": {
                        "id": 46200,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13293,
                        "src": "6624:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23920",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 46202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23574,
                      "src": "6624:15:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 46204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6624:65:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46205,
                  "nodeType": "ExpressionStatement",
                  "src": "6624:65:68"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46209,
                        "name": "vesting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45219,
                        "src": "6726:7:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ALGMVesting_$799",
                          "typeString": "contract ALGMVesting"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 46212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6755:1:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 46211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6747:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46210,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6747:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6747:10:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46216,
                            "name": "aastr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45225,
                            "src": "6779:5:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
                              "typeString": "contract MockERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
                              "typeString": "contract MockERC20Upgradeable"
                            }
                          ],
                          "id": 46215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6771:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46214,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6771:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6771:14:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46220,
                            "name": "algm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45228,
                            "src": "6807:4:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
                              "typeString": "contract MockERC20Upgradeable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20Upgradeable_$49350",
                              "typeString": "contract MockERC20Upgradeable"
                            }
                          ],
                          "id": 46219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6799:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46218,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6799:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6799:13:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46224,
                            "name": "dappsStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45222,
                            "src": "6834:12:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockDappsStaking_$49216",
                              "typeString": "contract MockDappsStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockDappsStaking_$49216",
                              "typeString": "contract MockDappsStaking"
                            }
                          ],
                          "id": 46223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6826:7:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46222,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6826:7:68",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6826:21:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ALGMVesting_$799",
                          "typeString": "contract ALGMVesting"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46206,
                        "name": "cl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45216,
                        "src": "6699:2:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidCrowdloan_$2439",
                          "typeString": "contract LiquidCrowdloan"
                        }
                      },
                      "id": 46208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1392,
                      "src": "6699:13:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ALGMVesting_$799_$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (contract ALGMVesting,address,address,address,address) external"
                      }
                    },
                    "id": 46226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6699:158:68",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46227,
                  "nodeType": "ExpressionStatement",
                  "src": "6699:158:68"
                }
              ]
            },
            "functionSelector": "993831b6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testInitialize",
            "nameLocation": "6566:14:68",
            "parameters": {
              "id": 46192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6580:2:68"
            },
            "returnParameters": {
              "id": 46193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6590:0:68"
            },
            "scope": 46230,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 45204,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22414,
              "src": "384:4:68"
            },
            "id": 45205,
            "nodeType": "InheritanceSpecifier",
            "src": "384:4:68"
          }
        ],
        "contractDependencies": [
          799,
          2439,
          49216,
          49350
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          46230,
          22414,
          13300,
          13297,
          22365,
          18123,
          17833,
          17154,
          15421,
          14727,
          13234
        ],
        "name": "LiquidCrowdloanTest",
        "nameLocation": "361:19:68",
        "scope": 46231,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 68
}