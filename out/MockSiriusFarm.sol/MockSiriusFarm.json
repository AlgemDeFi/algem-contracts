{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract MockERC20",
          "name": "_gauge",
          "type": "address"
        },
        {
          "internalType": "contract MockERC20",
          "name": "_lp",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "claimableTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_claimRewards",
          "type": "bool"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gauge",
      "outputs": [
        {
          "internalType": "contract MockERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lp",
      "outputs": [
        {
          "internalType": "contract MockERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "setStartTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "startTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_claimRewards",
          "type": "bool"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506040516105dd3803806105dd83398101604081905261002f9161007c565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100ae565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008e578182fd5b61009783610060565b91506100a560208401610060565b90509250929050565b610520806100bd6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806383df67471161005b57806383df6747146100f557806384d2422614610108578063a6f19c841461011b578063d684395d1461012e57600080fd5b8063313c06a01461008257806338d07436146100b25780636e1dc66e146100c7575b600080fd5b600154610095906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c56100c036600461045e565b610158565b005b6100e76100d53660046103c0565b60026020526000908152604090205481565b6040519081526020016100a9565b6100c561010336600461041f565b61026c565b6100e76101163660046103c0565b610372565b600054610095906001600160a01b031681565b6100c561013c3660046103da565b6001600160a01b03909116600090815260026020526040902055565b6000546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156101aa57600080fd5b505af11580156101be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e29190610403565b5060015460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561022f57600080fd5b505af1158015610243573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102679190610403565b505050565b6001546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156102be57600080fd5b505af11580156102d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f69190610403565b506000546040516340c10f1960e01b8152336004820152602481018590526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561034357600080fd5b505af1158015610357573d6000803e3d6000fd5b50503360009081526002602052604090204290555050505050565b33600090815260026020526040812054819061038e90426104ac565b905061039d81620f424061048d565b9392505050565b80356001600160a01b03811681146103bb57600080fd5b919050565b6000602082840312156103d1578081fd5b61039d826103a4565b600080604083850312156103ec578081fd5b6103f5836103a4565b946020939093013593505050565b600060208284031215610414578081fd5b815161039d816104d9565b600080600060608486031215610433578081fd5b83359250610443602085016103a4565b91506040840135610453816104d9565b809150509250925092565b60008060408385031215610470578182fd5b823591506020830135610482816104d9565b809150509250929050565b60008160001904831182151516156104a7576104a76104c3565b500290565b6000828210156104be576104be6104c3565b500390565b634e487b7160e01b600052601160045260246000fd5b80151581146104e757600080fd5b5056fea26469706673582212208508789318b131335899b60a62ccc93a060ce07e29440cc03e1054d57ad2f36b64736f6c63430008040033",
    "sourceMap": "82:966:23:-:0;;;221:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;298:5;:14;;-1:-1:-1;;;;;298:14:23;;;-1:-1:-1;;;;;;298:14:23;;;;;;;;322:8;;;;;;;;;;;82:966;;14:188:57;104:13;;-1:-1:-1;;;;;146:31:57;;136:42;;126:2;;192:1;189;182:12;126:2;85:117;;;:::o;207:361::-;322:6;330;383:2;371:9;362:7;358:23;354:32;351:2;;;404:6;396;389:22;351:2;432:51;473:9;432:51;:::i;:::-;422:61;;502:60;558:2;547:9;543:18;502:60;:::i;:::-;492:70;;341:227;;;;;:::o;:::-;82:966:23;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c806383df67471161005b57806383df6747146100f557806384d2422614610108578063a6f19c841461011b578063d684395d1461012e57600080fd5b8063313c06a01461008257806338d07436146100b25780636e1dc66e146100c7575b600080fd5b600154610095906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c56100c036600461045e565b610158565b005b6100e76100d53660046103c0565b60026020526000908152604090205481565b6040519081526020016100a9565b6100c561010336600461041f565b61026c565b6100e76101163660046103c0565b610372565b600054610095906001600160a01b031681565b6100c561013c3660046103da565b6001600160a01b03909116600090815260026020526040902055565b6000546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156101aa57600080fd5b505af11580156101be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e29190610403565b5060015460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561022f57600080fd5b505af1158015610243573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102679190610403565b505050565b6001546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156102be57600080fd5b505af11580156102d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f69190610403565b506000546040516340c10f1960e01b8152336004820152602481018590526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561034357600080fd5b505af1158015610357573d6000803e3d6000fd5b50503360009081526002602052604090204290555050505050565b33600090815260026020526040812054819061038e90426104ac565b905061039d81620f424061048d565b9392505050565b80356001600160a01b03811681146103bb57600080fd5b919050565b6000602082840312156103d1578081fd5b61039d826103a4565b600080604083850312156103ec578081fd5b6103f5836103a4565b946020939093013593505050565b600060208284031215610414578081fd5b815161039d816104d9565b600080600060608486031215610433578081fd5b83359250610443602085016103a4565b91506040840135610453816104d9565b809150509250925092565b60008060408385031215610470578182fd5b823591506020830135610482816104d9565b809150509250929050565b60008160001904831182151516156104a7576104a76104c3565b500290565b6000828210156104be576104be6104c3565b500390565b634e487b7160e01b600052601160045260246000fd5b80151581146104e757600080fd5b5056fea26469706673582212208508789318b131335899b60a62ccc93a060ce07e29440cc03e1054d57ad2f36b64736f6c63430008040033",
    "sourceMap": "82:966:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;140:19;;;;;-1:-1:-1;;;;;140:19:23;;;;;;-1:-1:-1;;;;;2485:32:57;;;2467:51;;2455:2;2440:18;140:19:23;;;;;;;;581:170;;;;;;:::i;:::-;;:::i;:::-;;170:44;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2675:25:57;;;2663:2;2648:18;170:44:23;2630:76:57;343:232:23;;;;;;:::i;:::-;;:::i;757:187::-;;;;;;:::i;:::-;;:::i;112:22::-;;;;;-1:-1:-1;;;;;112:22:23;;;950:96;;;;;;:::i;:::-;-1:-1:-1;;;;;1017:15:23;;;;;;;:9;:15;;;;;:22;950:96;581:170;652:5;;:52;;-1:-1:-1;;;652:52:23;;671:10;652:52;;;1884:34:57;691:4:23;1934:18:57;;;1927:43;1986:18;;;1979:34;;;-1:-1:-1;;;;;652:5:23;;;;:18;;1819::57;;652:52:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;714:2:23;;:30;;-1:-1:-1;;;714:30:23;;726:10;714:30;;;2198:51:57;2265:18;;;2258:34;;;-1:-1:-1;;;;;714:2:23;;;;:11;;2171:18:57;;714:30:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;581:170;;:::o;343:232::-;431:2;;:49;;-1:-1:-1;;;431:49:23;;447:10;431:49;;;1884:34:57;467:4:23;1934:18:57;;;1927:43;1986:18;;;1979:34;;;-1:-1:-1;;;;;431:2:23;;;;:15;;1819:18:57;;431:49:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;490:5:23;;:29;;-1:-1:-1;;;490:29:23;;501:10;490:29;;;2198:51:57;2265:18;;;2258:34;;;-1:-1:-1;;;;;490:5:23;;;;:10;;2171:18:57;;490:29:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;539:10:23;529:21;;;;:9;:21;;;;;553:15;529:39;;-1:-1:-1;;;;;343:232:23:o;757:187::-;887:10;815:7;877:21;;;:9;:21;;;;;;815:7;;859:39;;:15;:39;:::i;:::-;834:64;-1:-1:-1;916:20:23;834:64;933:3;916:20;:::i;:::-;908:29;757:187;-1:-1:-1;;;757:187:23:o;14:173:57:-;82:20;;-1:-1:-1;;;;;131:31:57;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:196::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;393:264::-;461:6;469;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;647:2;632:18;;;;619:32;;-1:-1:-1;;;480:177:57:o;662:255::-;729:6;782:2;770:9;761:7;757:23;753:32;750:2;;;803:6;795;788:22;750:2;840:9;834:16;859:28;881:5;859:28;:::i;922:393::-;996:6;1004;1012;1065:2;1053:9;1044:7;1040:23;1036:32;1033:2;;;1086:6;1078;1071:22;1033:2;1127:9;1114:23;1104:33;;1156:38;1190:2;1179:9;1175:18;1156:38;:::i;:::-;1146:48;;1244:2;1233:9;1229:18;1216:32;1257:28;1279:5;1257:28;:::i;:::-;1304:5;1294:15;;;1023:292;;;;;:::o;1320:319::-;1385:6;1393;1446:2;1434:9;1425:7;1421:23;1417:32;1414:2;;;1467:6;1459;1452:22;1414:2;1508:9;1495:23;1485:33;;1568:2;1557:9;1553:18;1540:32;1581:28;1603:5;1581:28;:::i;:::-;1628:5;1618:15;;;1404:235;;;;;:::o;2711:168::-;2751:7;2817:1;2813;2809:6;2805:14;2802:1;2799:21;2794:1;2787:9;2780:17;2776:45;2773:2;;;2824:18;;:::i;:::-;-1:-1:-1;2864:9:57;;2763:116::o;2884:125::-;2924:4;2952:1;2949;2946:8;2943:2;;;2957:18;;:::i;:::-;-1:-1:-1;2994:9:57;;2933:76::o;3014:127::-;3075:10;3070:3;3066:20;3063:1;3056:31;3106:4;3103:1;3096:15;3130:4;3127:1;3120:15;3146:118;3232:5;3225:13;3218:21;3211:5;3208:32;3198:2;;3254:1;3251;3244:12;3198:2;3188:76;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "claimableTokens(address)": "84d24226",
    "deposit(uint256,address,bool)": "83df6747",
    "gauge()": "a6f19c84",
    "lp()": "313c06a0",
    "setStartTime(address,uint256)": "d684395d",
    "startTime(address)": "6e1dc66e",
    "withdraw(uint256,bool)": "38d07436"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract MockERC20\",\"name\":\"_gauge\",\"type\":\"address\"},{\"internalType\":\"contract MockERC20\",\"name\":\"_lp\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"claimableTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_claimRewards\",\"type\":\"bool\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gauge\",\"outputs\":[{\"internalType\":\"contract MockERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lp\",\"outputs\":[{\"internalType\":\"contract MockERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setStartTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_claimRewards\",\"type\":\"bool\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/MockSiriusFarm.sol\":\"MockSiriusFarm\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/mock/MockERC20.sol\":{\"keccak256\":\"0xf8df59d2004d4e9bb0a69aab4f5b2aefe657a5ec6ed81b138785a052fb2e31e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f70c66349312200cb796693afb7614d12188bbd8bfe8ba07ff72965dedea5f79\",\"dweb:/ipfs/Qmdw9reQNfR6STqEP5te1tvuufk2ao4FBHqUsqfb12LWwa\"]},\"contracts/mock/MockSiriusFarm.sol\":{\"keccak256\":\"0x2c79f530b6ac32d9bb2c447f98def9c5c0a98242e37e5aa479730c515316030a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d5d60cb7e65d32fef19ec5f457dac386e39f7cc763d943e9ea69dd61b8e4cd3\",\"dweb:/ipfs/QmQzyf8VNof5wj6ZCHtiGDURw4HqV4XuyCP4GCwPdzLnho\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.4+commit.c7e474f2"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract MockERC20",
              "name": "_gauge",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20",
              "name": "_lp",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_addr",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimableTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_claimRewards",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "gauge",
          "outputs": [
            {
              "internalType": "contract MockERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lp",
          "outputs": [
            {
              "internalType": "contract MockERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStartTime"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "startTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "_claimRewards",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/mock/MockSiriusFarm.sol": "MockSiriusFarm"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/mock/MockERC20.sol": {
        "keccak256": "0xf8df59d2004d4e9bb0a69aab4f5b2aefe657a5ec6ed81b138785a052fb2e31e8",
        "urls": [
          "bzz-raw://f70c66349312200cb796693afb7614d12188bbd8bfe8ba07ff72965dedea5f79",
          "dweb:/ipfs/Qmdw9reQNfR6STqEP5te1tvuufk2ao4FBHqUsqfb12LWwa"
        ],
        "license": "MIT"
      },
      "contracts/mock/MockSiriusFarm.sol": {
        "keccak256": "0x2c79f530b6ac32d9bb2c447f98def9c5c0a98242e37e5aa479730c515316030a",
        "urls": [
          "bzz-raw://2d5d60cb7e65d32fef19ec5f457dac386e39f7cc763d943e9ea69dd61b8e4cd3",
          "dweb:/ipfs/QmQzyf8VNof5wj6ZCHtiGDURw4HqV4XuyCP4GCwPdzLnho"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238",
        "urls": [
          "bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0",
          "dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/mock/MockSiriusFarm.sol",
    "id": 6692,
    "exportedSymbols": {
      "Context": [
        14030
      ],
      "ERC20": [
        13905
      ],
      "IERC20": [
        13983
      ],
      "IERC20Metadata": [
        14008
      ],
      "MockERC20": [
        6556
      ],
      "MockSiriusFarm": [
        6691
      ]
    },
    "nodeType": "SourceUnit",
    "src": "31:1017:23",
    "nodes": [
      {
        "id": 6558,
        "nodeType": "PragmaDirective",
        "src": "31:22:23",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 6559,
        "nodeType": "ImportDirective",
        "src": "55:25:23",
        "nodes": [],
        "absolutePath": "contracts/mock/MockERC20.sol",
        "file": "./MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6692,
        "sourceUnit": 6557,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6691,
        "nodeType": "ContractDefinition",
        "src": "82:966:23",
        "nodes": [
          {
            "id": 6562,
            "nodeType": "VariableDeclaration",
            "src": "112:22:23",
            "nodes": [],
            "constant": false,
            "functionSelector": "a6f19c84",
            "mutability": "mutable",
            "name": "gauge",
            "nameLocation": "129:5:23",
            "scope": 6691,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$6556",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 6561,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6560,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6556,
                "src": "112:9:23"
              },
              "referencedDeclaration": 6556,
              "src": "112:9:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$6556",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 6565,
            "nodeType": "VariableDeclaration",
            "src": "140:19:23",
            "nodes": [],
            "constant": false,
            "functionSelector": "313c06a0",
            "mutability": "mutable",
            "name": "lp",
            "nameLocation": "157:2:23",
            "scope": 6691,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$6556",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 6564,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6563,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6556,
                "src": "140:9:23"
              },
              "referencedDeclaration": 6556,
              "src": "140:9:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$6556",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 6569,
            "nodeType": "VariableDeclaration",
            "src": "170:44:23",
            "nodes": [],
            "constant": false,
            "functionSelector": "6e1dc66e",
            "mutability": "mutable",
            "name": "startTime",
            "nameLocation": "205:9:23",
            "scope": 6691,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 6568,
              "keyType": {
                "id": 6566,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "178:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "170:27:23",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 6567,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "189:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 6587,
            "nodeType": "FunctionDefinition",
            "src": "221:116:23",
            "nodes": [],
            "body": {
              "id": 6586,
              "nodeType": "Block",
              "src": "288:49:23",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 6580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6578,
                      "name": "gauge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6562,
                      "src": "298:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$6556",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6579,
                      "name": "_gauge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6572,
                      "src": "306:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$6556",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "298:14:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$6556",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 6581,
                  "nodeType": "ExpressionStatement",
                  "src": "298:14:23"
                },
                {
                  "expression": {
                    "id": 6584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6582,
                      "name": "lp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6565,
                      "src": "322:2:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$6556",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6583,
                      "name": "_lp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6575,
                      "src": "327:3:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$6556",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "322:8:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$6556",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 6585,
                  "nodeType": "ExpressionStatement",
                  "src": "322:8:23"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 6576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6572,
                  "mutability": "mutable",
                  "name": "_gauge",
                  "nameLocation": "252:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 6587,
                  "src": "242:16:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MockERC20_$6556",
                    "typeString": "contract MockERC20"
                  },
                  "typeName": {
                    "id": 6571,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6570,
                      "name": "MockERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6556,
                      "src": "242:9:23"
                    },
                    "referencedDeclaration": 6556,
                    "src": "242:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$6556",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6575,
                  "mutability": "mutable",
                  "name": "_lp",
                  "nameLocation": "278:3:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 6587,
                  "src": "268:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MockERC20_$6556",
                    "typeString": "contract MockERC20"
                  },
                  "typeName": {
                    "id": 6574,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6573,
                      "name": "MockERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6556,
                      "src": "268:9:23"
                    },
                    "referencedDeclaration": 6556,
                    "src": "268:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$6556",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "232:55:23"
            },
            "returnParameters": {
              "id": 6577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "288:0:23"
            },
            "scope": 6691,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 6625,
            "nodeType": "FunctionDefinition",
            "src": "343:232:23",
            "nodes": [],
            "body": {
              "id": 6624,
              "nodeType": "Block",
              "src": "421:154:23",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6599,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "447:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "447:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 6603,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "467:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockSiriusFarm_$6691",
                              "typeString": "contract MockSiriusFarm"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockSiriusFarm_$6691",
                              "typeString": "contract MockSiriusFarm"
                            }
                          ],
                          "id": 6602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "459:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6601,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "459:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "459:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6605,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6589,
                        "src": "474:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6596,
                        "name": "lp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6565,
                        "src": "431:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$6556",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 6598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13519,
                      "src": "431:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 6606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "431:49:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6607,
                  "nodeType": "ExpressionStatement",
                  "src": "431:49:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6611,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "501:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "501:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6613,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6589,
                        "src": "513:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6608,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6562,
                        "src": "490:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$6556",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 6610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6542,
                      "src": "490:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 6614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "490:29:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6615,
                  "nodeType": "ExpressionStatement",
                  "src": "490:29:23"
                },
                {
                  "expression": {
                    "id": 6622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6616,
                        "name": "startTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6569,
                        "src": "529:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6619,
                      "indexExpression": {
                        "expression": {
                          "id": 6617,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "539:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "539:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "529:21:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 6620,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "553:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 6621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "553:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "529:39:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6623,
                  "nodeType": "ExpressionStatement",
                  "src": "529:39:23"
                }
              ]
            },
            "functionSelector": "83df6747",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "352:7:23",
            "parameters": {
              "id": 6594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6589,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "368:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 6625,
                  "src": "360:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "360:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6591,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "383:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 6625,
                  "src": "375:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6590,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "375:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6593,
                  "mutability": "mutable",
                  "name": "_claimRewards",
                  "nameLocation": "397:13:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 6625,
                  "src": "392:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6592,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "392:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "359:52:23"
            },
            "returnParameters": {
              "id": 6595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "421:0:23"
            },
            "scope": 6691,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6653,
            "nodeType": "FunctionDefinition",
            "src": "581:170:23",
            "nodes": [],
            "body": {
              "id": 6652,
              "nodeType": "Block",
              "src": "642:109:23",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6635,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "671:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "671:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 6639,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "691:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockSiriusFarm_$6691",
                              "typeString": "contract MockSiriusFarm"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockSiriusFarm_$6691",
                              "typeString": "contract MockSiriusFarm"
                            }
                          ],
                          "id": 6638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "683:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6637,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "683:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "683:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6641,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6627,
                        "src": "698:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6632,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6562,
                        "src": "652:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$6556",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 6634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13519,
                      "src": "652:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 6642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "652:52:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6643,
                  "nodeType": "ExpressionStatement",
                  "src": "652:52:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6647,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "726:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "726:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6649,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6627,
                        "src": "738:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6644,
                        "name": "lp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6565,
                        "src": "714:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$6556",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 6646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13443,
                      "src": "714:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 6650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "714:30:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6651,
                  "nodeType": "ExpressionStatement",
                  "src": "714:30:23"
                }
              ]
            },
            "functionSelector": "38d07436",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "590:8:23",
            "parameters": {
              "id": 6630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6627,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "607:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 6653,
                  "src": "599:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6626,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6629,
                  "mutability": "mutable",
                  "name": "_claimRewards",
                  "nameLocation": "618:13:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 6653,
                  "src": "613:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6628,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "613:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "598:34:23"
            },
            "returnParameters": {
              "id": 6631,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "642:0:23"
            },
            "scope": 6691,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6676,
            "nodeType": "FunctionDefinition",
            "src": "757:187:23",
            "nodes": [],
            "body": {
              "id": 6675,
              "nodeType": "Block",
              "src": "824:120:23",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    6661
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6661,
                      "mutability": "mutable",
                      "name": "pendingRewards",
                      "nameLocation": "842:14:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 6675,
                      "src": "834:22:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6660,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "834:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6669,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6662,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "859:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 6663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "859:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 6664,
                        "name": "startTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6569,
                        "src": "877:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6667,
                      "indexExpression": {
                        "expression": {
                          "id": 6665,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "887:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "887:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "877:21:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "859:39:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "834:64:23"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6670,
                          "name": "pendingRewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6661,
                          "src": "916:14:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "316536",
                          "id": 6671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "933:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1e6"
                        },
                        "src": "916:20:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 6673,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "915:22:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6659,
                  "id": 6674,
                  "nodeType": "Return",
                  "src": "908:29:23"
                }
              ]
            },
            "functionSelector": "84d24226",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimableTokens",
            "nameLocation": "766:15:23",
            "parameters": {
              "id": 6656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6655,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "790:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 6676,
                  "src": "782:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6654,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "782:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "781:15:23"
            },
            "returnParameters": {
              "id": 6659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6658,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6676,
                  "src": "815:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6657,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "815:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "814:9:23"
            },
            "scope": 6691,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6690,
            "nodeType": "FunctionDefinition",
            "src": "950:96:23",
            "nodes": [],
            "body": {
              "id": 6689,
              "nodeType": "Block",
              "src": "1007:39:23",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 6687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6683,
                        "name": "startTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6569,
                        "src": "1017:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6685,
                      "indexExpression": {
                        "id": 6684,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6678,
                        "src": "1027:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1017:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6686,
                      "name": "time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6680,
                      "src": "1035:4:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1017:22:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6688,
                  "nodeType": "ExpressionStatement",
                  "src": "1017:22:23"
                }
              ]
            },
            "functionSelector": "d684395d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStartTime",
            "nameLocation": "959:12:23",
            "parameters": {
              "id": 6681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6678,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "980:4:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 6690,
                  "src": "972:12:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6677,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6680,
                  "mutability": "mutable",
                  "name": "time",
                  "nameLocation": "994:4:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 6690,
                  "src": "986:12:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6679,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "986:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "971:28:23"
            },
            "returnParameters": {
              "id": 6682,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1007:0:23"
            },
            "scope": 6691,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          6691
        ],
        "name": "MockSiriusFarm",
        "nameLocation": "91:14:23",
        "scope": 6692,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 23
}